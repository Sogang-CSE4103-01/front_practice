"use strict";

require("@testing-library/jest-dom");
var _react = require("@testing-library/react");
var _RadioItem = _interopRequireWildcard(require("../RadioItem"));
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
describe('RadioItem Specs', function () {
  test('should support a custom icon', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_RadioItem.RadioItemBase, {
      icon: "check",
      selected: true,
      children: "Hello RadioItem"
    }));
    var radioItemElement = _react.screen.getByRole('checkbox');
    var expected = 'âœ“';
    var actual = radioItemElement.children.item(1).textContent;
    expect(actual).toBe(expected);
  });
  test('should render `children`', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_RadioItem.RadioItemBase, {
      children: "Hello RadioItem"
    }));
    var actual = _react.screen.getByText('Hello RadioItem');
    expect(actual).toBeInTheDocument();
  });
  test('should render a disabled RadioItem when `disabled` is true', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_RadioItem.RadioItemBase, {
      disabled: true,
      children: "Hello RadioItem"
    }));
    var radioItem = _react.screen.getByRole('checkbox');
    expect(radioItem).toHaveAttribute('disabled');
  });
  test('should render a `slot before`', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_RadioItem.RadioItemBase, {
      slotBefore: "arrowup",
      children: "Hello RadioItem"
    }));
    var actual = _react.screen.getByText('arrowup');
    expect(actual).toBeInTheDocument();
  });
  test('should select RadioItem with click', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_RadioItem["default"], {
      children: "Hello RadioItem"
    }));
    var radioItem = _react.screen.getAllByRole('checkbox');
    _react.fireEvent.click(radioItem[0]);
    var expected = 'selected';
    expect(radioItem[0]).toHaveClass(expected);
  });
  test('should not select RadioItem with click when disabled', function () {
    (0, _react.render)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_RadioItem["default"], {
      disabled: true,
      children: "Hello RadioItem"
    }));
    var radioItem = _react.screen.getAllByRole('checkbox');
    _react.fireEvent.click(radioItem[0]);
    var expected = 'selected';
    expect(radioItem[0]).not.toHaveClass(expected);
  });
});