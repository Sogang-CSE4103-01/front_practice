"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.PanelsRouter = exports.PanelsContext = void 0;
var _react = require("react");
var _hoc = _interopRequireDefault(require("@enact/core/hoc"));
var _propTypes = _interopRequireDefault(require("@enact/core/internal/prop-types"));
var _useChainRefs = _interopRequireDefault(require("@enact/core/useChainRefs"));
var _propTypes2 = _interopRequireDefault(require("prop-types"));
var _useAutoFocus = _interopRequireDefault(require("./useAutoFocus"));
var _useFocusOnTransition2 = _interopRequireDefault(require("./useFocusOnTransition"));
var _useToggleRole2 = _interopRequireDefault(require("./useToggleRole"));
var _jsxRuntime = require("react/jsx-runtime");
var _excluded = ["children", "componentRef", "data-spotlight-id", "index", "onTransition", "onWillTransition", "rtl", "subtitle", "title"],
  _excluded2 = ["onWillTransition"];
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
var PanelsContext = exports.PanelsContext = /*#__PURE__*/(0, _react.createContext)(null);

// single-index ViewManagers need some help knowing when the transition direction needs to change
// because the index is always 0 from its perspective.
function useReverseTransition() {
  var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;
  var rtl = arguments.length > 1 ? arguments[1] : undefined;
  var prevIndex = (0, _react.useRef)(index);
  var reverse = (0, _react.useRef)(rtl);
  // If the index was changed, the panel transition is occured on the next cycle by `Panel`
  var prev = {
    reverseTransition: reverse.current,
    prevIndex: prevIndex.current
  };
  if (prevIndex.current !== index) {
    reverse.current = rtl ? index > prevIndex.current : index < prevIndex.current;
    prevIndex.current = index;
  }
  return prev;
}
var defaultConfig = {
  type: 'wizard'
};

/**
 * PanelsRouter passes the children, footer, subtitle, and title from
 * {@link sandstone/WizardPanels.Panel|WizardPanel} to
 * {@link sandstone/WizardPanels.WizardPanelsBase|WizardPanelsBase} and passes the children from
 * {@link sandstone/QuickGuidePanels.Panel|QuickGuidePanel} to
 * {@link sandstone/QuickGuidePanels.QuickGuidePanelsBase|QuickGuidePanelsBase}.
 *
 * @class PanelsRouter
 * @memberof sandstone/internal/Panels
 * @hoc
 * @private
 */
var PanelsRouter = exports.PanelsRouter = (0, _hoc["default"])(defaultConfig, function (config, Wrapped) {
  var PanelsProvider = function PanelsProvider(_ref) {
    var children = _ref.children,
      componentRef = _ref.componentRef,
      spotlightId = _ref['data-spotlight-id'],
      _ref$index = _ref.index,
      index = _ref$index === void 0 ? 0 : _ref$index,
      onTransition = _ref.onTransition,
      onWillTransition = _ref.onWillTransition,
      rtl = _ref.rtl,
      _ref$subtitle = _ref.subtitle,
      subtitle = _ref$subtitle === void 0 ? '' : _ref$subtitle,
      _ref$title = _ref.title,
      title = _ref$title === void 0 ? '' : _ref$title,
      rest = _objectWithoutProperties(_ref, _excluded);
    var _useState = (0, _react.useState)(null),
      _useState2 = _slicedToArray(_useState, 2),
      panel = _useState2[0],
      setPanel = _useState2[1];
    var _useToggleRole = (0, _useToggleRole2["default"])(),
      a11yRef = _useToggleRole.ref,
      a11yOnWillTransition = _useToggleRole.onWillTransition;
    var autoFocus = (0, _useAutoFocus["default"])({
      autoFocus: 'default-element',
      hideChildren: panel == null
    });
    var ref = (0, _useChainRefs["default"])(autoFocus, a11yRef, componentRef);
    var _useReverseTransition = useReverseTransition(index, rtl),
      reverseTransition = _useReverseTransition.reverseTransition,
      prevIndex = _useReverseTransition.prevIndex;
    var _useFocusOnTransition = (0, _useFocusOnTransition2["default"])({
        onTransition: onTransition,
        onWillTransition: onWillTransition,
        spotlightId: spotlightId
      }),
      focusOnWillTransition = _useFocusOnTransition.onWillTransition,
      transition = _objectWithoutProperties(_useFocusOnTransition, _excluded2);
    var handleWillTransition = (0, _react.useCallback)(function (ev) {
      focusOnWillTransition(ev);
      a11yOnWillTransition(ev);
    }, [a11yOnWillTransition, focusOnWillTransition]);
    var totalPanels = panel ? _react.Children.count(children) : 0;
    var currentTitle = panel && panel.title ? panel.title : title;
    var currentSubTitle = panel && panel.subtitle ? panel.subtitle : subtitle;
    // eslint-disable-next-line enact/prop-types
    delete rest.onBack;
    return /*#__PURE__*/(0, _jsxRuntime.jsxs)(PanelsContext.Provider, {
      value: setPanel,
      children: [_react.Children.toArray(children)[index], config.type === 'wizard' ? /*#__PURE__*/(0, _jsxRuntime.jsx)(Wrapped, _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, rest), panel), transition), {}, {
        componentRef: ref,
        "data-spotlight-id": spotlightId,
        index: index,
        onWillTransition: handleWillTransition,
        title: currentTitle,
        subtitle: currentSubTitle,
        totalPanels: totalPanels,
        reverseTransition: reverseTransition,
        children: panel && panel.children ? /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
          className: "enact-fit",
          children: panel.children
        }, "panel".concat(prevIndex)) : null
      })) : /*#__PURE__*/(0, _jsxRuntime.jsx)(Wrapped, _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, rest), panel), transition), {}, {
        componentRef: ref,
        "data-spotlight-id": spotlightId,
        index: index,
        onWillTransition: handleWillTransition,
        totalPanels: totalPanels,
        children: panel && panel.children ? /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
          className: "enact-fit",
          children: panel.children
        }, "panel".concat(prevIndex)) : null
      }))]
    });
  };
  PanelsProvider.propTypes = /** @lends sandstone/internal/Panels.PanelsRouter.prototype */{
    /**
     * Obtains a reference to the root node.
     *
     * @type {Function|Object}
     * @private
     */
    componentRef: _propTypes["default"].ref,
    /**
    * The spotlight id for the panel
    *
    * @type {String}
    * @private
    */
    'data-spotlight-id': _propTypes2["default"].string,
    /**
    * The currently selected step.
    *
    * @type {Number}
    * @default 0
    * @private
    */
    index: _propTypes2["default"].number,
    /**
     * Disables panel transitions.
     *
     * @type {Boolean}
     * @public
     */
    noAnimation: _propTypes2["default"].bool,
    /**
    * Called when a transition completes
    *
    * @type {Function}
    * @private
    */
    onTransition: _propTypes2["default"].func,
    /**
    * Called when a transition begins
    *
    * @type {Function}
    * @private
    */
    onWillTransition: _propTypes2["default"].func,
    /**
     * Used to determine the transition direction
     *
     * @type {Boolean}
     * @private
     */
    rtl: _propTypes2["default"].bool,
    /**
    * The "default" subtitle for WizardPanels if subtitle isn't explicitly set in
    * {@link sandstone/WizardPanels.Panel|Panel}.
    * @example
    * 	<WizardPanels subtitle="Subtitle">
    *		<WizardPanels.Panel>
    *			lorem ipsum ...
    *		</WizardPanels.Panel>
    *	</WizardPanels>
    *
    * @type {String}
    * @private
    */
    subtitle: _propTypes2["default"].string,
    /**
    * The "default" title for WizardPanels if title isn't explicitly set in
    * {@link sandstone/WizardPanels.Panel|Panel}.
    * @example
    * 	<WizardPanels title="Title">
    *		<WizardPanels.Panel>
    *			lorem ipsum ...
    *		</WizardPanels.Panel>
    *	</WizardPanels>
    *
    * @type {String}
    * @private
    */
    title: _propTypes2["default"].string
  };
  return PanelsProvider;
});
var _default = exports["default"] = PanelsRouter;