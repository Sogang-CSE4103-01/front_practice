[{"/home/connected/enact-template/src/index.js":"1","/home/connected/enact-template/src/libs/utils.js":"2","/home/connected/enact-template/src/App/App.js":"3","/home/connected/enact-template/src/App/AppState.js":"4","/home/connected/enact-template/src/views/Login.js":"5","/home/connected/enact-template/src/views/LoginState.js":"6","/home/connected/enact-template/src/views/Main.js":"7","/home/connected/enact-template/src/libs/log.js":"8","/home/connected/enact-template/src/hooks/useData.js":"9","/home/connected/enact-template/src/constants/domEvents.js":"10","/home/connected/enact-template/src/views/SignupState.js":"11","/home/connected/enact-template/src/views/MainState.js":"12","/home/connected/enact-template/src/views/VideoPlayer.js":"13","/home/connected/enact-template/src/libs/services.js":"14","/home/connected/enact-template/src/libs/request.js":"15","/home/connected/enact-template/__mocks__/@enact/webos/LS2Request.js":"16"},{"size":310,"mtime":1731404601872,"results":"17","hashOfConfig":"18"},{"size":638,"mtime":1731404601872,"results":"19","hashOfConfig":"18"},{"size":1492,"mtime":1732607344347,"results":"20","hashOfConfig":"18"},{"size":1909,"mtime":1731404601868,"results":"21","hashOfConfig":"18"},{"size":6208,"mtime":1732604012244,"results":"22","hashOfConfig":"18"},{"size":2572,"mtime":1732607244458,"results":"23","hashOfConfig":"18"},{"size":8495,"mtime":1732192211508,"results":"24","hashOfConfig":"18"},{"size":404,"mtime":1731404601872,"results":"25","hashOfConfig":"18"},{"size":1429,"mtime":1731404601872,"results":"26","hashOfConfig":"18"},{"size":324,"mtime":1731404601872,"results":"27","hashOfConfig":"18"},{"size":2986,"mtime":1732604825653,"results":"28","hashOfConfig":"18"},{"size":3555,"mtime":1732181367230,"results":"29","hashOfConfig":"18"},{"size":2741,"mtime":1732192211508,"results":"30","hashOfConfig":"18"},{"size":215,"mtime":1731404601872,"results":"31","hashOfConfig":"18"},{"size":844,"mtime":1731404601872,"results":"32","hashOfConfig":"18"},{"size":1926,"mtime":1731404601860,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"5qo19t",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":3,"source":"50","usedDeprecatedRules":"37"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"37"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":6,"source":"70","usedDeprecatedRules":"37"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"37"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"/home/connected/enact-template/src/index.js",[],[],["87"],"/home/connected/enact-template/src/libs/utils.js",[],[],"/home/connected/enact-template/src/App/App.js",["88","89","90","91","92","93","94"],[],"/home/connected/enact-template/src/App/AppState.js",[],[],"/home/connected/enact-template/src/views/Login.js",["95","96","97","98","99","100","101","102"],[],"/*\n// src/views/Login.js\nimport BodyText from '@enact/sandstone/BodyText';\nimport { Header, Panel } from '@enact/sandstone/Panels';\nimport { Input } from '@enact/sandstone/Input'; // Enact Input 컴포넌트\nimport { Button } from '@enact/sandstone/Button'; // Enact Button 컴포넌트\nimport { useLoginState } from './LoginState';\nimport css from './Login.module.less';\nimport $L from '@enact/i18n/$L';\n\nconst Login = () => {\n    const { username, password, handleInputChange, handleLogin, handleNavigateToSignup } = useLoginState();\n\n    return (\n        <Panel>\n            <Header title={$L('로그인')} />\n            <div className={css.loginContainer}>\n                <BodyText>{$L('로그인하여 계속 진행하세요.')}</BodyText>\n                <Input\n                    type=\"text\"\n                    name=\"username\"\n                    placeholder={$L('사용자 이름')}\n                    value={username} // 상태와 연결\n                    onChange={handleInputChange} // 핸들러와 연결\n                    className={css.input}\n                />\n                <Input\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder={$L('비밀번호')}\n                    value={password} // 상태와 연결\n                    onChange={handleInputChange} // 핸들러와 연결\n                    className={css.input}\n                />\n                <Button onClick={handleLogin} className={css.loginButton}>\n                    {$L('로그인')}\n                </Button>\n                <Button onClick={handleNavigateToSignup} className={css.signupButton}>\n                    {$L('회원가입')}\n                </Button>\n            </div>\n        </Panel>\n    );\n};\n\nexport default Login;\n*/\n\n// src/views/Login.js\n// src/views/Login.js\nimport BodyText from '@enact/sandstone/BodyText';\nimport {Header, Panel} from '@enact/sandstone/Panels';\nimport $L from '@enact/i18n/$L';\nimport Button from '@enact/sandstone/Button';\nimport Input from '@enact/sandstone/Input';\nimport css from './Login.module.less';\n\nimport css2 from './Signup.module.less';\nimport TabLayout, {Tab} from '@enact/sandstone/TabLayout';\n\nimport { useSignupState } from './SignupState';\nimport {useLogin} from './LoginState';\n\n//const {username,password,handleSignupUsernameChange,handleSignupPasswordChange,handleSignup} = useSignupState();\nconst Login = ({onSubmit, onClose}) => {\n    console.log(\"rendering login\");\n    //const {handleSignupUsernameChange,handleSignupPasswordChange,handleSignup} = useSignupState();\n\n    const {\n        newusername, \n        newpassword, \n        handleSignupUsernameChange, \n        handleSignupPasswordChange,\n        handleSignup,\n    } = useSignupState();\n\n    const {\n        isLoginOpen,\n\t\thandleLoginOpen,\n\t\thandleLoginClose,\n\t\thandleLogin,\n        handleCancel,\n\t\thandleUsernameChange,\n\t\thandlePasswordChange,\n\t\tusername,\n\t\tpassword,\n    } = useLogin();\n\n    return(\n        <Panel >\n            <Header title={$L('Log In and Sign Up')}/>\n            <TabLayout>\n                <Tab title = {$L('Log In')}>\n                    <div className={css.loginContainer}>\n                        <BodyText className={css.title}>Login</BodyText>\n                        <Input\n                            placeholder=\"Username\"\n                            value={username}\n                            onChange={handleUsernameChange}\n                            type=\"text\"\n                            className={css.input}\n                        />\n                        <Input\n                            placeholder=\"Password\"\n                            value={password}\n                            onChange={handlePasswordChange}\n                            type=\"password\"\n                            className={css.input}\n                        />\n                        <Button onClick={handleLogin} size=\"small\" className={css.button}>\n                            Login\n                        </Button>\n                        <Button onClick={handleCancel} size=\"small\" className={css.button}>\n                            Cancel\n                        </Button>\n                    </div>\n                </Tab>\n\n                <Tab title = {$L('Sign Up')}>\n                    <div className={css2.signupContainer}>\n                        <BodyText>{$L('회원가입하여 서비스를 이용하세요.')}</BodyText>\n                        <Input\n                            type=\"text\"\n                            name=\"username\"\n                            placeholder={$L('사용자 이름')}\n                            value={newusername}\n                            onChange={handleSignupUsernameChange}\n                            className={css2.inputField}\n                        />\n                        <Input\n                            type=\"password\"\n                            name=\"password\"\n                            placeholder={$L('비밀번호')}\n                            value={newpassword}\n                            onChange={handleSignupPasswordChange}\n                            className={css2.inputField}\n                        />\n                        <Button onClick={handleSignup} className={css2.signupButton}>\n                            {$L('회원가입')}\n                        </Button>\n                    </div>\n\n                </Tab>\n            </TabLayout>\n        </Panel>\n    )\n}\n\nexport default Login;\n/*\nconst Login = ({ onClose, onSubmit, username, password, handleUsernameChange, handlePasswordChange }) => {\n\treturn (\n\t\t<div className={css.loginContainer}>\n\t\t\t<BodyText className={css.title}>Login</BodyText>\n\t\t\t<Input\n\t\t\t\tplaceholder=\"Username\"\n\t\t\t\tvalue={username}\n\t\t\t\tonChange={handleUsernameChange}\n\t\t\t\ttype=\"text\"\n\t\t\t\tclassName={css.input}\n\t\t\t/>\n\t\t\t<Input\n\t\t\t\tplaceholder=\"Password\"\n\t\t\t\tvalue={password}\n\t\t\t\tonChange={handlePasswordChange}\n\t\t\t\ttype=\"password\"\n\t\t\t\tclassName={css.input}\n\t\t\t/>\n\t\t\t<Button onClick={onSubmit} size=\"small\" className={css.button}>\n\t\t\t\tLogin\n\t\t\t</Button>\n\t\t\t<Button onClick={onClose} size=\"small\" className={css.button}>\n\t\t\t\tCancel\n\t\t\t</Button>\n\t\t</div>\n\t);\n}; */\n\n//export default Login;\n\n","/home/connected/enact-template/src/views/LoginState.js",["103","104","105","106"],[],"// src/views/LoginState.js\nimport { useState, useCallback } from 'react';\nimport debugLog from '../libs/log';\n\nexport const useLogin = () => {\n\tconst [isLoginOpen, setLoginOpen] = useState(true); // 초기값을 true로 설정\n\tconst [username, setUsername] = useState('');\n\tconst [password, setPassword] = useState('');\n\tconst [isLoginSuccess, setLoginSuccess] = useState(false);\n\n\tconst handleLoginOpen = useCallback(() => {\n\t\tsetLoginOpen(true);\n\t}, []);\n\n\tconst handleLoginClose = useCallback(() => {\n\t\tsetLoginOpen(false);\n\t\tsetLoginSuccess(true);\n\t\t//setUsername('');\n\t\t//setPassword('');\n\t}, [isLoginSuccess]);\n\n\tconst handleUsernameChange = useCallback((e) => {\n\t\tif (e && e.value !== undefined) {\n\t\t\tsetUsername(e.value);\n\t\t\tconsole.log('log in : name submitted');\n\t\t} else {\n\t\t\tconsole.warn('handleUsernameChange: Invalid event object', e);\n\t\t}\n\t}, []);\n\n\tconst handlePasswordChange = useCallback((e) => {\n\t\tif (e && e.value !== undefined) {\n\t\t\tsetPassword(e.value);\n\t\t\tconsole.log('log in : PW submitted');\n\t\t} else {\n\t\t\tconsole.warn('handlePasswordChange: Invalid event object', e);\n\t\t}\n\t}, []);\n\n\tconst handleCancel = useCallback(() => {\n\t\t//setLoginOpen(false);\n\t\tsetUsername('');\n\t\tsetPassword('');\n\t},);\n\n\tconst handleLogin = useCallback(async () => {\n\t\tdebugLog('Attempting login', { username, password });\n\t\ttry {\n\t\t\t//const response = await fetch(`https://cors-anywhere-herokuapp.com/https://connected-backend-yir6.onrender.com/api/login`, {\n\t\t\tconst response = await fetch('https://connected-backend-yir6.onrender.com/api/login?username=${username}&password=${password}', {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t\tbody : JSON.stringify({username, password}),\n\t\t\t\t//credentials: 'include',\n\t\t\t});\n\t\t\tif (!response.ok) {\n\t\t\t\t//throw new Error('Login failed');\n\t\t\t\tconst data = await response.json();\n\t\t\t\tdebugLog('Login 111', data);\n\t\t\t\tsetLoginSuccess(true);\n\t\t\t\thandleLoginClose();\n\t\t\t}\n\t\t\tconst data = await response.json();\n\t\t\tdebugLog('Login successful', data);\n\t\t\tsetLoginSuccess(true);\n\t\t\thandleLoginClose();\n\t\t} catch (error) {\n\t\t\t//const data = await response.json();\n\t\t\tdebugLog('Login failed 222', error.message);\n\t\t\t//debugLog('Login 111', data);\n\t\t\tsetLoginSuccess(true);\n\t\t\t//isLoginSuccess = true;\n\t\t\tconsole.log(isLoginSuccess);\n\t\t\thandleLoginClose();\n\t\t}\n\t}, [username, password, isLoginSuccess]);\n\n\treturn {\n\t\tisLoginOpen,\n\t\tisLoginSuccess,\n\t\thandleLoginOpen,\n\t\thandleLoginClose,\n\t\thandleLogin,\n\t\thandleUsernameChange,\n\t\thandlePasswordChange,\n\t\thandleCancel,\n\t\tusername,\n\t\tpassword\n\t};\n};\n","/home/connected/enact-template/src/views/Main.js",[],["107","108","109","110","111","112"],"/home/connected/enact-template/src/libs/log.js",[],[],"/home/connected/enact-template/src/hooks/useData.js",[],[],"/home/connected/enact-template/src/constants/domEvents.js",[],[],"/home/connected/enact-template/src/views/SignupState.js",["113","114","115","116","117","118","119","120","121","122"],[],"// src/views/SignupState.js\nimport { useState, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom'; // useHistory를 useNavigate로 변경\nimport debugLog from '../libs/log';\nimport Popup from '@enact/sandstone/Popup';\n\nexport const useSignupState = () => {\n    const [newusername, setUsername] = useState('');\n    const [newpassword, setPassword] = useState('');\n    const [isPopupOpen, setIsPopupOpen] = useState(false);\n    const [popupMessage, setPopupMessage] = useState('');\n    //const navigate = useNavigate(); // 페이지 이동을 위한 navigate 객체\n\n    const handleSignupUsernameChange = useCallback((e) => {\n        //const { name, value } = event.target;\n        if (e && e.value !== undefined) {\n            setUsername(e.value); // 사용자 이름 상태 업데이트\n            console.log('sign in : name changed');\n        } else {\n            console.log('handle User name change Sing in erorr');\n        }\n    }, []);\n\n    const handleSignupPasswordChange = useCallback((e) => {\n\t\tif (e && e.value !== undefined) {\n\t\t\tsetPassword(e.value);\n            console.log('sign in : password changed');\n\t\t} else {\n\t\t\tconsole.log('handle password change Sing in erorr');\n\t\t}\n\t}, []);\n    \n    /*\n    const handlePasswordChange = useCallback((e) => {\n\t\tif (e && e.value !== undefined) {\n\t\t\tsetPassword(e.value);\n\t\t} else {\n\t\t\tconsole.warn('handlePasswordChange: Invalid event object', e);\n\t\t}\n\t}, []);*/\n\n    const handleSignup = useCallback(async () => {\n        debugLog('Attempt Sign In', {newusername, newpassword}); // 디버그 로그 출력\n        //navigate('/login'); // 회원가입 후 로그인 화면으로 이동 (필요에 따라 변경 가능)\n        try{\n            //const response = await fetch('https://cors-anywhere-herokuapp.com/https://connected-backend-yir6.onrender.com/api/register', {\n            const response = await fetch('https://connected-backend-yir6.onrender.com/api/register?username=${username}&password=${password}', {\n                method: 'POST',\n                headers: {\n                    'Content-Type' : 'application/json',\n                },\n                body : JSON.stringify({newusername, newpassword}),\n                //credentials : 'include',\n            });\n            if (!response.ok) {\n\t\t\t\tthrow new Error('Sign in failed');\n\t\t\t}\n            const data = await response.json();\n\t\t\tdebugLog('Sign In successful', data);\n\n            //alert('Sign Up Successful!');\n            setPopupMessage(\"Sign Up Successful!\");\n\t\t\t//handleLoginClose();\n\n        }catch (error){\n            console.error('Sign Up Error : ', error.message);\n            setPopupMessage(\"Sign Up failed!\");\n            //alert(\"Sign Up Failed\");\n        }finally{\n            setIsPopupOpen(true);\n        }\n    \n\n    }, [newusername, newpassword]);\n\n    return { \n        newusername, \n        newpassword, \n        handleSignupUsernameChange, \n        handleSignupPasswordChange,\n        handleSignup };\n};\n","/home/connected/enact-template/src/views/MainState.js",[],[],"/home/connected/enact-template/src/views/VideoPlayer.js",["123"],[],"// src/views/VideoPlayer.js\nimport Button from '@enact/sandstone/Button';\nimport { MediaControls } from '@enact/sandstone/MediaPlayer';\nimport VideoPlayer from '@enact/sandstone/VideoPlayer';\nimport { useCallback, useRef, useState } from 'react';\nimport './VideoPlayer.css'; // CSS 파일 추가\n\nconst SelectableVideoPlayer = ({ video, onClose }) => {\n    const videoRef = useRef(null);\n    const [selection, setSelection] = useState([]);\n\n    const handleToggleSelection = useCallback(() => {\n        const { currentTime } = videoRef.current.getMediaState();\n\n        if (selection.length !== 1) {\n            setSelection([currentTime]);\n        } else {\n            setSelection([selection[0], currentTime].sort((a, b) => a - b));\n        }\n    }, [selection]);\n\n    const handleTimeUpdate = useCallback(() => {\n        if (selection.length === 2) {\n            const [selectionStart, selectionEnd] = selection;\n            const { currentTime } = videoRef.current.getMediaState();\n\n            if (currentTime > selectionEnd || currentTime < selectionStart) {\n                videoRef.current.seek(selectionStart);\n            }\n        }\n    }, [selection]);\n\n    const handleSeekOutsideSelection = useCallback((ev) => {\n        ev.preventDefault();\n\n        if (selection.length === 2) {\n            const [selectionStart, selectionEnd] = selection;\n            const { time: currentTime } = ev;\n\n            if (currentTime < selectionStart) {\n                videoRef.current.seek(selectionStart);\n            } else if (currentTime > selectionEnd) {\n                videoRef.current.seek(selectionEnd);\n            }\n        }\n    }, [selection]);\n\n    const setVideo = (video) => {\n        videoRef.current = video;\n    };\n\n    const selecting = selection.length === 1;\n\n    return (\n        <div className=\"video-modal\"> {/* 모달 스타일 적용 */}\n            <VideoPlayer\n                loop\n                onSeekOutsideSelection={handleSeekOutsideSelection}\n                onTimeUpdate={handleTimeUpdate}\n                selection={selection}\n                ref={setVideo}\n                style={{ width: '100%', height: '100%' }} // 전체 화면 차지\n            >\n                <MediaControls>\n                    <Button onClick={handleToggleSelection} selected={selecting}>\n                        {selecting ? 'Play Loop' : 'Set End Time'}\n                    </Button>\n                </MediaControls>\n                <source src={video.src} type=\"video/mp4\" />\n            </VideoPlayer>\n            <Button onClick={onClose} style={{ position: 'absolute', top: '20px', right: '20px', zIndex: 1001 }}>\n                X\n            </Button>\n        </div>\n    );\n};\n\nexport default SelectableVideoPlayer;\n","/home/connected/enact-template/src/libs/services.js",[],[],"/home/connected/enact-template/src/libs/request.js",[],[],"/home/connected/enact-template/__mocks__/@enact/webos/LS2Request.js",[],[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":33,"column":3,"nodeType":"128","messageId":"129","endLine":33,"endColumn":18},{"ruleId":"126","severity":1,"message":"130","line":35,"column":3,"nodeType":"128","messageId":"129","endLine":35,"endColumn":14},{"ruleId":"126","severity":1,"message":"131","line":36,"column":9,"nodeType":"128","messageId":"129","endLine":36,"endColumn":21},{"ruleId":"126","severity":1,"message":"132","line":37,"column":3,"nodeType":"128","messageId":"129","endLine":37,"endColumn":23},{"ruleId":"126","severity":1,"message":"133","line":38,"column":3,"nodeType":"128","messageId":"129","endLine":38,"endColumn":23},{"ruleId":"126","severity":1,"message":"134","line":39,"column":3,"nodeType":"128","messageId":"129","endLine":39,"endColumn":11},{"ruleId":"126","severity":1,"message":"135","line":40,"column":3,"nodeType":"128","messageId":"129","endLine":40,"endColumn":11},{"ruleId":"126","severity":1,"message":"136","line":65,"column":17,"nodeType":"128","messageId":"129","endLine":65,"endColumn":25},{"ruleId":"126","severity":1,"message":"137","line":65,"column":27,"nodeType":"128","messageId":"129","endLine":65,"endColumn":34},{"ruleId":"138","severity":1,"message":"139","line":70,"column":21,"nodeType":"140","messageId":"141","endLine":70,"endColumn":22,"fix":"142"},{"ruleId":"138","severity":1,"message":"139","line":71,"column":21,"nodeType":"140","messageId":"141","endLine":71,"endColumn":22,"fix":"143"},{"ruleId":"138","severity":1,"message":"139","line":72,"column":36,"nodeType":"140","messageId":"141","endLine":72,"endColumn":37,"fix":"144"},{"ruleId":"126","severity":1,"message":"145","line":78,"column":9,"nodeType":"128","messageId":"129","endLine":78,"endColumn":20},{"ruleId":"126","severity":1,"message":"127","line":79,"column":3,"nodeType":"128","messageId":"129","endLine":79,"endColumn":18},{"ruleId":"126","severity":1,"message":"146","line":80,"column":3,"nodeType":"128","messageId":"129","endLine":80,"endColumn":19},{"ruleId":"147","severity":1,"message":"148","line":20,"column":5,"nodeType":"149","endLine":20,"endColumn":21,"suggestions":"150"},{"ruleId":"147","severity":1,"message":"151","line":40,"column":23,"nodeType":"128","endLine":40,"endColumn":34},{"ruleId":"152","severity":1,"message":"153","line":60,"column":11,"nodeType":"128","messageId":"154","endLine":60,"endColumn":15},{"ruleId":"147","severity":1,"message":"155","line":78,"column":5,"nodeType":"149","endLine":78,"endColumn":41,"suggestions":"156"},{"ruleId":"126","severity":1,"message":"157","line":8,"column":10,"nodeType":"128","messageId":"129","endLine":8,"endColumn":16,"suppressions":"158"},{"ruleId":"159","severity":1,"message":"160","line":48,"column":13,"nodeType":"161","messageId":"162","endLine":48,"endColumn":52,"suppressions":"163"},{"ruleId":"159","severity":1,"message":"160","line":57,"column":62,"nodeType":"161","messageId":"162","endLine":57,"endColumn":89,"suppressions":"164"},{"ruleId":"159","severity":1,"message":"160","line":65,"column":21,"nodeType":"161","messageId":"162","endLine":70,"endColumn":23,"suppressions":"165"},{"ruleId":"159","severity":1,"message":"160","line":77,"column":29,"nodeType":"161","messageId":"162","endLine":80,"endColumn":31,"suppressions":"166"},{"ruleId":"159","severity":1,"message":"160","line":120,"column":29,"nodeType":"161","messageId":"162","endLine":123,"endColumn":31,"suppressions":"167"},{"ruleId":"126","severity":1,"message":"168","line":3,"column":10,"nodeType":"128","messageId":"129","endLine":3,"endColumn":21},{"ruleId":"126","severity":1,"message":"169","line":5,"column":8,"nodeType":"128","messageId":"129","endLine":5,"endColumn":13},{"ruleId":"126","severity":1,"message":"170","line":10,"column":12,"nodeType":"128","messageId":"129","endLine":10,"endColumn":23},{"ruleId":"126","severity":1,"message":"171","line":11,"column":12,"nodeType":"128","messageId":"129","endLine":11,"endColumn":24},{"ruleId":"138","severity":1,"message":"139","line":32,"column":1,"nodeType":"140","messageId":"141","endLine":32,"endColumn":5,"fix":"172"},{"ruleId":"138","severity":1,"message":"139","line":72,"column":1,"nodeType":"140","messageId":"141","endLine":72,"endColumn":5,"fix":"173"},{"ruleId":"138","severity":1,"message":"139","line":76,"column":13,"nodeType":"140","messageId":"141","endLine":76,"endColumn":14,"fix":"174"},{"ruleId":"138","severity":1,"message":"139","line":77,"column":21,"nodeType":"140","messageId":"141","endLine":77,"endColumn":22,"fix":"175"},{"ruleId":"138","severity":1,"message":"139","line":78,"column":21,"nodeType":"140","messageId":"141","endLine":78,"endColumn":22,"fix":"176"},{"ruleId":"138","severity":1,"message":"139","line":79,"column":36,"nodeType":"140","messageId":"141","endLine":79,"endColumn":37,"fix":"177"},{"ruleId":"152","severity":1,"message":"178","line":48,"column":23,"nodeType":"128","messageId":"154","endLine":48,"endColumn":28},"no-catch-shadow",["152"],"no-unused-vars","'handleLoginOpen' is assigned a value but never used.","Identifier","unusedVar","'handleLogin' is assigned a value but never used.","'handleCancel' is assigned a value but never used.","'handleUsernameChange' is assigned a value but never used.","'handlePasswordChange' is assigned a value but never used.","'username' is assigned a value but never used.","'password' is assigned a value but never used.","'onSubmit' is defined but never used.","'onClose' is defined but never used.","no-trailing-spaces","Trailing spaces not allowed.","Program","trailingSpace",{"range":"179","text":"180"},{"range":"181","text":"180"},{"range":"182","text":"180"},"'isLoginOpen' is assigned a value but never used.","'handleLoginClose' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has an unnecessary dependency: 'isLoginSuccess'. Either exclude it or remove the dependency array.","ArrayExpression",["183"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","no-shadow","'data' is already declared in the upper scope on line 65 column 10.","noShadow","React Hook useCallback has a missing dependency: 'handleLoginClose'. Either include it or remove the dependency array.",["184"],"'Button' is defined but never used.",["185"],"react/jsx-no-bind","JSX props should not use arrow functions","JSXAttribute","arrowFunc",["186"],["187"],["188"],["189"],["190"],"'useNavigate' is defined but never used.","'Popup' is defined but never used.","'isPopupOpen' is assigned a value but never used.","'popupMessage' is assigned a value but never used.",{"range":"191","text":"180"},{"range":"192","text":"180"},{"range":"193","text":"180"},{"range":"194","text":"180"},{"range":"195","text":"180"},{"range":"196","text":"180"},"'video' is already declared in the upper scope on line 8 column 34.",[2494,2495],"",[2516,2517],[2553,2554],{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"kind":"201","justification":"180"},{"kind":"201","justification":"180"},{"kind":"201","justification":"180"},{"kind":"201","justification":"180"},{"kind":"201","justification":"180"},{"kind":"201","justification":"180"},[1176,1180],[2675,2679],[2730,2731],[2752,2753],[2774,2775],[2811,2812],"Update the dependencies array to be: []",{"range":"202","text":"203"},"Update the dependencies array to be: [username, password, handleLoginClose, isLoginSuccess]",{"range":"204","text":"205"},"directive",[585,601],"[]",[2327,2363],"[username, password, handleLoginClose, isLoginSuccess]"]