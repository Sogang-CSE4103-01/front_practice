[{"/home/connected/enact-template/src/index.js":"1","/home/connected/enact-template/src/libs/utils.js":"2","/home/connected/enact-template/src/App/App.js":"3","/home/connected/enact-template/src/App/AppState.js":"4","/home/connected/enact-template/src/views/Login.js":"5","/home/connected/enact-template/src/views/LoginState.js":"6","/home/connected/enact-template/src/views/Main.js":"7","/home/connected/enact-template/src/libs/log.js":"8","/home/connected/enact-template/src/constants/domEvents.js":"9","/home/connected/enact-template/src/hooks/useData.js":"10","/home/connected/enact-template/src/views/MainState.js":"11","/home/connected/enact-template/src/views/VideoPlayer.js":"12","/home/connected/enact-template/src/libs/services.js":"13","/home/connected/enact-template/src/libs/request.js":"14","/home/connected/enact-template/__mocks__/@enact/webos/LS2Request.js":"15","/home/connected/enact-template/src/views/SignupState.js":"16"},{"size":310,"mtime":1731404601872,"results":"17","hashOfConfig":"18"},{"size":638,"mtime":1731404601872,"results":"19","hashOfConfig":"18"},{"size":1169,"mtime":1732183360165,"results":"20","hashOfConfig":"18"},{"size":1909,"mtime":1731404601868,"results":"21","hashOfConfig":"18"},{"size":6194,"mtime":1732189274571,"results":"22","hashOfConfig":"18"},{"size":1848,"mtime":1732190950382,"results":"23","hashOfConfig":"18"},{"size":4178,"mtime":1732181969766,"results":"24","hashOfConfig":"18"},{"size":404,"mtime":1731404601872,"results":"25","hashOfConfig":"18"},{"size":324,"mtime":1731404601872,"results":"26","hashOfConfig":"18"},{"size":1429,"mtime":1731404601872,"results":"27","hashOfConfig":"18"},{"size":3555,"mtime":1732181367230,"results":"28","hashOfConfig":"18"},{"size":2581,"mtime":1732181367230,"results":"29","hashOfConfig":"18"},{"size":215,"mtime":1731404601872,"results":"30","hashOfConfig":"18"},{"size":844,"mtime":1731404601872,"results":"31","hashOfConfig":"18"},{"size":1926,"mtime":1731404601860,"results":"32","hashOfConfig":"18"},{"size":2839,"mtime":1732190952146,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"5qo19t",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":5,"source":"50","usedDeprecatedRules":"37"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"37"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":6,"source":null},"/home/connected/enact-template/src/index.js",[],[],["85"],"/home/connected/enact-template/src/libs/utils.js",[],[],"/home/connected/enact-template/src/App/App.js",[],[],"/home/connected/enact-template/src/App/AppState.js",[],[],"/home/connected/enact-template/src/views/Login.js",["86","87","88","89","90","91","92","93","94"],[],"/*\n// src/views/Login.js\nimport BodyText from '@enact/sandstone/BodyText';\nimport { Header, Panel } from '@enact/sandstone/Panels';\nimport { Input } from '@enact/sandstone/Input'; // Enact Input 컴포넌트\nimport { Button } from '@enact/sandstone/Button'; // Enact Button 컴포넌트\nimport { useLoginState } from './LoginState';\nimport css from './Login.module.less';\nimport $L from '@enact/i18n/$L';\n\nconst Login = () => {\n    const { username, password, handleInputChange, handleLogin, handleNavigateToSignup } = useLoginState();\n\n    return (\n        <Panel>\n            <Header title={$L('로그인')} />\n            <div className={css.loginContainer}>\n                <BodyText>{$L('로그인하여 계속 진행하세요.')}</BodyText>\n                <Input\n                    type=\"text\"\n                    name=\"username\"\n                    placeholder={$L('사용자 이름')}\n                    value={username} // 상태와 연결\n                    onChange={handleInputChange} // 핸들러와 연결\n                    className={css.input}\n                />\n                <Input\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder={$L('비밀번호')}\n                    value={password} // 상태와 연결\n                    onChange={handleInputChange} // 핸들러와 연결\n                    className={css.input}\n                />\n                <Button onClick={handleLogin} className={css.loginButton}>\n                    {$L('로그인')}\n                </Button>\n                <Button onClick={handleNavigateToSignup} className={css.signupButton}>\n                    {$L('회원가입')}\n                </Button>\n            </div>\n        </Panel>\n    );\n};\n\nexport default Login;\n*/\n\n// src/views/Login.js\n// src/views/Login.js \nimport BodyText from '@enact/sandstone/BodyText';\nimport {Header, Panel} from '@enact/sandstone/Panels';\nimport $L from '@enact/i18n/$L';\nimport Button from '@enact/sandstone/Button';\nimport Input from '@enact/sandstone/Input';\nimport css from './Login.module.less';\nimport css2 from './Signup.module.less';\nimport TabLayout, {Tab} from '@enact/sandstone/TabLayout';\nimport { useSignupState } from './SignupState';\nimport {useLogin} from './LoginState';\n\n//const {username,password,handleSignupUsernameChange,handleSignupPasswordChange,handleSignup} = useSignupState();\nconst Login = ({onSubmit, onClose}) => {\n    console.log(\"rendering login\");\n    //const {handleSignupUsernameChange,handleSignupPasswordChange,handleSignup} = useSignupState();\n\n    const {\n        newusername, \n        newpassword, \n        handleSignupUsernameChange, \n        handleSignupPasswordChange,\n        handleSignup,\n    } = useSignupState();\n\n    const {\n        isLoginOpen,\n\t\thandleLoginOpen,\n\t\thandleLoginClose,\n\t\thandleLogin,\n\t\thandleUsernameChange,\n\t\thandlePasswordChange,\n\t\tusername,\n\t\tpassword,\n    } = useLogin();\n\n    return(\n        <Panel >\n            <Header title={$L('Log In and Sign Up')}/>\n            <TabLayout>\n                <Tab title = {$L('Log In')}>\n                    <div className={css.loginContainer}>\n                        <BodyText className={css.title}>Login</BodyText>\n                        <Input\n                            placeholder=\"Username\"\n                            value={username}\n                            onChange={handleUsernameChange}\n                            type=\"text\"\n                            className={css.input}\n                        />\n                        <Input\n                            placeholder=\"Password\"\n                            value={password}\n                            onChange={handlePasswordChange}\n                            type=\"password\"\n                            className={css.input}\n                        />\n                        <Button onClick={handleLogin} size=\"small\" className={css.button}>\n                            Login\n                        </Button>\n                        <Button onClick={onClose} size=\"small\" className={css.button}>\n                            Cancel\n                        </Button>\n                    </div>\n                </Tab>\n\n                <Tab title = {$L('Sign Up')}>\n                    <div className={css2.signupContainer}>\n                        <BodyText>{$L('회원가입하여 서비스를 이용하세요.')}</BodyText>\n                        <Input\n                            type=\"text\"\n                            name=\"username\"\n                            placeholder={$L('사용자 이름')}\n                            value={newusername}\n                            onChange={handleSignupUsernameChange}\n                            className={css2.inputField}\n                        />\n                        <Input\n                            type=\"password\"\n                            name=\"password\"\n                            placeholder={$L('비밀번호')}\n                            value={newpassword}\n                            onChange={handleSignupPasswordChange}\n                            className={css2.inputField}\n                        />\n                        <Button onClick={handleSignup} className={css2.signupButton}>\n                            {$L('회원가입')}\n                        </Button>\n                    </div>\n\n                </Tab>\n\n            </TabLayout>\n            \n        </Panel>\n    )\n}\n\nexport default Login;\n/*\nconst Login = ({ onClose, onSubmit, username, password, handleUsernameChange, handlePasswordChange }) => {\n\treturn (\n\t\t<div className={css.loginContainer}>\n\t\t\t<BodyText className={css.title}>Login</BodyText>\n\t\t\t<Input\n\t\t\t\tplaceholder=\"Username\"\n\t\t\t\tvalue={username}\n\t\t\t\tonChange={handleUsernameChange}\n\t\t\t\ttype=\"text\"\n\t\t\t\tclassName={css.input}\n\t\t\t/>\n\t\t\t<Input\n\t\t\t\tplaceholder=\"Password\"\n\t\t\t\tvalue={password}\n\t\t\t\tonChange={handlePasswordChange}\n\t\t\t\ttype=\"password\"\n\t\t\t\tclassName={css.input}\n\t\t\t/>\n\t\t\t<Button onClick={onSubmit} size=\"small\" className={css.button}>\n\t\t\t\tLogin\n\t\t\t</Button>\n\t\t\t<Button onClick={onClose} size=\"small\" className={css.button}>\n\t\t\t\tCancel\n\t\t\t</Button>\n\t\t</div>\n\t);\n}; */\n\n//export default Login;\n\n","/home/connected/enact-template/src/views/LoginState.js",[],[],"/home/connected/enact-template/src/views/Main.js",["95","96","97"],[],"import BodyText from '@enact/sandstone/BodyText';\nimport { Header, Panel } from '@enact/sandstone/Panels';\nimport TabLayout, { Tab } from '@enact/sandstone/TabLayout';\nimport { useMainState } from './MainState';\nimport SelectableVideoPlayer from './VideoPlayer';\nimport Scroller from '@enact/sandstone/Scroller';\nimport css from './Main.module.less';\nimport $L from '@enact/i18n/$L';\nimport { useState, useEffect } from 'react';\n\nconst Main = (props) => {\n    const { videoData } = useMainState();\n    const [selectedVideo, setSelectedVideo] = useState(null);\n    const [activeTab, setActiveTab] = useState('watching');\n\n    useEffect(() => {\n        console.log(videoData);\n    }, [videoData]);\n\n    const handleVideoClick = (video) => {\n        setSelectedVideo(video);\n    };\n\n    const handleClosePlayer = () => {\n        setSelectedVideo(null);\n    };\n\n    const renderVideoCard = (video) => (\n        <div key={video.id} className={css.videoCard} onClick={() => handleVideoClick(video)}>\n            <img src={video.thumbnail} alt={video.title} className={css.thumbnail} />\n            <BodyText className={css.videoTitle} size=\"medium\">\n                {video.title}\n            </BodyText>\n        </div>\n    );\n\n    return (\n        <Panel {...props}>\n            {selectedVideo && (\n                <SelectableVideoPlayer video={selectedVideo} onClose={handleClosePlayer} />\n            )}\n\n            <Scroller\n                direction=\"vertical\"\n                style={{ height: '100vh', overflowY: 'auto' }}\n            >\n                <Header title={$L('YouTube Clone')} />\n                <BodyText className={css.description} size=\"large\">\n                    {$L('이곳은 유튜브 메인 화면을 모방한 샘플 애플리케이션입니다.')}\n                </BodyText>\n\n                <TabLayout\n                    selected={activeTab}\n                    onSelect={(tabId) => {\n                        console.log('Selected Tab:', tabId);\n                        const selectedTabKey = ['watching', 'recommended', 'additional'][tabId.index];\n                        setActiveTab(selectedTabKey);\n                    }}\n                    orientation=\"horizontal\"\n                >\n                    <Tab title={$L('시청 중인 영상')}>\n                        <Scroller\n                            direction=\"vertical\"\n                            style={{ height: '400px', overflowY: 'auto' }} // 각 탭의 스크롤 설정\n                        >\n                            <div className={css.videoGrid}>\n                                {videoData.length > 0 ? videoData.slice(0, 5).map(renderVideoCard) : <BodyText>{'비디오가 없습니다.'}</BodyText>}\n                            </div>\n                        </Scroller>\n                    </Tab>\n                    <Tab title={$L('추천 영상')}>\n                        <Scroller\n                            direction=\"vertical\"\n                            style={{ height: '400px', overflowY: 'auto' }} // 각 탭의 스크롤 설정\n                        >\n                            <div className={css.videoGrid}>\n                                {videoData.length > 5 ? videoData.slice(5, 10).map(renderVideoCard) : <BodyText>{'비디오가 없습니다.'}</BodyText>}\n                            </div>\n                        </Scroller>\n                    </Tab>\n                    <Tab title={$L('추가 섹션')}>\n                        <Scroller\n                            direction=\"vertical\"\n                            style={{ height: '400px', overflowY: 'auto' }} // 각 탭의 스크롤 설정\n                        >\n                            <BodyText className={css.description}>\n                                {Array(20).fill('이곳은 추가 섹션입니다. 더 많은 내용을 추가해 주세요.').map((text, index) => (\n                                    <div key={index}>{text}</div>\n                                ))}\n                            </BodyText>\n                        </Scroller>\n                    </Tab>\n                </TabLayout>\n            </Scroller>\n        </Panel>\n    );\n};\n\nexport default Main;\n","/home/connected/enact-template/src/libs/log.js",[],[],"/home/connected/enact-template/src/constants/domEvents.js",[],[],"/home/connected/enact-template/src/hooks/useData.js",[],[],"/home/connected/enact-template/src/views/MainState.js",[],[],"/home/connected/enact-template/src/views/VideoPlayer.js",[],["98"],"/home/connected/enact-template/src/libs/services.js",[],[],"/home/connected/enact-template/src/libs/request.js",[],[],"/home/connected/enact-template/__mocks__/@enact/webos/LS2Request.js",[],[],"/home/connected/enact-template/src/views/SignupState.js",["99","100","101","102","103","104","105","106","107","108"],[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":50,"column":22,"nodeType":"113","messageId":"114","endLine":50,"endColumn":23,"fix":"115"},{"ruleId":"116","severity":1,"message":"117","line":63,"column":17,"nodeType":"118","messageId":"119","endLine":63,"endColumn":25},{"ruleId":"111","severity":1,"message":"112","line":68,"column":21,"nodeType":"113","messageId":"114","endLine":68,"endColumn":22,"fix":"120"},{"ruleId":"111","severity":1,"message":"112","line":69,"column":21,"nodeType":"113","messageId":"114","endLine":69,"endColumn":22,"fix":"121"},{"ruleId":"111","severity":1,"message":"112","line":70,"column":36,"nodeType":"113","messageId":"114","endLine":70,"endColumn":37,"fix":"122"},{"ruleId":"116","severity":1,"message":"123","line":76,"column":9,"nodeType":"118","messageId":"119","endLine":76,"endColumn":20},{"ruleId":"116","severity":1,"message":"124","line":77,"column":3,"nodeType":"118","messageId":"119","endLine":77,"endColumn":18},{"ruleId":"116","severity":1,"message":"125","line":78,"column":3,"nodeType":"118","messageId":"119","endLine":78,"endColumn":19},{"ruleId":"111","severity":1,"message":"112","line":143,"column":1,"nodeType":"113","messageId":"114","endLine":143,"endColumn":13,"fix":"126"},{"ruleId":"127","severity":1,"message":"128","line":29,"column":55,"nodeType":"129","messageId":"130","endLine":29,"endColumn":94},{"ruleId":"127","severity":1,"message":"128","line":40,"column":62,"nodeType":"129","messageId":"130","endLine":40,"endColumn":89},{"ruleId":"127","severity":1,"message":"128","line":54,"column":21,"nodeType":"129","messageId":"130","endLine":58,"endColumn":23},{"ruleId":"131","severity":1,"message":"132","line":48,"column":23,"nodeType":"118","messageId":"133","endLine":48,"endColumn":28,"suppressions":"134"},{"ruleId":"116","severity":1,"message":"135","line":3,"column":10,"nodeType":"118","messageId":"119","endLine":3,"endColumn":21},{"ruleId":"116","severity":1,"message":"136","line":5,"column":8,"nodeType":"118","messageId":"119","endLine":5,"endColumn":13},{"ruleId":"116","severity":1,"message":"137","line":10,"column":12,"nodeType":"118","messageId":"119","endLine":10,"endColumn":23},{"ruleId":"116","severity":1,"message":"138","line":11,"column":12,"nodeType":"118","messageId":"119","endLine":11,"endColumn":24},{"ruleId":"111","severity":1,"message":"112","line":32,"column":1,"nodeType":"113","messageId":"114","endLine":32,"endColumn":5,"fix":"139"},{"ruleId":"111","severity":1,"message":"112","line":71,"column":1,"nodeType":"113","messageId":"114","endLine":71,"endColumn":5,"fix":"140"},{"ruleId":"111","severity":1,"message":"112","line":75,"column":13,"nodeType":"113","messageId":"114","endLine":75,"endColumn":14,"fix":"141"},{"ruleId":"111","severity":1,"message":"112","line":76,"column":21,"nodeType":"113","messageId":"114","endLine":76,"endColumn":22,"fix":"142"},{"ruleId":"111","severity":1,"message":"112","line":77,"column":21,"nodeType":"113","messageId":"114","endLine":77,"endColumn":22,"fix":"143"},{"ruleId":"111","severity":1,"message":"112","line":78,"column":36,"nodeType":"113","messageId":"114","endLine":78,"endColumn":37,"fix":"144"},"no-catch-shadow",["131"],"no-trailing-spaces","Trailing spaces not allowed.","Program","trailingSpace",{"range":"145","text":"146"},"no-unused-vars","'onSubmit' is defined but never used.","Identifier","unusedVar",{"range":"147","text":"146"},{"range":"148","text":"146"},{"range":"149","text":"146"},"'isLoginOpen' is assigned a value but never used.","'handleLoginOpen' is assigned a value but never used.","'handleLoginClose' is assigned a value but never used.",{"range":"150","text":"146"},"react/jsx-no-bind","JSX props should not use arrow functions","JSXAttribute","arrowFunc","no-shadow","'video' is already declared in the upper scope on line 8 column 34.","noShadow",["151"],"'useNavigate' is defined but never used.","'Popup' is defined but never used.","'isPopupOpen' is assigned a value but never used.","'popupMessage' is assigned a value but never used.",{"range":"152","text":"146"},{"range":"153","text":"146"},{"range":"154","text":"146"},{"range":"155","text":"146"},{"range":"156","text":"146"},{"range":"157","text":"146"},[1710,1711],"",[2493,2494],[2515,2516],[2552,2553],[5231,5243],{"kind":"158","justification":"146"},[1176,1180],[2528,2532],[2583,2584],[2605,2606],[2627,2628],[2664,2665],"directive"]