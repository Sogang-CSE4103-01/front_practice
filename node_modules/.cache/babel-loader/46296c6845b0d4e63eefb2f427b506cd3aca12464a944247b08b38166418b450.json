{"ast":null,"code":"var _jsxFileName = \"/home/connected/enact-template/src/views/Main.js\";\nimport Alert from '@enact/sandstone/Alert';\nimport BodyText from '@enact/sandstone/BodyText';\nimport Button from '@enact/sandstone/Button';\nimport { Header, Panel } from '@enact/sandstone/Panels';\nimport { usePopup } from './MainState';\nimport { useLogin } from '../App/login/LoginState';\nimport Login from '../App/login/Login';\nimport css from './Main.module.less';\nimport $L from '@enact/i18n/$L';\n//import { useProcStat } from '../hooks/useData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Main = props => {\n  //const procStat = useProcStat();\n  const {\n    isPopupOpen,\n    handlePopupOpen,\n    handlePopupClose,\n    handleLaunchApp\n  } = usePopup();\n  const {\n    isLoginOpen,\n    handleLoginOpen,\n    handleLoginClose,\n    handleLogin,\n    handleUsernameChange,\n    handlePasswordChange,\n    username,\n    password\n  } = useLogin();\n\n  // Define handler functions for buttons\n  const onOpenAlert = handlePopupOpen;\n  const onCloseAlert = handlePopupClose;\n  const onLaunchApp = handleLaunchApp;\n  return /*#__PURE__*/_jsxDEV(Panel, {\n    ...props,\n    children: isLoginOpen ?\n    /*#__PURE__*/\n    // 로그인 창이 열리면 로그인 컴포넌트만 렌더링\n    _jsxDEV(Login, {\n      isOpen: isLoginOpen,\n      onClose: handleLoginClose,\n      onSubmit: handleLogin,\n      handleUsernameChange: handleUsernameChange,\n      handlePasswordChange: handlePasswordChange,\n      username: username,\n      password: password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this) :\n    /*#__PURE__*/\n    // 로그인 창이 닫힌 경우 메인 화면 표시\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        title: $L('Enact Template')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(BodyText, {\n        children: $L('This is a main page of sample application.')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onOpenAlert,\n        size: \"small\",\n        className: css.buttonCell,\n        children: $L('Open Alert')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        type: \"overlay\",\n        open: isPopupOpen,\n        onClose: onCloseAlert,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: $L('This is an alert message.')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"buttons\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            className: css.buttonCell,\n            onClick: onLaunchApp,\n            children: \"Launch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            className: css.buttonCell,\n            onClick: onCloseAlert,\n            children: $L('Close')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleLoginOpen,\n        size: \"small\",\n        className: css.buttonCell,\n        children: $L('Login')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }, this);\n};\nexport default Main;","map":{"version":3,"names":["Alert","BodyText","Button","Header","Panel","usePopup","useLogin","Login","css","$L","jsxDEV","_jsxDEV","Fragment","_Fragment","Main","props","isPopupOpen","handlePopupOpen","handlePopupClose","handleLaunchApp","isLoginOpen","handleLoginOpen","handleLoginClose","handleLogin","handleUsernameChange","handlePasswordChange","username","password","onOpenAlert","onCloseAlert","onLaunchApp","children","isOpen","onClose","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","title","onClick","size","className","buttonCell","type","open"],"sources":["/home/connected/enact-template/src/views/Main.js"],"sourcesContent":["import Alert from '@enact/sandstone/Alert';\nimport BodyText from '@enact/sandstone/BodyText';\nimport Button from '@enact/sandstone/Button';\nimport { Header, Panel } from '@enact/sandstone/Panels';\nimport { usePopup } from './MainState';\nimport { useLogin } from '../App/login/LoginState';\nimport Login from '../App/login/Login';\n\nimport css from './Main.module.less';\nimport $L from '@enact/i18n/$L';\n//import { useProcStat } from '../hooks/useData';\n\nconst Main = props => {\n\t//const procStat = useProcStat();\n\tconst { isPopupOpen, handlePopupOpen, handlePopupClose, handleLaunchApp } = usePopup();\n\tconst {\n\t\tisLoginOpen,\n\t\thandleLoginOpen,\n\t\thandleLoginClose,\n\t\thandleLogin,\n\t\thandleUsernameChange,\n\t\thandlePasswordChange,\n\t\tusername,\n\t\tpassword\n\t} = useLogin();\n\n\t// Define handler functions for buttons\n\tconst onOpenAlert = handlePopupOpen;\n\tconst onCloseAlert = handlePopupClose;\n\tconst onLaunchApp = handleLaunchApp;\n\n\treturn (\n\t\t<Panel {...props}>\n\t\t\t{isLoginOpen ? (\n\t\t\t\t// 로그인 창이 열리면 로그인 컴포넌트만 렌더링\n\t\t\t\t<Login\n\t\t\t\t\tisOpen={isLoginOpen}\n\t\t\t\t\tonClose={handleLoginClose}\n\t\t\t\t\tonSubmit={handleLogin}\n\t\t\t\t\thandleUsernameChange={handleUsernameChange}\n\t\t\t\t\thandlePasswordChange={handlePasswordChange}\n\t\t\t\t\tusername={username}\n\t\t\t\t\tpassword={password}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t// 로그인 창이 닫힌 경우 메인 화면 표시\n\t\t\t\t<>\n\t\t\t\t\t<Header title={$L('Enact Template')} />\n\t\t\t\t\t<BodyText>{$L('This is a main page of sample application.')}</BodyText>\n\n\t\t\t\t\t{/* Alert Popup */}\n\t\t\t\t\t<Button onClick={onOpenAlert} size=\"small\" className={css.buttonCell}>\n\t\t\t\t\t\t{$L('Open Alert')}\n\t\t\t\t\t</Button>\n\t\t\t\t\t{/*<BodyText>{`procStat : ${JSON.stringify(procStat)}`}</BodyText>*/}\n\t\t\t\t\t<Alert type=\"overlay\" open={isPopupOpen} onClose={onCloseAlert}>\n\t\t\t\t\t\t<span>{$L('This is an alert message.')}</span>\n\t\t\t\t\t\t<buttons>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\tclassName={css.buttonCell}\n\t\t\t\t\t\t\t\tonClick={onLaunchApp}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tLaunch\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\tclassName={css.buttonCell}\n\t\t\t\t\t\t\t\tonClick={onCloseAlert}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{$L('Close')}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</buttons>\n\t\t\t\t\t</Alert>\n\n\t\t\t\t\t{/* Login Button */}\n\t\t\t\t\t<Button onClick={handleLoginOpen} size=\"small\" className={css.buttonCell}>\n\t\t\t\t\t\t{$L('Login')}\n\t\t\t\t\t</Button>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</Panel>\n\t);\n};\n\nexport default Main;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}