{"ast":null,"code":"import { useCallback, useState } from 'react';\nimport { sam } from '../libs/services';\nimport debugLog from '../libs/log';\n\n// 로컬 이미지 불러오기 (src/assets에서)\nimport video1 from '../assets/video1.jpg';\nimport video2 from '../assets/video2.jpg';\nimport video3 from '../assets/video3.jpg';\nimport video4 from '../assets/video4.jpg';\nimport video5 from '../assets/video5.jpg';\nimport video6 from '../assets/video6.jpg';\nimport video7 from '../assets/video7.jpg'; // 추가된 비디오\nimport video8 from '../assets/video8.jpg'; // 추가된 비디오\n\n// 비디오 정보를 관리하기 위한 데이터 타입\nexport const useMainState = () => {\n  const [isPopupOpen, openPopup] = useState(false);\n  const [videoData, setVideoData] = useState([{\n    id: 1,\n    title: \"첫 번째 비디오\",\n    thumbnail: video1\n  }, {\n    id: 2,\n    title: \"두 번째 비디오\",\n    thumbnail: video2\n  }, {\n    id: 3,\n    title: \"세 번째 비디오\",\n    thumbnail: video3\n  }, {\n    id: 4,\n    title: \"네 번째 비디오\",\n    thumbnail: video4\n  }, {\n    id: 5,\n    title: \"다섯 번째 비디오\",\n    thumbnail: video5\n  }, {\n    id: 6,\n    title: \"여섯 번째 비디오\",\n    thumbnail: video6\n  }, {\n    id: 7,\n    title: \"일곱 번째 비디오\",\n    thumbnail: video7\n  }, {\n    id: 8,\n    title: \"여덟 번째 비디오\",\n    thumbnail: video8\n  }]);\n  const handleLaunchApp = useCallback(async () => {\n    const result = await sam({\n      method: 'launch',\n      parameters: {\n        id: 'com.webos.app.self-diagnosis'\n      }\n    });\n    debugLog('SAM', result);\n    openPopup(false);\n  }, []);\n  const handlePopupOpen = useCallback(() => {\n    openPopup(true);\n  }, []);\n  const handlePopupClose = useCallback(() => {\n    openPopup(false);\n  }, []);\n  return {\n    isPopupOpen,\n    handlePopupOpen,\n    handlePopupClose,\n    handleLaunchApp,\n    videoData,\n    setVideoData\n  };\n};","map":{"version":3,"names":["useCallback","useState","sam","debugLog","video1","video2","video3","video4","video5","video6","video7","video8","useMainState","isPopupOpen","openPopup","videoData","setVideoData","id","title","thumbnail","handleLaunchApp","result","method","parameters","handlePopupOpen","handlePopupClose"],"sources":["/Users/meogyu/connected_front/src/views/MainState.js"],"sourcesContent":["import {useCallback, useState} from 'react';\nimport {sam} from '../libs/services';\nimport debugLog from '../libs/log';\n\n// 로컬 이미지 불러오기 (src/assets에서)\nimport video1 from '../assets/video1.jpg';\nimport video2 from '../assets/video2.jpg';\nimport video3 from '../assets/video3.jpg';\nimport video4 from '../assets/video4.jpg';\nimport video5 from '../assets/video5.jpg';\nimport video6 from '../assets/video6.jpg';\nimport video7 from '../assets/video7.jpg'; // 추가된 비디오\nimport video8 from '../assets/video8.jpg'; // 추가된 비디오\n\n// 비디오 정보를 관리하기 위한 데이터 타입\nexport const useMainState = () => {\n\tconst [isPopupOpen, openPopup] = useState(false);\n\tconst [videoData, setVideoData] = useState([\n\t\t{\n\t\t\tid: 1,\n\t\t\ttitle: \"첫 번째 비디오\",\n\t\t\tthumbnail: video1\n\t\t},\n\t\t{\n\t\t\tid: 2,\n\t\t\ttitle: \"두 번째 비디오\",\n\t\t\tthumbnail: video2\n\t\t},\n\t\t{\n\t\t\tid: 3,\n\t\t\ttitle: \"세 번째 비디오\",\n\t\t\tthumbnail: video3\n\t\t},\n\t\t{\n\t\t\tid: 4,\n\t\t\ttitle: \"네 번째 비디오\",\n\t\t\tthumbnail: video4\n\t\t},\n\t\t{\n\t\t\tid: 5,\n\t\t\ttitle: \"다섯 번째 비디오\",\n\t\t\tthumbnail: video5\n\t\t},\n\t\t{\n\t\t\tid: 6,\n\t\t\ttitle: \"여섯 번째 비디오\",\n\t\t\tthumbnail: video6\n\t\t},\n\t\t{\n\t\t\tid: 7,\n\t\t\ttitle: \"일곱 번째 비디오\",\n\t\t\tthumbnail: video7\n\t\t},\n\t\t{\n\t\t\tid: 8,\n\t\t\ttitle: \"여덟 번째 비디오\",\n\t\t\tthumbnail: video8\n\t\t}\n\t]);\n\n\tconst handleLaunchApp = useCallback(async () => {\n\t\tconst result = await sam({\n\t\t\tmethod: 'launch',\n\t\t\tparameters: {id: 'com.webos.app.self-diagnosis'}\n\t\t});\n\t\tdebugLog('SAM', result);\n\t\topenPopup(false);\n\t}, []);\n\n\tconst handlePopupOpen = useCallback(() => {\n\t\topenPopup(true);\n\t}, []);\n\n\tconst handlePopupClose = useCallback(() => {\n\t\topenPopup(false);\n\t}, []);\n\n\treturn {isPopupOpen, handlePopupOpen, handlePopupClose, handleLaunchApp, videoData, setVideoData};\n};\n"],"mappings":"AAAA,SAAQA,WAAW,EAAEC,QAAQ,QAAO,OAAO;AAC3C,SAAQC,GAAG,QAAO,kBAAkB;AACpC,OAAOC,QAAQ,MAAM,aAAa;;AAElC;AACA,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,MAAM,MAAM,sBAAsB,CAAC,CAAC;AAC3C,OAAOC,MAAM,MAAM,sBAAsB,CAAC,CAAC;;AAE3C;AACA,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACjC,MAAM,CAACC,WAAW,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAChD,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,CAC1C;IACCgB,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,UAAU;IACjBC,SAAS,EAAEf;EACZ,CAAC,EACD;IACCa,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,UAAU;IACjBC,SAAS,EAAEd;EACZ,CAAC,EACD;IACCY,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,UAAU;IACjBC,SAAS,EAAEb;EACZ,CAAC,EACD;IACCW,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,UAAU;IACjBC,SAAS,EAAEZ;EACZ,CAAC,EACD;IACCU,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,WAAW;IAClBC,SAAS,EAAEX;EACZ,CAAC,EACD;IACCS,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,WAAW;IAClBC,SAAS,EAAEV;EACZ,CAAC,EACD;IACCQ,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,WAAW;IAClBC,SAAS,EAAET;EACZ,CAAC,EACD;IACCO,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,WAAW;IAClBC,SAAS,EAAER;EACZ,CAAC,CACD,CAAC;EAEF,MAAMS,eAAe,GAAGpB,WAAW,CAAC,YAAY;IAC/C,MAAMqB,MAAM,GAAG,MAAMnB,GAAG,CAAC;MACxBoB,MAAM,EAAE,QAAQ;MAChBC,UAAU,EAAE;QAACN,EAAE,EAAE;MAA8B;IAChD,CAAC,CAAC;IACFd,QAAQ,CAAC,KAAK,EAAEkB,MAAM,CAAC;IACvBP,SAAS,CAAC,KAAK,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,eAAe,GAAGxB,WAAW,CAAC,MAAM;IACzCc,SAAS,CAAC,IAAI,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMW,gBAAgB,GAAGzB,WAAW,CAAC,MAAM;IAC1Cc,SAAS,CAAC,KAAK,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAACD,WAAW;IAAEW,eAAe;IAAEC,gBAAgB;IAAEL,eAAe;IAAEL,SAAS;IAAEC;EAAY,CAAC;AAClG,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}