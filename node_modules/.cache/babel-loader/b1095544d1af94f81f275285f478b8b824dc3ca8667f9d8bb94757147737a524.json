{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useScrollBase = exports.useScroll = exports[\"default\"] = exports.constants = exports.assignPropertiesOf = void 0;\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\nvar _handle = require(\"@enact/core/handle\");\nvar _keymap = require(\"@enact/core/keymap\");\nvar _platform = require(\"@enact/core/platform\");\nvar _Registry = _interopRequireDefault(require(\"@enact/core/internal/Registry\"));\nvar _util = require(\"@enact/core/util\");\nvar _clamp = _interopRequireDefault(require(\"ramda/src/clamp\"));\nvar _react = require(\"react\");\nvar _warning = _interopRequireDefault(require(\"warning\"));\nvar _ForwardRef = _interopRequireDefault(require(\"../ForwardRef\"));\nvar _Resizable = require(\"../Resizable\");\nvar _resolution = _interopRequireDefault(require(\"../resolution\"));\nvar _Touchable = _interopRequireDefault(require(\"../Touchable\"));\nvar _ScrollAnimator = _interopRequireDefault(require(\"./ScrollAnimator\"));\nvar _utilDOM = _interopRequireDefault(require(\"./utilDOM\"));\nvar _utilEvent = _interopRequireDefault(require(\"./utilEvent\"));\nvar _useScrollModule = _interopRequireDefault(require(\"./useScroll.module.css\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _excluded = [\"componentRef\"],\n  _excluded2 = [\"childProps\", \"children\", \"className\", \"clientSize\", \"assignProperties\", \"dataSize\", \"direction\", \"horizontalScrollbar\", \"horizontalScrollbarHandle\", \"itemRenderer\", \"itemSize\", \"itemSizes\", \"noScrollByDrag\", \"noScrollByWheel\", \"overhang\", \"overscrollEffectOn\", \"pageScroll\", \"role\", \"rtl\", \"scrollContainerRef\", \"scrollContentHandle\", \"scrollContentRef\", \"scrollMode\", \"setScrollContainerHandle\", \"snapToCenter\", \"spacing\", \"spotlightContainerDisabled\", \"verticalScrollbar\", \"verticalScrollbarHandle\", \"wrap\"];\n/* global ResizeObserver */\n/**\n * Unstyled scrollable hook and behaviors to be customized by a theme or application.\n *\n * @module ui/useScroll\n * @exports assignPropertiesOf\n * @exports constants\n * @exports useScroll\n * @exports useScrollBase\n * @private\n */\n// scrollMode 'native'\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : String(i);\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nvar constants = exports.constants = {\n    animationDuration: 1000,\n    epsilon: 1,\n    flickConfig: {\n      maxDuration: null\n    },\n    isPageDown: (0, _keymap.is)('pageDown'),\n    isPageUp: (0, _keymap.is)('pageUp'),\n    nop: function nop() {},\n    overscrollDefaultRatio: 0.5,\n    overscrollTypeNone: 0,\n    overscrollTypeHold: 1,\n    overscrollTypeOnce: 2,\n    overscrollTypeDone: 9,\n    overscrollVelocityFactor: 300,\n    // scrollMode 'native'\n    paginationPageMultiplier: 0.66,\n    scrollStopWaiting: 200,\n    scrollWheelPageMultiplierForMaxPixel: 0.2 // The ratio of the maximum distance scrolled by wheel to the size of the viewport.\n  },\n  animationDuration = constants.animationDuration,\n  epsilon = constants.epsilon,\n  flickConfig = constants.flickConfig,\n  isPageDown = constants.isPageDown,\n  isPageUp = constants.isPageUp,\n  overscrollDefaultRatio = constants.overscrollDefaultRatio,\n  overscrollTypeDone = constants.overscrollTypeDone,\n  overscrollTypeHold = constants.overscrollTypeHold,\n  overscrollTypeNone = constants.overscrollTypeNone,\n  overscrollTypeOnce = constants.overscrollTypeOnce,\n  overscrollVelocityFactor = constants.overscrollVelocityFactor,\n  paginationPageMultiplier = constants.paginationPageMultiplier,\n  scrollStopWaiting = constants.scrollStopWaiting,\n  scrollWheelPageMultiplierForMaxPixel = constants.scrollWheelPageMultiplierForMaxPixel;\nvar TouchableDiv = (0, _ForwardRef[\"default\"])({\n  prop: 'componentRef'\n}, (0, _Touchable[\"default\"])(function (_ref) {\n  var componentRef = _ref.componentRef,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/(0, _jsxRuntime.jsx)(\"div\", _objectSpread(_objectSpread({}, rest), {}, {\n    ref: componentRef\n  }));\n}));\nvar useForceUpdate = function useForceUpdate() {\n  return (0, _react.useReducer)(function (x) {\n    return x + 1;\n  }, 0);\n};\n\n/**\n * A custom hook that passes scrollable behavior information as its render prop.\n *\n * @class\n * @memberof ui/useScroll\n * @ui\n * @private\n */\nvar useScrollBase = exports.useScrollBase = function useScrollBase(props) {\n  var childProps = props.childProps,\n    children = props.children,\n    className = props.className,\n    clientSize = props.clientSize,\n    assignProperties = props.assignProperties,\n    dataSize = props.dataSize,\n    direction = props.direction,\n    horizontalScrollbar = props.horizontalScrollbar,\n    horizontalScrollbarHandle = props.horizontalScrollbarHandle,\n    itemRenderer = props.itemRenderer,\n    itemSize = props.itemSize,\n    itemSizes = props.itemSizes,\n    noScrollByDrag = props.noScrollByDrag,\n    noScrollByWheel = props.noScrollByWheel,\n    overhang = props.overhang,\n    overscrollEffectOn = props.overscrollEffectOn,\n    pageScroll = props.pageScroll,\n    role = props.role,\n    rtl = props.rtl,\n    scrollContainerRef = props.scrollContainerRef,\n    scrollContentHandle = props.scrollContentHandle,\n    scrollContentRef = props.scrollContentRef,\n    scrollMode = props.scrollMode,\n    setScrollContainerHandle = props.setScrollContainerHandle,\n    snapToCenter = props.snapToCenter,\n    spacing = props.spacing,\n    spotlightContainerDisabled = props.spotlightContainerDisabled,\n    verticalScrollbar = props.verticalScrollbar,\n    verticalScrollbarHandle = props.verticalScrollbarHandle,\n    wrap = props.wrap,\n    rest = _objectWithoutProperties(props, _excluded2),\n    scrollClasses = (0, _classnames[\"default\"])(_useScrollModule[\"default\"].scroll, className);\n\n  // The following props are the one having the same naming function in this scope.\n  // So it is better to use props[propName]\n  // instead of extracting it from the `props` and renaming it\n  delete rest.addEventListeners;\n  delete rest.applyOverscrollEffect;\n  delete rest.cbScrollTo;\n  delete rest.clearOverscrollEffect;\n  delete rest.handleResizeWindow;\n  delete rest.onFlick;\n  delete rest.onKeyDown;\n  delete rest.onMouseDown;\n  delete rest.onScroll;\n  delete rest.onScrollStart;\n  delete rest.onScrollStop;\n  delete rest.onWheel;\n  delete rest.removeEventListeners;\n  delete rest.scrollStopOnScroll; // scrollMode 'native'\n  delete rest.scrollTo;\n  delete rest.start; // scrollMode 'native'\n  delete rest.stop; // scrollMode 'translate'\n\n  // Mutable value and Hooks\n\n  var _useForceUpdate = useForceUpdate(),\n    _useForceUpdate2 = _slicedToArray(_useForceUpdate, 2),\n    forceUpdate = _useForceUpdate2[1];\n  var context = (0, _react.useContext)(_Resizable.ResizeContext);\n  var _useState = (0, _react.useState)(horizontalScrollbar === 'visible'),\n    _useState2 = _slicedToArray(_useState, 2),\n    isHorizontalScrollbarVisible = _useState2[0],\n    setIsHorizontalScrollbarVisible = _useState2[1];\n  var _useState3 = (0, _react.useState)(verticalScrollbar === 'visible'),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isVerticalScrollbarVisible = _useState4[0],\n    setIsVerticalScrollbarVisible = _useState4[1];\n  var mutableRef = (0, _react.useRef)({\n    overscrollEnabled: !!props.applyOverscrollEffect,\n    // Enable the early bail out of repeated scrolling to the same position\n    animationInfo: null,\n    resizeRegistry: null,\n    // constants\n    pixelPerLine: 39,\n    scrollWheelMultiplierForDeltaPixel: 1.5,\n    // The ratio of wheel 'delta' units to pixels scrolled.\n\n    // status\n    deferScrollTo: true,\n    isScrollAnimationTargetAccumulated: false,\n    rtl: rtl,\n    // overscroll\n    lastInputType: null,\n    overscrollStatus: {\n      horizontal: {\n        before: {\n          type: overscrollTypeNone,\n          ratio: 0\n        },\n        after: {\n          type: overscrollTypeNone,\n          ratio: 0\n        }\n      },\n      vertical: {\n        before: {\n          type: overscrollTypeNone,\n          ratio: 0\n        },\n        after: {\n          type: overscrollTypeNone,\n          ratio: 0\n        }\n      }\n    },\n    // bounds info\n    bounds: {\n      clientWidth: 0,\n      clientHeight: 0,\n      scrollWidth: 0,\n      scrollHeight: 0,\n      maxTop: 0,\n      maxLeft: 0\n    },\n    // wheel/drag/flick info\n    wheelDirection: 0,\n    isDragging: false,\n    isTouching: false,\n    // scrollMode 'native'\n\n    // scroll info\n    scrolling: false,\n    scrollLeft: 0,\n    scrollTop: 0,\n    scrollToInfo: null,\n    // scroll animator\n    animator: null,\n    // scroll status observer\n    observerOnScroll: [],\n    // non-declared-variable.\n    accumulatedTargetX: null,\n    accumulatedTargetY: null,\n    flickTarget: null,\n    dragStartX: null,\n    dragStartY: null,\n    scrollStopJob: null,\n    prevState: {\n      isHorizontalScrollbarVisible: isHorizontalScrollbarVisible,\n      isVerticalScrollbarVisible: isVerticalScrollbarVisible\n    }\n  });\n\n  /* istanbul ignore next */\n  var themeScrollContainerHandle = (0, _react.useRef)({\n    get animator() {\n      return mutableRef.current.animator;\n    },\n    get bounds() {\n      return mutableRef.current.bounds;\n    },\n    get isDragging() {\n      return mutableRef.current.isDragging;\n    },\n    set isDragging(val) {\n      mutableRef.current.isDragging = val;\n    },\n    get isScrollAnimationTargetAccumulated() {\n      return mutableRef.current.isScrollAnimationTargetAccumulated;\n    },\n    set isScrollAnimationTargetAccumulated(val) {\n      mutableRef.current.isScrollAnimationTargetAccumulated = val;\n    },\n    get lastInputType() {\n      return mutableRef.current.lastInputType;\n    },\n    set lastInputType(val) {\n      mutableRef.current.lastInputType = val;\n    },\n    get rtl() {\n      return mutableRef.current.rtl;\n    },\n    get scrollBounds() {\n      return getScrollBounds();\n    },\n    get scrollHeight() {\n      return mutableRef.current.bounds.scrollHeight;\n    },\n    get scrolling() {\n      return mutableRef.current.scrolling;\n    },\n    get scrollLeft() {\n      return mutableRef.current.scrollLeft;\n    },\n    get scrollToInfo() {\n      return mutableRef.current.scrollToInfo;\n    },\n    get scrollTop() {\n      return mutableRef.current.scrollTop;\n    },\n    get wheelDirection() {\n      return mutableRef.current.wheelDirection;\n    },\n    set wheelDirection(val) {\n      mutableRef.current.wheelDirection = val;\n    }\n  });\n  if (mutableRef.current.animator == null) {\n    mutableRef.current.animator = new _ScrollAnimator[\"default\"]();\n  }\n  if (mutableRef.current.rtl !== rtl) {\n    mutableRef.current.rtl = rtl;\n  }\n  (0, _react.useLayoutEffect)(function () {\n    /* istanbul ignore next */\n    if (setScrollContainerHandle) {\n      Object.assign(themeScrollContainerHandle.current, {\n        applyOverscrollEffect: applyOverscrollEffect,\n        calculateDistanceByWheel: calculateDistanceByWheel,\n        canScrollHorizontally: canScrollHorizontally,\n        canScrollVertically: canScrollVertically,\n        checkAndApplyOverscrollEffect: checkAndApplyOverscrollEffect,\n        getScrollBounds: getScrollBounds,\n        scrollTo: scrollTo,\n        scrollToAccumulatedTarget: scrollToAccumulatedTarget,\n        setOverscrollStatus: setOverscrollStatus,\n        showScrollbarTrack: showScrollbarTrack,\n        start: start,\n        startHidingScrollbarTrack: startHidingScrollbarTrack,\n        stop: stop\n      });\n      setScrollContainerHandle(themeScrollContainerHandle.current);\n    }\n  });\n  (0, _react.useLayoutEffect)(function () {\n    if (props.cbScrollTo) {\n      props.cbScrollTo(scrollTo);\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  (0, _react.useLayoutEffect)(function () {\n    var containerRef = scrollContainerRef.current;\n    if (!containerRef) {\n      return;\n    }\n    if (typeof ResizeObserver === 'function') {\n      var resizeObserver = new ResizeObserver(function () {\n        if (scrollContentHandle.current && scrollContentHandle.current.syncClientSize) {\n          scrollContentHandle.current.syncClientSize();\n        }\n      });\n      resizeObserver.observe(containerRef);\n      return function () {\n        if (resizeObserver) {\n          resizeObserver.disconnect();\n          resizeObserver = null;\n        }\n      };\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  (0, _react.useLayoutEffect)(function () {\n    mutableRef.current.resizeRegistry.parent = context;\n\n    // componentWillUnmount\n    return function () {\n      var _mutableRef$current = mutableRef.current,\n        animator = _mutableRef$current.animator,\n        resizeRegistry = _mutableRef$current.resizeRegistry,\n        scrolling = _mutableRef$current.scrolling,\n        scrollStopJob = _mutableRef$current.scrollStopJob; // eslint-disable-line react-hooks/exhaustive-deps\n\n      resizeRegistry.parent = null;\n\n      // Before call cancelAnimationFrame, you must send scrollStop Event.\n      if (scrolling) {\n        forwardScrollEvent('onScrollStop', getReachedEdgeInfo());\n      }\n      scrollStopJob.stop();\n\n      // scrollMode 'translate' [\n      if (animator.isAnimating()) {\n        animator.stop();\n      }\n      // scrollMode 'translate' ]\n    };\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  (0, _react.useEffect)(function () {\n    addEventListeners();\n    return function () {\n      removeEventListeners();\n    };\n  });\n\n  // scrollMode 'translate' [[\n  // TODO: consider replacing forceUpdate() by storing bounds in state rather than a non-\n  // state member.\n  var enqueueForceUpdate = (0, _react.useCallback)(function () {\n    scrollContentHandle.current.calculateMetrics(scrollContentHandle.current.props);\n    forceUpdate();\n  }, [forceUpdate, scrollContentHandle]);\n  // scrollMode 'translate' ]]\n\n  function handleResizeWindow() {\n    var propsHandleResizeWindow = props.handleResizeWindow;\n\n    // `handleSize` in `ui/resolution.ResolutionDecorator` should be executed first.\n    setTimeout(function () {\n      var handleResizeResult = propsHandleResizeWindow === null || propsHandleResizeWindow === void 0 ? void 0 : propsHandleResizeWindow();\n      if (handleResizeResult) {\n        if (scrollMode === 'translate') {\n          scrollTo({\n            position: {\n              x: 0,\n              y: 0\n            },\n            animate: false\n          });\n        } else {\n          scrollContentHandle.current.scrollToPosition(0, 0, 'instant');\n        }\n      }\n      enqueueForceUpdate();\n    });\n  }\n\n  // scrollMode 'translate' [[\n  var handleResize = (0, _react.useCallback)(function (ev) {\n    if (ev.action === 'invalidateBounds') {\n      enqueueForceUpdate();\n    }\n  }, [enqueueForceUpdate]);\n  // scrollMode 'translate' ]]\n\n  if (mutableRef.current.resizeRegistry == null) {\n    mutableRef.current.resizeRegistry = _Registry[\"default\"].create(handleResize);\n  }\n  (0, _react.useLayoutEffect)(function () {\n    var ref = mutableRef.current;\n    if (scrollMode === 'translate') {\n      ref.scrollStopJob = new _util.Job(doScrollStop, scrollStopWaiting);\n    } else {\n      ref.scrollStopJob = new _util.Job(scrollStopOnScroll, scrollStopWaiting);\n    }\n    return function () {\n      if (ref.scrolling) {\n        ref.scrollStopJob.run();\n      }\n      ref.scrollStopJob.stop();\n    };\n  }, [direction, isHorizontalScrollbarVisible, isVerticalScrollbarVisible, rtl, scrollMode, spotlightContainerDisabled]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  (0, _react.useLayoutEffect)(function () {\n    var hasDataSizeChanged = scrollContentHandle.current.hasDataSizeChanged,\n      _mutableRef$current2 = mutableRef.current,\n      prevState = _mutableRef$current2.prevState,\n      resizeRegistry = _mutableRef$current2.resizeRegistry,\n      scrollToInfo = _mutableRef$current2.scrollToInfo;\n\n    // Need to sync calculated client size if it is different from the real size\n    if (scrollContentHandle.current.syncClientSize) {\n      // If we actually synced, we need to reset scroll position.\n      if (scrollContentHandle.current.syncClientSize()) {\n        setScrollLeft(0);\n        setScrollTop(0);\n      }\n    }\n    clampScrollPosition(); // scrollMode 'translate'\n\n    if (hasDataSizeChanged === false && (isHorizontalScrollbarVisible && !prevState.isHorizontalScrollbarVisible || isVerticalScrollbarVisible && !prevState.isVerticalScrollbarVisible)) {\n      mutableRef.current.deferScrollTo = false;\n      updateScrollbarTrackSize();\n    } else {\n      updateScrollbars();\n    }\n    if (scrollToInfo !== null) {\n      if (!mutableRef.current.deferScrollTo) {\n        scrollTo(scrollToInfo);\n      }\n    }\n\n    // publish container resize changes\n    var horizontal = isHorizontalScrollbarVisible !== prevState.isHorizontalScrollbarVisible;\n    var vertical = isVerticalScrollbarVisible !== prevState.isVerticalScrollbarVisible;\n    if (horizontal || vertical) {\n      resizeRegistry.notify({});\n    }\n  });\n\n  // scrollMode 'translate' [[\n  function clampScrollPosition() {\n    var bounds = getScrollBounds();\n    if (mutableRef.current.scrollTop > bounds.maxTop) {\n      mutableRef.current.scrollTop = bounds.maxTop;\n    }\n    if (mutableRef.current.scrollLeft > bounds.maxLeft) {\n      mutableRef.current.scrollLeft = bounds.maxLeft;\n    }\n  }\n  // scrollMode 'translate' ]]\n\n  // drag/flick event handlers\n\n  function getRtlX(x) {\n    return rtl ? -x : x;\n  }\n  function onMouseDown(ev) {\n    if (snapToCenter) {\n      ev.preventDefault();\n    }\n    if ((0, _handle.forwardWithPrevent)('onMouseDown', ev, props) && !snapToCenter) {\n      stop();\n    }\n  }\n\n  // scrollMode 'native' [[\n  function onTouchStart() {\n    mutableRef.current.isTouching = true;\n  }\n  // scrollMode 'native' ]]\n\n  function onDragStart(ev) {\n    if (scrollMode === 'translate') {\n      if (ev.type === 'dragstart') return;\n      (0, _handle.forward)('onDragStart', ev, props);\n      stop();\n      mutableRef.current.isDragging = true;\n      mutableRef.current.dragStartX = mutableRef.current.scrollLeft + getRtlX(ev.x);\n      mutableRef.current.dragStartY = mutableRef.current.scrollTop + ev.y;\n    } else {\n      if (!mutableRef.current.isTouching) {\n        stop();\n        mutableRef.current.isDragging = true;\n      }\n\n      // these values are used also for touch inputs\n      mutableRef.current.dragStartX = mutableRef.current.scrollLeft + getRtlX(ev.x);\n      mutableRef.current.dragStartY = mutableRef.current.scrollTop + ev.y;\n    }\n  }\n  function onDrag(ev) {\n    if (scrollMode === 'translate') {\n      if (ev.type === 'drag') {\n        return;\n      }\n      mutableRef.current.lastInputType = 'drag';\n      (0, _handle.forward)('onDrag', ev, props);\n      start({\n        targetX: direction === 'vertical' ? 0 : mutableRef.current.dragStartX - getRtlX(ev.x),\n        // 'horizontal' or 'both'\n        targetY: direction === 'horizontal' ? 0 : mutableRef.current.dragStartY - ev.y,\n        // 'vertical' or 'both'\n        animate: false,\n        overscrollEffect: overscrollEffectOn && overscrollEffectOn.drag\n      });\n    } else {\n      var targetX = direction === 'vertical' ? 0 : mutableRef.current.dragStartX - getRtlX(ev.x),\n        // 'horizontal' or 'both'\n        targetY = direction === 'horizontal' ? 0 : mutableRef.current.dragStartY - ev.y; // 'vertical' or 'both'\n\n      mutableRef.current.lastInputType = 'drag';\n      if (!mutableRef.current.isTouching) {\n        start({\n          targetX: targetX,\n          targetY: targetY,\n          animate: false,\n          overscrollEffect: overscrollEffectOn && overscrollEffectOn.drag\n        });\n      } else if (mutableRef.current.overscrollEnabled && overscrollEffectOn && overscrollEffectOn.drag) {\n        checkAndApplyOverscrollEffectOnDrag(targetX, targetY, overscrollTypeHold);\n      }\n    }\n  }\n  function onDragEnd(ev) {\n    if (scrollMode === 'translate') {\n      if (ev.type === 'dragend') {\n        return;\n      }\n      mutableRef.current.isDragging = false;\n      (0, _handle.forward)('onDragEnd', ev, props);\n      if (mutableRef.current.flickTarget) {\n        var _mutableRef$current$f = mutableRef.current.flickTarget,\n          targetX = _mutableRef$current$f.targetX,\n          targetY = _mutableRef$current$f.targetY,\n          duration = _mutableRef$current$f.duration;\n        mutableRef.current.lastInputType = 'drag';\n        mutableRef.current.isScrollAnimationTargetAccumulated = false;\n        start({\n          targetX: targetX,\n          targetY: targetY,\n          duration: duration,\n          overscrollEffect: overscrollEffectOn && overscrollEffectOn.drag\n        });\n      } else {\n        stop();\n      }\n      if (mutableRef.current.overscrollEnabled) {\n        // not check overscrollEffectOn && overscrollEffectOn.drag for safety\n        clearAllOverscrollEffects();\n      }\n      mutableRef.current.flickTarget = null;\n    } else {\n      mutableRef.current.isDragging = false;\n      mutableRef.current.lastInputType = 'drag';\n      if (mutableRef.current.flickTarget) {\n        var _mutableRef$current$f2 = mutableRef.current.flickTarget,\n          _targetX = _mutableRef$current$f2.targetX,\n          _targetY = _mutableRef$current$f2.targetY;\n        if (!mutableRef.current.isTouching) {\n          mutableRef.current.isScrollAnimationTargetAccumulated = false;\n          start({\n            targetX: _targetX,\n            targetY: _targetY,\n            overscrollEffect: overscrollEffectOn && overscrollEffectOn.drag\n          });\n        } else if (mutableRef.current.overscrollEnabled && overscrollEffectOn && overscrollEffectOn.drag) {\n          checkAndApplyOverscrollEffectOnDrag(_targetX, _targetY, overscrollTypeOnce);\n        }\n      } else if (!mutableRef.current.isTouching) {\n        stop();\n      }\n      if (mutableRef.current.overscrollEnabled) {\n        // not check overscrollEffectOn && overscrollEffectOn.drag for safety\n        clearAllOverscrollEffects();\n      }\n      mutableRef.current.isTouching = false;\n      mutableRef.current.flickTarget = null;\n    }\n  }\n  function onFlick(ev) {\n    var isVerticalFlick = ev.direction === 'vertical';\n    if (scrollMode === 'translate' || !mutableRef.current.isTouching) {\n      // except touch input in 'native' mode\n      mutableRef.current.flickTarget = mutableRef.current.animator.simulate(mutableRef.current.scrollLeft, mutableRef.current.scrollTop, direction !== 'vertical' && !isVerticalFlick ? getRtlX(-ev.velocityX) : 0, direction !== 'horizontal' && isVerticalFlick ? -ev.velocityY : 0);\n    } else if (mutableRef.current.overscrollEnabled && overscrollEffectOn && overscrollEffectOn.drag) {\n      // overscroll is required on touch input in 'native' mode\n      mutableRef.current.flickTarget = {\n        targetX: mutableRef.current.scrollLeft + (!isVerticalFlick ? getRtlX(-ev.velocityX) : 0) * overscrollVelocityFactor,\n        // 'horizontal' or 'both'\n        targetY: mutableRef.current.scrollTop + (isVerticalFlick ? -ev.velocityY : 0) * overscrollVelocityFactor // 'vertical' or 'both'\n      };\n    }\n    if (props.onFlick) {\n      (0, _handle.forward)('onFlick', ev, props);\n    }\n  }\n  function calculateDistanceByWheel(deltaMode, delta, maxPixel) {\n    if (deltaMode === 0) {\n      delta = (0, _clamp[\"default\"])(-maxPixel, maxPixel, _resolution[\"default\"].scale(delta * mutableRef.current.scrollWheelMultiplierForDeltaPixel));\n    } else if (deltaMode === 1) {\n      // line; firefox\n      delta = (0, _clamp[\"default\"])(-maxPixel, maxPixel, _resolution[\"default\"].scale(delta * mutableRef.current.pixelPerLine * mutableRef.current.scrollWheelMultiplierForDeltaPixel));\n    } else if (deltaMode === 2) {\n      // page\n      delta = delta < 0 ? -maxPixel : maxPixel;\n    }\n    return delta;\n  }\n\n  /*\n   * wheel event handler;\n   * - for horizontal scroll, supports wheel action on any children nodes since web engine cannot support this\n   * - for vertical scroll, supports wheel action on scrollbars only\n   */\n  function onWheel(ev) {\n    if (mutableRef.current.isDragging) {\n      ev.preventDefault();\n      ev.stopPropagation();\n    } else {\n      var bounds = getScrollBounds(),\n        canScrollH = canScrollHorizontally(bounds),\n        canScrollV = canScrollVertically(bounds),\n        eventDeltaMode = ev.deltaMode,\n        eventDelta = -ev.wheelDeltaY || ev.deltaY;\n      var delta = 0;\n      mutableRef.current.lastInputType = 'wheel';\n      if (noScrollByWheel) {\n        if (scrollMode === 'native' && canScrollV) {\n          ev.preventDefault();\n        }\n        return;\n      }\n      if (snapToCenter) {\n        if (scrollMode === 'native' && (canScrollV || canScrollH)) {\n          ev.preventDefault();\n          (0, _handle.forward)('onWheel', ev, props);\n          return;\n        }\n      }\n      if (scrollMode === 'translate') {\n        if (canScrollV) {\n          delta = calculateDistanceByWheel(eventDeltaMode, eventDelta, bounds.clientHeight * scrollWheelPageMultiplierForMaxPixel);\n        } else if (canScrollH) {\n          delta = calculateDistanceByWheel(eventDeltaMode, eventDelta, bounds.clientWidth * scrollWheelPageMultiplierForMaxPixel);\n        }\n        var dir = Math.sign(delta);\n        if (dir !== mutableRef.current.wheelDirection) {\n          mutableRef.current.isScrollAnimationTargetAccumulated = false;\n          mutableRef.current.wheelDirection = dir;\n        }\n        (0, _handle.forward)('onWheel', {\n          delta: delta,\n          horizontalScrollbarHandle: horizontalScrollbarHandle,\n          verticalScrollbarHandle: verticalScrollbarHandle\n        }, props);\n        if (delta !== 0) {\n          scrollToAccumulatedTarget(delta, canScrollV, overscrollEffectOn && overscrollEffectOn.wheel);\n          ev.preventDefault();\n          ev.stopPropagation();\n        }\n      } else {\n        // scrollMode 'native'\n        var overscrollEffectRequired = mutableRef.current.overscrollEnabled && overscrollEffectOn && overscrollEffectOn.wheel;\n        var needToHideScrollbarTrack = false;\n        if (props.onWheel) {\n          (0, _handle.forward)('onWheel', ev, props);\n          return;\n        }\n        showScrollbarTrack(bounds);\n\n        // FIXME This routine is a temporary support for horizontal wheel scroll.\n        // FIXME If web engine supports horizontal wheel, this routine should be refined or removed.\n        if (canScrollV) {\n          // This routine handles wheel events on scrollbars for vertical scroll.\n          if (eventDelta < 0 && mutableRef.current.scrollTop > 0 || eventDelta > 0 && mutableRef.current.scrollTop < bounds.maxTop) {\n            // Not to check if ev.target is a descendant of a wrapped component which may have a lot of nodes in it.\n            if (horizontalScrollbarHandle.current && horizontalScrollbarHandle.current.getContainerRef && _utilDOM[\"default\"].containsDangerously(horizontalScrollbarHandle.current.getContainerRef(), ev.target) || verticalScrollbarHandle.current && verticalScrollbarHandle.current.getContainerRef && _utilDOM[\"default\"].containsDangerously(verticalScrollbarHandle.current.getContainerRef(), ev.target)) {\n              delta = calculateDistanceByWheel(eventDeltaMode, eventDelta, bounds.clientHeight * scrollWheelPageMultiplierForMaxPixel);\n              needToHideScrollbarTrack = !delta;\n              ev.preventDefault();\n            } else if (overscrollEffectRequired) {\n              checkAndApplyOverscrollEffect('vertical', eventDelta > 0 ? 'after' : 'before', overscrollTypeOnce);\n            }\n            ev.stopPropagation();\n          } else {\n            if (overscrollEffectRequired && (eventDelta < 0 && mutableRef.current.scrollTop <= 0 || eventDelta > 0 && mutableRef.current.scrollTop >= bounds.maxTop)) {\n              applyOverscrollEffect('vertical', eventDelta > 0 ? 'after' : 'before', overscrollTypeOnce);\n            }\n            needToHideScrollbarTrack = true;\n          }\n        } else if (canScrollH) {\n          // this routine handles wheel events on any children for horizontal scroll.\n          if (eventDelta < 0 && mutableRef.current.scrollLeft > 0 || eventDelta > 0 && mutableRef.current.scrollLeft < bounds.maxLeft) {\n            delta = calculateDistanceByWheel(eventDeltaMode, eventDelta, bounds.clientWidth * scrollWheelPageMultiplierForMaxPixel);\n            needToHideScrollbarTrack = !delta;\n            ev.preventDefault();\n            ev.stopPropagation();\n          } else {\n            if (overscrollEffectRequired && (eventDelta < 0 && mutableRef.current.scrollLeft <= 0 || eventDelta > 0 && mutableRef.current.scrollLeft >= bounds.maxLeft)) {\n              applyOverscrollEffect('horizontal', eventDelta > 0 ? 'after' : 'before', overscrollTypeOnce);\n            }\n            needToHideScrollbarTrack = true;\n          }\n        }\n        if (delta !== 0) {\n          var _dir = Math.sign(delta);\n\n          // Not to accumulate scroll position if wheel direction is different from hold direction\n          if (_dir !== mutableRef.current.wheelDirection) {\n            mutableRef.current.isScrollAnimationTargetAccumulated = false;\n            mutableRef.current.wheelDirection = _dir;\n          }\n          scrollToAccumulatedTarget(delta, canScrollV, overscrollEffectOn && overscrollEffectOn.wheel);\n        }\n        if (needToHideScrollbarTrack) {\n          startHidingScrollbarTrack();\n        }\n      }\n    }\n  }\n\n  // scrollMode 'translate' [[\n  function scrollByPage(keyCode) {\n    var bounds = getScrollBounds(),\n      canScrollV = canScrollVertically(bounds),\n      pageDistance = (isPageUp(keyCode) ? -1 : 1) * (canScrollV ? bounds.clientHeight : bounds.clientWidth) * paginationPageMultiplier;\n    mutableRef.current.lastInputType = 'pageKey';\n    scrollToAccumulatedTarget(pageDistance, canScrollV, overscrollEffectOn && overscrollEffectOn.pageKey);\n  }\n  // scrollMode 'translate' ]]\n\n  // scrollMode 'native' [[\n  function onScroll(ev) {\n    var _ev$target = ev.target,\n      scrollLeft = _ev$target.scrollLeft,\n      scrollTop = _ev$target.scrollTop;\n    var bounds = getScrollBounds(),\n      canScrollH = canScrollHorizontally(bounds);\n    if (!mutableRef.current.scrolling) {\n      scrollStartOnScroll();\n    }\n    if (rtl && canScrollH) {\n      scrollLeft = _platform.platform.chrome < 85 ? bounds.maxLeft - scrollLeft : -scrollLeft;\n    }\n    if (scrollLeft !== mutableRef.current.scrollLeft) {\n      setScrollLeft(scrollLeft);\n    }\n    if (scrollTop !== mutableRef.current.scrollTop) {\n      setScrollTop(scrollTop);\n    }\n    if (scrollContentHandle.current.didScroll) {\n      scrollContentHandle.current.didScroll(mutableRef.current.scrollLeft, mutableRef.current.scrollTop);\n    }\n    forwardScrollEvent('onScroll');\n    mutableRef.current.scrollStopJob.start();\n  }\n  // scrollMode 'native' ]]\n\n  function onKeyDown(ev) {\n    if (scrollMode === 'translate') {\n      if (props.onKeyDown) {\n        (0, _handle.forward)('onKeyDown', ev, props);\n      } else if (isPageUp(ev.keyCode) || isPageDown(ev.keyCode)) {\n        scrollByPage(ev.keyCode);\n      }\n    } else {\n      (0, _handle.forward)('onKeyDown', ev, props);\n    }\n  }\n  function scrollToAccumulatedTarget(delta, vertical, overscrollEffect) {\n    if (!mutableRef.current.isScrollAnimationTargetAccumulated) {\n      mutableRef.current.accumulatedTargetX = mutableRef.current.scrollLeft;\n      mutableRef.current.accumulatedTargetY = mutableRef.current.scrollTop;\n      mutableRef.current.isScrollAnimationTargetAccumulated = true;\n    }\n    if (vertical) {\n      mutableRef.current.accumulatedTargetY += delta;\n    } else {\n      mutableRef.current.accumulatedTargetX += delta;\n    }\n    start({\n      targetX: mutableRef.current.accumulatedTargetX,\n      targetY: mutableRef.current.accumulatedTargetY,\n      overscrollEffect: overscrollEffect\n    });\n  }\n\n  // overscroll effect\n\n  function getEdgeFromPosition(position, maxPosition) {\n    if (position <= 0) {\n      return 'before';\n    } else if (position >= maxPosition - epsilon) {\n      return 'after';\n    } else {\n      return null;\n    }\n  }\n  function setOverscrollStatus(orientation, edge, overscrollEffectType, ratio) {\n    var status = mutableRef.current.overscrollStatus[orientation][edge];\n    status.type = overscrollEffectType;\n    status.ratio = ratio;\n  }\n  function getOverscrollStatus(orientation, edge) {\n    return mutableRef.current.overscrollStatus[orientation][edge];\n  }\n  function calculateOverscrollRatio(orientation, position) {\n    var bounds = getScrollBounds(),\n      isVertical = orientation === 'vertical',\n      baseSize = isVertical ? bounds.clientHeight : bounds.clientWidth,\n      maxPos = bounds[isVertical ? 'maxTop' : 'maxLeft'];\n    var overDistance = 0;\n    if (position < 0) {\n      overDistance = -position;\n    } else if (position > maxPos) {\n      overDistance = position - maxPos;\n    } else {\n      return 0;\n    }\n    return Math.min(1, 2 * overDistance / baseSize);\n  }\n  function applyOverscrollEffect(orientation, edge, overscrollEffectType) {\n    var ratio = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : overscrollDefaultRatio;\n    props.applyOverscrollEffect(orientation, edge, overscrollEffectType, ratio);\n    setOverscrollStatus(orientation, edge, overscrollEffectType === overscrollTypeOnce ? overscrollTypeDone : overscrollEffectType, ratio);\n  }\n  function checkAndApplyOverscrollEffect(orientation, edge, overscrollEffectType) {\n    var ratio = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : overscrollDefaultRatio;\n    var isVertical = orientation === 'vertical',\n      curPos = isVertical ? mutableRef.current.scrollTop : mutableRef.current.scrollLeft,\n      maxPos = getScrollBounds()[isVertical ? 'maxTop' : 'maxLeft'];\n    if (edge === 'before' && curPos <= 0 || edge === 'after' && curPos >= maxPos - epsilon) {\n      // Already on the edge\n      applyOverscrollEffect(orientation, edge, overscrollEffectType, ratio);\n    } else {\n      setOverscrollStatus(orientation, edge, overscrollEffectType, ratio);\n    }\n  }\n  function clearOverscrollEffect(orientation, edge) {\n    if (getOverscrollStatus(orientation, edge).type !== overscrollTypeNone) {\n      if (props.clearOverscrollEffect) {\n        props.clearOverscrollEffect(orientation, edge);\n      } else {\n        applyOverscrollEffect(orientation, edge, overscrollTypeNone, 0);\n      }\n    }\n  }\n  function clearAllOverscrollEffects() {\n    ['horizontal', 'vertical'].forEach(function (orientation) {\n      ['before', 'after'].forEach(function (edge) {\n        clearOverscrollEffect(orientation, edge);\n      });\n    });\n  }\n  function applyOverscrollEffectOnDrag(orientation, edge, targetPosition, overscrollEffectType) {\n    if (edge) {\n      var oppositeEdge = edge === 'before' ? 'after' : 'before',\n        ratio = calculateOverscrollRatio(orientation, targetPosition);\n      applyOverscrollEffect(orientation, edge, overscrollEffectType, ratio);\n      clearOverscrollEffect(orientation, oppositeEdge);\n    } else {\n      clearOverscrollEffect(orientation, 'before');\n      clearOverscrollEffect(orientation, 'after');\n    }\n  }\n\n  // scrollMode 'native' [[\n  function checkAndApplyOverscrollEffectOnDrag(targetX, targetY, overscrollEffectType) {\n    var bounds = getScrollBounds();\n    if (canScrollHorizontally(bounds)) {\n      applyOverscrollEffectOnDrag('horizontal', getEdgeFromPosition(targetX, bounds.maxLeft), targetX, overscrollEffectType);\n    }\n    if (canScrollVertically(bounds)) {\n      applyOverscrollEffectOnDrag('vertical', getEdgeFromPosition(targetY, bounds.maxTop), targetY, overscrollEffectType);\n    }\n  }\n  // scrollMode 'native' ]]\n\n  function checkAndApplyOverscrollEffectOnScroll(orientation) {\n    ['before', 'after'].forEach(function (edge) {\n      var _getOverscrollStatus = getOverscrollStatus(orientation, edge),\n        ratio = _getOverscrollStatus.ratio,\n        overscrollEffectType = _getOverscrollStatus.type;\n      if (overscrollEffectType === overscrollTypeOnce) {\n        checkAndApplyOverscrollEffect(orientation, edge, overscrollEffectType, ratio);\n      }\n    });\n  }\n  function checkAndApplyOverscrollEffectOnStart(orientation, edge, targetPosition) {\n    if (mutableRef.current.isDragging) {\n      applyOverscrollEffectOnDrag(orientation, edge, targetPosition, overscrollTypeHold);\n    } else if (edge) {\n      checkAndApplyOverscrollEffect(orientation, edge, overscrollTypeOnce);\n    }\n  }\n\n  // call scroll callbacks\n\n  var addObserverOnScroll = (0, _react.useCallback)(function (fn) {\n    var observerOnScroll = mutableRef.current.observerOnScroll;\n    if (typeof fn === 'function' && !observerOnScroll.includes(fn)) {\n      observerOnScroll.push(fn);\n    }\n  }, []);\n  var removeObserverOnScroll = (0, _react.useCallback)(function (fn) {\n    var observerOnScroll = mutableRef.current.observerOnScroll;\n    var index = observerOnScroll.indexOf(fn);\n    if (index !== -1) {\n      observerOnScroll.splice(index, 1);\n    }\n  }, []);\n  function forwardScrollEvent(type, reachedEdgeInfo) {\n    var data = {\n      scrollLeft: mutableRef.current.scrollLeft,\n      scrollTop: mutableRef.current.scrollTop,\n      moreInfo: getMoreInfo(),\n      reachedEdgeInfo: reachedEdgeInfo\n    };\n    (0, _handle.forward)(type, data, props);\n    if (type === 'onScroll') {\n      mutableRef.current.observerOnScroll.forEach(function (fn) {\n        return fn(data);\n      });\n    }\n  }\n\n  // scrollMode 'native' [[\n  // call scroll callbacks and update scrollbars for native scroll\n\n  function scrollStartOnScroll() {\n    mutableRef.current.scrolling = true;\n    showScrollbarTrack(getScrollBounds());\n    forwardScrollEvent('onScrollStart');\n  }\n  function scrollStopOnScroll() {\n    if (props.scrollStopOnScroll) {\n      props.scrollStopOnScroll();\n    }\n    if (mutableRef.current.overscrollEnabled && !mutableRef.current.isDragging) {\n      // not check overscrollEffectOn && overscrollEffectOn for safety\n      clearAllOverscrollEffects();\n    }\n    mutableRef.current.lastInputType = null;\n    mutableRef.current.isScrollAnimationTargetAccumulated = false;\n    mutableRef.current.scrolling = false;\n    forwardScrollEvent('onScrollStop', getReachedEdgeInfo());\n    startHidingScrollbarTrack();\n  }\n  // scrollMode 'native' ]]\n\n  // update scroll position\n\n  function setScrollLeft(value) {\n    var bounds = getScrollBounds();\n    mutableRef.current.scrollLeft = (0, _clamp[\"default\"])(0, bounds.maxLeft, value);\n    if (mutableRef.current.overscrollEnabled && overscrollEffectOn && overscrollEffectOn[mutableRef.current.lastInputType]) {\n      checkAndApplyOverscrollEffectOnScroll('horizontal');\n    }\n    if (isHorizontalScrollbarVisible) {\n      updateScrollbarTrack(horizontalScrollbarHandle, bounds);\n    }\n  }\n  function setScrollTop(value) {\n    var bounds = getScrollBounds();\n    mutableRef.current.scrollTop = (0, _clamp[\"default\"])(0, bounds.maxTop, value);\n    if (mutableRef.current.overscrollEnabled && overscrollEffectOn && overscrollEffectOn[mutableRef.current.lastInputType]) {\n      checkAndApplyOverscrollEffectOnScroll('vertical');\n    }\n    if (isVerticalScrollbarVisible) {\n      updateScrollbarTrack(verticalScrollbarHandle, bounds);\n    }\n  }\n  function getReachedEdgeInfo() {\n    var bounds = getScrollBounds(),\n      reachedEdgeInfo = {\n        bottom: false,\n        left: false,\n        right: false,\n        top: false\n      };\n    if (canScrollHorizontally(bounds)) {\n      var edge = getEdgeFromPosition(mutableRef.current.scrollLeft, bounds.maxLeft);\n      if (edge) {\n        // if edge is null, no need to check which edge is reached.\n        if (edge === 'before' && !rtl || edge === 'after' && rtl) {\n          reachedEdgeInfo.left = true;\n        } else {\n          reachedEdgeInfo.right = true;\n        }\n      }\n    }\n    if (canScrollVertically(bounds)) {\n      var _edge = getEdgeFromPosition(mutableRef.current.scrollTop, bounds.maxTop);\n      if (_edge === 'before') {\n        reachedEdgeInfo.top = true;\n      } else if (_edge === 'after') {\n        reachedEdgeInfo.bottom = true;\n      }\n    }\n    return reachedEdgeInfo;\n  }\n\n  // scroll start/stop\n\n  // scrollMode 'translate' [[\n  function doScrollStop() {\n    mutableRef.current.scrolling = false;\n    forwardScrollEvent('onScrollStop', getReachedEdgeInfo());\n  }\n  // scrollMode 'translate' ]]\n\n  function start(_ref2) {\n    var targetX = _ref2.targetX,\n      targetY = _ref2.targetY,\n      _ref2$animate = _ref2.animate,\n      animate = _ref2$animate === void 0 ? true : _ref2$animate,\n      _ref2$duration = _ref2.duration,\n      duration = _ref2$duration === void 0 ? animationDuration : _ref2$duration,\n      _ref2$overscrollEffec = _ref2.overscrollEffect,\n      overscrollEffect = _ref2$overscrollEffec === void 0 ? false : _ref2$overscrollEffec;\n    var _mutableRef$current3 = mutableRef.current,\n      scrollLeft = _mutableRef$current3.scrollLeft,\n      scrollTop = _mutableRef$current3.scrollTop,\n      bounds = getScrollBounds(),\n      maxLeft = bounds.maxLeft,\n      maxTop = bounds.maxTop;\n    var updatedAnimationInfo = scrollMode === 'translate' ? {\n      sourceX: scrollLeft,\n      sourceY: scrollTop,\n      targetX: targetX,\n      targetY: targetY,\n      duration: duration\n    } : {\n      targetX: targetX,\n      targetY: targetY\n    };\n\n    // bail early when scrolling to the same position\n    if ((scrollMode === 'translate' && mutableRef.current.animator.isAnimating() || scrollMode === 'native' && mutableRef.current.scrolling) && mutableRef.current.animationInfo && mutableRef.current.animationInfo.targetX === targetX && mutableRef.current.animationInfo.targetY === targetY) {\n      return;\n    }\n    mutableRef.current.animationInfo = updatedAnimationInfo;\n    if (scrollMode === 'translate') {\n      mutableRef.current.animator.stop();\n      if (!mutableRef.current.scrolling) {\n        mutableRef.current.scrolling = true;\n        forwardScrollEvent('onScrollStart');\n      }\n      mutableRef.current.scrollStopJob.stop();\n    }\n    if (Math.abs(maxLeft - targetX) < epsilon) {\n      targetX = maxLeft;\n    }\n    if (Math.abs(maxTop - targetY) < epsilon) {\n      targetY = maxTop;\n    }\n    if (mutableRef.current.overscrollEnabled && overscrollEffect) {\n      if (scrollLeft !== targetX && canScrollHorizontally(bounds)) {\n        checkAndApplyOverscrollEffectOnStart('horizontal', getEdgeFromPosition(targetX, maxLeft), targetX);\n      }\n      if (scrollTop !== targetY && canScrollVertically(bounds)) {\n        checkAndApplyOverscrollEffectOnStart('vertical', getEdgeFromPosition(targetY, maxTop), targetY);\n      }\n    }\n    if (scrollMode === 'translate') {\n      showScrollbarTrack(bounds);\n      if (scrollContentHandle.current && scrollContentHandle.current.setScrollPositionTarget) {\n        scrollContentHandle.current.setScrollPositionTarget(targetX, targetY);\n      }\n      if (animate) {\n        mutableRef.current.animator.animate(scrollAnimation(mutableRef.current.animationInfo));\n      } else {\n        scroll(targetX, targetY);\n        stop();\n      }\n    } else {\n      // scrollMode 'native'\n      if (animate) {\n        scrollContentHandle.current.scrollToPosition(targetX, targetY, 'smooth');\n      } else {\n        scrollContentHandle.current.scrollToPosition(targetX, targetY, 'instant');\n      }\n      if (props.start) {\n        props.start(animate);\n      }\n    }\n  }\n\n  // scrollMode 'translate' [[\n  function scrollAnimation(animationInfo) {\n    return function (curTime) {\n      var sourceX = animationInfo.sourceX,\n        sourceY = animationInfo.sourceY,\n        targetX = animationInfo.targetX,\n        targetY = animationInfo.targetY,\n        duration = animationInfo.duration,\n        bounds = getScrollBounds();\n      if (curTime < duration) {\n        var toBeContinued = false,\n          curTargetX = sourceX,\n          curTargetY = sourceY;\n        if (canScrollHorizontally(bounds)) {\n          curTargetX = mutableRef.current.animator.timingFunction(sourceX, targetX, duration, curTime);\n          if (Math.abs(curTargetX - targetX) < epsilon) {\n            curTargetX = targetX;\n          } else {\n            toBeContinued = true;\n          }\n        }\n        if (canScrollVertically(bounds)) {\n          curTargetY = mutableRef.current.animator.timingFunction(sourceY, targetY, duration, curTime);\n          if (Math.abs(curTargetY - targetY) < epsilon) {\n            curTargetY = targetY;\n          } else {\n            toBeContinued = true;\n          }\n        }\n        scroll(curTargetX, curTargetY);\n        if (!toBeContinued) {\n          stop();\n        }\n      } else {\n        scroll(targetX, targetY);\n        stop();\n      }\n    };\n  }\n  function scroll(left, top) {\n    if (left !== mutableRef.current.scrollLeft) {\n      setScrollLeft(left);\n    }\n    if (top !== mutableRef.current.scrollTop) {\n      setScrollTop(top);\n    }\n    scrollContentHandle.current.setScrollPosition(mutableRef.current.scrollLeft, mutableRef.current.scrollTop);\n    forwardScrollEvent('onScroll');\n  }\n  // scrollMode 'translate' ]]\n\n  function stopForTranslate() {\n    mutableRef.current.animator.stop();\n    mutableRef.current.lastInputType = null;\n    mutableRef.current.isScrollAnimationTargetAccumulated = false;\n    startHidingScrollbarTrack();\n    if (mutableRef.current.overscrollEnabled && !mutableRef.current.isDragging) {\n      // not check overscrollEffectOn && overscrollEffectOn for safety\n      clearAllOverscrollEffects();\n    }\n    if (props.stop) {\n      props.stop();\n    }\n    if (mutableRef.current.scrolling) {\n      mutableRef.current.scrollStopJob.start();\n    }\n  }\n  function stopForNative() {\n    scrollContentHandle.current.scrollToPosition(mutableRef.current.scrollLeft + (rtl ? -0.1 : 0.1), mutableRef.current.scrollTop + 0.1, 'instant');\n  }\n  function stop() {\n    if (scrollMode === 'translate') {\n      stopForTranslate();\n    } else {\n      stopForNative();\n    }\n  }\n\n  // scrollTo API\n\n  function getPositionForScrollTo(opt) {\n    var bounds = getScrollBounds(),\n      canScrollH = canScrollHorizontally(bounds),\n      canScrollV = canScrollVertically(bounds);\n    var itemPos,\n      left = null,\n      top = null;\n    if (opt instanceof Object) {\n      if (opt.position instanceof Object) {\n        if (canScrollH) {\n          // We need '!=' to check if opt.position.x is null or undefined\n          left = opt.position.x != null ? opt.position.x : mutableRef.current.scrollLeft;\n        } else {\n          left = 0;\n        }\n        if (canScrollV) {\n          // We need '!=' to check if opt.position.y is null or undefined\n          top = opt.position.y != null ? opt.position.y : mutableRef.current.scrollTop;\n        } else {\n          top = 0;\n        }\n      } else if (typeof opt.align === 'string') {\n        if (canScrollH) {\n          if (opt.align.includes('left')) {\n            left = 0;\n          } else if (opt.align.includes('right')) {\n            left = bounds.maxLeft;\n          }\n        }\n        if (canScrollV) {\n          if (opt.align.includes('top')) {\n            top = 0;\n          } else if (opt.align.includes('bottom')) {\n            top = bounds.maxTop;\n          }\n        }\n      } else {\n        if (typeof opt.index === 'number' && typeof scrollContentHandle.current.getItemPosition === 'function') {\n          itemPos = scrollContentHandle.current.getItemPosition(opt.index, opt.stickTo, opt.offset, opt.disallowNegativeOffset);\n        } else if (opt.node instanceof Object) {\n          if (opt.node.nodeType === 1 && typeof scrollContentHandle.current.getNodePosition === 'function') {\n            itemPos = scrollContentHandle.current.getNodePosition(opt.node);\n          }\n        }\n        if (itemPos) {\n          if (canScrollH) {\n            left = itemPos.left;\n          }\n          if (canScrollV) {\n            top = itemPos.top;\n          }\n        }\n      }\n    }\n    return {\n      left: left,\n      top: top\n    };\n  }\n  function scrollTo(opt) {\n    if (!mutableRef.current.deferScrollTo) {\n      var _getPositionForScroll = getPositionForScrollTo(opt),\n        left = _getPositionForScroll.left,\n        top = _getPositionForScroll.top;\n      var targetX = left !== null ? left : mutableRef.current.scrollLeft;\n      var targetY = top !== null ? top : mutableRef.current.scrollTop;\n      if (props.scrollTo) {\n        props.scrollTo(opt);\n      }\n      mutableRef.current.scrollToInfo = null;\n      if (scrollMode === 'native' && scrollContentHandle.current && scrollContentHandle.current.setScrollToPositionTarget) {\n        scrollContentHandle.current.setScrollToPositionTarget(targetX, targetY);\n      }\n      start({\n        targetX: targetX,\n        targetY: targetY,\n        animate: opt.animate\n      });\n    } else {\n      mutableRef.current.scrollToInfo = opt;\n    }\n  }\n  function canScrollHorizontally(bounds) {\n    return (direction === 'horizontal' || direction === 'both') && bounds.scrollWidth > bounds.clientWidth && !isNaN(bounds.scrollWidth);\n  }\n  function canScrollVertically(bounds) {\n    return (direction === 'vertical' || direction === 'both') && bounds.scrollHeight > bounds.clientHeight && !isNaN(bounds.scrollHeight);\n  }\n\n  // scroll bar\n\n  function showScrollbarTrack(bounds) {\n    if (isHorizontalScrollbarVisible && canScrollHorizontally(bounds) && horizontalScrollbarHandle.current) {\n      horizontalScrollbarHandle.current.showScrollbarTrack();\n    }\n    if (isVerticalScrollbarVisible && canScrollVertically(bounds) && verticalScrollbarHandle.current) {\n      verticalScrollbarHandle.current.showScrollbarTrack();\n    }\n  }\n  function updateScrollbarTrack(scrollbarRef, bounds) {\n    scrollbarRef.current.update(_objectSpread(_objectSpread({}, bounds), {}, {\n      scrollLeft: mutableRef.current.scrollLeft,\n      scrollTop: mutableRef.current.scrollTop\n    }));\n  }\n  function startHidingScrollbarTrack() {\n    if (isHorizontalScrollbarVisible && horizontalScrollbarHandle.current) {\n      horizontalScrollbarHandle.current.startHidingScrollbarTrack();\n    }\n    if (isVerticalScrollbarVisible && verticalScrollbarHandle.current) {\n      verticalScrollbarHandle.current.startHidingScrollbarTrack();\n    }\n  }\n  function updateScrollbars() {\n    var bounds = getScrollBounds(),\n      canScrollH = canScrollHorizontally(bounds),\n      canScrollV = canScrollVertically(bounds),\n      curHorizontalScrollbarVisible = horizontalScrollbar === 'auto' ? canScrollH : horizontalScrollbar === 'visible',\n      curVerticalScrollbarVisible = verticalScrollbar === 'auto' ? canScrollV : verticalScrollbar === 'visible';\n\n    // determine if we should hide or show any scrollbars\n    var isVisibilityChanged = isHorizontalScrollbarVisible !== curHorizontalScrollbarVisible || isVerticalScrollbarVisible !== curVerticalScrollbarVisible;\n    if (isVisibilityChanged) {\n      // one or both scrollbars have changed visibility\n      setIsHorizontalScrollbarVisible(curHorizontalScrollbarVisible);\n      setIsVerticalScrollbarVisible(curVerticalScrollbarVisible);\n    } else {\n      mutableRef.current.deferScrollTo = false;\n      updateScrollbarTrackSize();\n    }\n  }\n  function updateScrollbarTrackSize() {\n    var bounds = getScrollBounds(),\n      canScrollH = canScrollHorizontally(bounds),\n      canScrollV = canScrollVertically(bounds),\n      curHorizontalScrollbarVisible = horizontalScrollbar === 'auto' ? canScrollH : horizontalScrollbar === 'visible',\n      curVerticalScrollbarVisible = verticalScrollbar === 'auto' ? canScrollV : verticalScrollbar === 'visible';\n    if (curHorizontalScrollbarVisible || curVerticalScrollbarVisible) {\n      // no visibility change but need to notify whichever scrollbars are visible of the\n      // updated bounds and scroll position\n      var updatedBounds = _objectSpread(_objectSpread({}, bounds), {}, {\n        scrollLeft: mutableRef.current.scrollLeft,\n        scrollTop: mutableRef.current.scrollTop\n      });\n      if (curHorizontalScrollbarVisible && horizontalScrollbarHandle.current) {\n        horizontalScrollbarHandle.current.update(updatedBounds);\n      }\n      if (curVerticalScrollbarVisible && verticalScrollbarHandle.current) {\n        verticalScrollbarHandle.current.update(updatedBounds);\n      }\n      return true;\n    }\n    return false;\n  }\n\n  // ref\n\n  function getScrollBounds() {\n    if (scrollContentHandle.current && typeof scrollContentHandle.current.getScrollBounds === 'function') {\n      return scrollContentHandle.current.getScrollBounds();\n    }\n  }\n  function getMoreInfo() {\n    if (scrollContentHandle.current && typeof scrollContentHandle.current.getMoreInfo === 'function') {\n      return scrollContentHandle.current.getMoreInfo();\n    }\n  }\n\n  // FIXME setting event handlers directly to work on the V8 snapshot.\n  function addEventListeners() {\n    (0, _utilEvent[\"default\"])('wheel').addEventListener(scrollContainerRef, onWheel);\n    (0, _utilEvent[\"default\"])('keydown').addEventListener(scrollContainerRef, onKeyDown);\n    (0, _utilEvent[\"default\"])('mousedown').addEventListener(scrollContainerRef, onMouseDown);\n\n    // scrollMode 'native' [[\n    if (scrollMode === 'native' && scrollContentRef.current) {\n      (0, _utilEvent[\"default\"])('scroll').addEventListener(scrollContentRef, onScroll, {\n        passive: true\n      });\n    }\n    // scrollMode 'native' ]]\n\n    if (props.addEventListeners) {\n      props.addEventListeners(scrollContentRef);\n    }\n    if (window) {\n      (0, _utilEvent[\"default\"])('resize').addEventListener(window, handleResizeWindow);\n    }\n  }\n\n  // FIXME setting event handlers directly to work on the V8 snapshot.\n  function removeEventListeners() {\n    (0, _utilEvent[\"default\"])('wheel').removeEventListener(scrollContainerRef, onWheel);\n    (0, _utilEvent[\"default\"])('keydown').removeEventListener(scrollContainerRef, onKeyDown);\n    (0, _utilEvent[\"default\"])('mousedown').removeEventListener(scrollContainerRef, onMouseDown);\n\n    // scrollMode 'native' [[\n    (0, _utilEvent[\"default\"])('scroll').removeEventListener(scrollContentRef, onScroll, {\n      passive: true\n    });\n    // scrollMode 'native' ]]\n\n    if (props.removeEventListeners) {\n      props.removeEventListeners(scrollContentRef);\n    }\n    (0, _utilEvent[\"default\"])('resize').removeEventListener(window, handleResizeWindow);\n  }\n\n  // render\n\n  // scrollMode 'translate' [[\n  function handleScroll() {\n    // Prevent scroll by focus.\n    // VirtualList and VirtualGridList DO NOT receive `onscroll` event.\n    // Only Scroller could get `onscroll` event.\n    if (!mutableRef.current.animator.isAnimating() && scrollContentHandle.current && scrollContentRef.current && scrollContentHandle.current.getRtlPositionX && !mutableRef.current.isDragging) {\n      // For Scroller\n      scrollContentRef.current.scrollTop = mutableRef.current.scrollTop;\n      scrollContentRef.current.scrollLeft = scrollContentHandle.current.getRtlPositionX(mutableRef.current.scrollLeft);\n    }\n  }\n  // scrollMode 'translate' ]]\n\n  function scrollContainerContainsDangerously(target) {\n    return _utilDOM[\"default\"].containsDangerously(scrollContainerRef, target);\n  }\n  assignProperties('scrollContainerProps', _objectSpread(_objectSpread({}, rest), {}, {\n    className: [scrollClasses]\n  }));\n  assignProperties('scrollInnerContainerProps', {\n    className: [_useScrollModule[\"default\"].scrollInnerContainer]\n  });\n  assignProperties('scrollContentWrapperProps', _objectSpread({\n    className: [_useScrollModule[\"default\"].scrollContentWrapper]\n  }, !noScrollByDrag && {\n    flickConfig: flickConfig,\n    onDrag: onDrag,\n    onDragEnd: onDragEnd,\n    onDragStart: onDragStart,\n    onFlick: onFlick,\n    onTouchStart: scrollMode === 'native' ? onTouchStart : null // scrollMode 'native'\n  }));\n  var scrollContentProps = props.itemRenderer ?\n  // If the child component is a VirtualList\n  {\n    childProps: childProps,\n    clientSize: clientSize,\n    dataSize: dataSize,\n    itemRenderer: itemRenderer,\n    itemSize: itemSize,\n    itemSizes: itemSizes,\n    overhang: overhang,\n    pageScroll: pageScroll,\n    spacing: spacing,\n    wrap: wrap\n  } : {\n    children: children\n  };\n  assignProperties('scrollContentProps', _objectSpread(_objectSpread({}, scrollContentProps), {}, {\n    cbScrollTo: scrollTo,\n    className: [_useScrollModule[\"default\"].scrollFill],\n    direction: direction,\n    get isHorizontalScrollbarVisible() {\n      return isHorizontalScrollbarVisible;\n    },\n    get isVerticalScrollbarVisible() {\n      return isVerticalScrollbarVisible;\n    },\n    onScroll: scrollMode === 'translate' ? handleScroll : null,\n    role: role,\n    rtl: rtl,\n    scrollContainerContainsDangerously: scrollContainerContainsDangerously,\n    scrollMode: scrollMode\n  }));\n  assignProperties('verticalScrollbarProps', {\n    clientSize: clientSize,\n    disabled: !isVerticalScrollbarVisible,\n    rtl: rtl,\n    vertical: true\n  });\n  assignProperties('horizontalScrollbarProps', {\n    clientSize: clientSize,\n    corner: isVerticalScrollbarVisible,\n    disabled: !isHorizontalScrollbarVisible,\n    rtl: rtl,\n    vertical: false\n  });\n  assignProperties('resizeContextProps', {\n    value: mutableRef.current.resizeRegistry.register\n  });\n  mutableRef.current.deferScrollTo = true;\n  mutableRef.current.prevState = {\n    isHorizontalScrollbarVisible: isHorizontalScrollbarVisible,\n    isVerticalScrollbarVisible: isVerticalScrollbarVisible\n  };\n  return {\n    isHorizontalScrollbarVisible: isHorizontalScrollbarVisible,\n    isVerticalScrollbarVisible: isVerticalScrollbarVisible,\n    scrollContentWrapper: noScrollByDrag ? 'div' : TouchableDiv,\n    scrollObserver: {\n      addObserverOnScroll: addObserverOnScroll,\n      removeObserverOnScroll: removeObserverOnScroll\n    }\n  };\n};\nvar assignPropertiesOf = exports.assignPropertiesOf = function assignPropertiesOf(instance) {\n  return function (name, properties) {\n    if (!instance[name]) {\n      instance[name] = {};\n    }\n    if (typeof properties === 'object') {\n      for (var property in properties) {\n        if (property === 'className') {\n          process.env.NODE_ENV !== \"production\" ? (0, _warning[\"default\"])(Array.isArray(properties.className), 'Unsupported other types for `className` prop except Array') : void 0;\n          instance[name].className = (0, _classnames[\"default\"])(instance[name].className, properties.className);\n        } else {\n          process.env.NODE_ENV !== \"production\" ? (0, _warning[\"default\"])(!instance[name][property], 'Unsupported to push value in the same ' + property + ' prop.') : void 0;\n\n          // Override the previous value.\n          instance[name][property] = properties[property];\n        }\n      }\n    }\n  };\n};\nvar useScroll = exports.useScroll = function useScroll(props) {\n  // Mutable value\n\n  var scrollContainerRef = (0, _react.useRef)({});\n  var scrollContentHandle = (0, _react.useRef)({});\n  var scrollContentRef = (0, _react.useRef)({});\n  var itemRefs = (0, _react.useRef)([]);\n  var horizontalScrollbarHandle = (0, _react.useRef)({});\n  var verticalScrollbarHandle = (0, _react.useRef)({});\n\n  // Hooks\n\n  var collectionOfProperties = {},\n    assignProperties = assignPropertiesOf(collectionOfProperties);\n  var _useScrollBase = useScrollBase(_objectSpread(_objectSpread({}, props), {}, {\n      assignProperties: assignProperties,\n      horizontalScrollbarHandle: horizontalScrollbarHandle,\n      scrollContainerRef: scrollContainerRef,\n      scrollContentHandle: scrollContentHandle,\n      scrollContentRef: scrollContentRef,\n      verticalScrollbarHandle: verticalScrollbarHandle\n    })),\n    scrollContentWrapper = _useScrollBase.scrollContentWrapper,\n    isHorizontalScrollbarVisible = _useScrollBase.isHorizontalScrollbarVisible,\n    isVerticalScrollbarVisible = _useScrollBase.isVerticalScrollbarVisible;\n  assignProperties('scrollContainerProps', {\n    ref: scrollContainerRef\n  });\n  assignProperties('scrollContentProps', _objectSpread(_objectSpread({}, props.itemRenderer ? {\n    itemRefs: itemRefs\n  } : {}), {}, {\n    scrollContentRef: scrollContentRef\n  }));\n  assignProperties('verticalScrollbarProps', {\n    scrollbarHandle: verticalScrollbarHandle\n  });\n  assignProperties('horizontalScrollbarProps', {\n    scrollbarHandle: horizontalScrollbarHandle\n  });\n\n  // Return\n\n  return _objectSpread(_objectSpread({}, collectionOfProperties), {}, {\n    scrollContentWrapper: scrollContentWrapper,\n    scrollContentHandle: scrollContentHandle,\n    isHorizontalScrollbarVisible: isHorizontalScrollbarVisible,\n    isVerticalScrollbarVisible: isVerticalScrollbarVisible\n  });\n};\nvar _default = exports[\"default\"] = useScroll;","map":{"version":3,"names":["Object","defineProperty","exports","value","useScrollBase","useScroll","constants","assignPropertiesOf","_classnames","_interopRequireDefault","require","_handle","_keymap","_platform","_Registry","_util","_clamp","_react","_warning","_ForwardRef","_Resizable","_resolution","_Touchable","_ScrollAnimator","_utilDOM","_utilEvent","_useScrollModule","_jsxRuntime","_excluded","_excluded2","obj","__esModule","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","prototype","toString","call","slice","constructor","name","Array","from","test","len","length","arr2","r","l","t","Symbol","iterator","e","u","a","f","next","done","push","isArray","ownKeys","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","enumerable","apply","_objectSpread","arguments","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","key","_toPropertyKey","configurable","writable","_toPrimitive","String","toPrimitive","Number","_objectWithoutProperties","source","excluded","target","_objectWithoutPropertiesLoose","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","animationDuration","epsilon","flickConfig","maxDuration","isPageDown","is","isPageUp","nop","overscrollDefaultRatio","overscrollTypeNone","overscrollTypeHold","overscrollTypeOnce","overscrollTypeDone","overscrollVelocityFactor","paginationPageMultiplier","scrollStopWaiting","scrollWheelPageMultiplierForMaxPixel","TouchableDiv","prop","_ref","componentRef","rest","jsx","ref","useForceUpdate","useReducer","x","props","childProps","children","className","clientSize","assignProperties","dataSize","direction","horizontalScrollbar","horizontalScrollbarHandle","itemRenderer","itemSize","itemSizes","noScrollByDrag","noScrollByWheel","overhang","overscrollEffectOn","pageScroll","role","rtl","scrollContainerRef","scrollContentHandle","scrollContentRef","scrollMode","setScrollContainerHandle","snapToCenter","spacing","spotlightContainerDisabled","verticalScrollbar","verticalScrollbarHandle","wrap","scrollClasses","scroll","addEventListeners","applyOverscrollEffect","cbScrollTo","clearOverscrollEffect","handleResizeWindow","onFlick","onKeyDown","onMouseDown","onScroll","onScrollStart","onScrollStop","onWheel","removeEventListeners","scrollStopOnScroll","scrollTo","start","stop","_useForceUpdate","_useForceUpdate2","forceUpdate","context","useContext","ResizeContext","_useState","useState","_useState2","isHorizontalScrollbarVisible","setIsHorizontalScrollbarVisible","_useState3","_useState4","isVerticalScrollbarVisible","setIsVerticalScrollbarVisible","mutableRef","useRef","overscrollEnabled","animationInfo","resizeRegistry","pixelPerLine","scrollWheelMultiplierForDeltaPixel","deferScrollTo","isScrollAnimationTargetAccumulated","lastInputType","overscrollStatus","horizontal","before","type","ratio","after","vertical","bounds","clientWidth","clientHeight","scrollWidth","scrollHeight","maxTop","maxLeft","wheelDirection","isDragging","isTouching","scrolling","scrollLeft","scrollTop","scrollToInfo","animator","observerOnScroll","accumulatedTargetX","accumulatedTargetY","flickTarget","dragStartX","dragStartY","scrollStopJob","prevState","themeScrollContainerHandle","current","val","scrollBounds","getScrollBounds","useLayoutEffect","assign","calculateDistanceByWheel","canScrollHorizontally","canScrollVertically","checkAndApplyOverscrollEffect","scrollToAccumulatedTarget","setOverscrollStatus","showScrollbarTrack","startHidingScrollbarTrack","containerRef","ResizeObserver","resizeObserver","syncClientSize","observe","disconnect","parent","_mutableRef$current","forwardScrollEvent","getReachedEdgeInfo","isAnimating","useEffect","enqueueForceUpdate","useCallback","calculateMetrics","propsHandleResizeWindow","setTimeout","handleResizeResult","position","y","animate","scrollToPosition","handleResize","ev","action","create","Job","doScrollStop","run","hasDataSizeChanged","_mutableRef$current2","setScrollLeft","setScrollTop","clampScrollPosition","updateScrollbarTrackSize","updateScrollbars","notify","getRtlX","preventDefault","forwardWithPrevent","onTouchStart","onDragStart","forward","onDrag","targetX","targetY","overscrollEffect","drag","checkAndApplyOverscrollEffectOnDrag","onDragEnd","_mutableRef$current$f","duration","clearAllOverscrollEffects","_mutableRef$current$f2","_targetX","_targetY","isVerticalFlick","simulate","velocityX","velocityY","deltaMode","delta","maxPixel","scale","stopPropagation","canScrollH","canScrollV","eventDeltaMode","eventDelta","wheelDeltaY","deltaY","dir","Math","sign","wheel","overscrollEffectRequired","needToHideScrollbarTrack","getContainerRef","containsDangerously","_dir","scrollByPage","keyCode","pageDistance","pageKey","_ev$target","scrollStartOnScroll","platform","chrome","didScroll","getEdgeFromPosition","maxPosition","orientation","edge","overscrollEffectType","status","getOverscrollStatus","calculateOverscrollRatio","isVertical","baseSize","maxPos","overDistance","min","undefined","curPos","applyOverscrollEffectOnDrag","targetPosition","oppositeEdge","checkAndApplyOverscrollEffectOnScroll","_getOverscrollStatus","checkAndApplyOverscrollEffectOnStart","addObserverOnScroll","fn","includes","removeObserverOnScroll","index","splice","reachedEdgeInfo","data","moreInfo","getMoreInfo","updateScrollbarTrack","bottom","left","right","top","_edge","_ref2","_ref2$animate","_ref2$duration","_ref2$overscrollEffec","_mutableRef$current3","updatedAnimationInfo","sourceX","sourceY","abs","setScrollPositionTarget","scrollAnimation","curTime","toBeContinued","curTargetX","curTargetY","timingFunction","setScrollPosition","stopForTranslate","stopForNative","getPositionForScrollTo","opt","itemPos","align","getItemPosition","stickTo","offset","disallowNegativeOffset","node","nodeType","getNodePosition","_getPositionForScroll","setScrollToPositionTarget","isNaN","scrollbarRef","update","curHorizontalScrollbarVisible","curVerticalScrollbarVisible","isVisibilityChanged","updatedBounds","addEventListener","passive","window","removeEventListener","handleScroll","getRtlPositionX","scrollContainerContainsDangerously","scrollInnerContainer","scrollContentWrapper","scrollContentProps","scrollFill","disabled","corner","register","scrollObserver","instance","properties","property","process","env","NODE_ENV","itemRefs","collectionOfProperties","_useScrollBase","scrollbarHandle","_default"],"sources":["/Users/meogyu/connected_front/node_modules/@enact/ui/useScroll/useScroll.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useScrollBase = exports.useScroll = exports[\"default\"] = exports.constants = exports.assignPropertiesOf = void 0;\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\nvar _handle = require(\"@enact/core/handle\");\nvar _keymap = require(\"@enact/core/keymap\");\nvar _platform = require(\"@enact/core/platform\");\nvar _Registry = _interopRequireDefault(require(\"@enact/core/internal/Registry\"));\nvar _util = require(\"@enact/core/util\");\nvar _clamp = _interopRequireDefault(require(\"ramda/src/clamp\"));\nvar _react = require(\"react\");\nvar _warning = _interopRequireDefault(require(\"warning\"));\nvar _ForwardRef = _interopRequireDefault(require(\"../ForwardRef\"));\nvar _Resizable = require(\"../Resizable\");\nvar _resolution = _interopRequireDefault(require(\"../resolution\"));\nvar _Touchable = _interopRequireDefault(require(\"../Touchable\"));\nvar _ScrollAnimator = _interopRequireDefault(require(\"./ScrollAnimator\"));\nvar _utilDOM = _interopRequireDefault(require(\"./utilDOM\"));\nvar _utilEvent = _interopRequireDefault(require(\"./utilEvent\"));\nvar _useScrollModule = _interopRequireDefault(require(\"./useScroll.module.css\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _excluded = [\"componentRef\"],\n  _excluded2 = [\"childProps\", \"children\", \"className\", \"clientSize\", \"assignProperties\", \"dataSize\", \"direction\", \"horizontalScrollbar\", \"horizontalScrollbarHandle\", \"itemRenderer\", \"itemSize\", \"itemSizes\", \"noScrollByDrag\", \"noScrollByWheel\", \"overhang\", \"overscrollEffectOn\", \"pageScroll\", \"role\", \"rtl\", \"scrollContainerRef\", \"scrollContentHandle\", \"scrollContentRef\", \"scrollMode\", \"setScrollContainerHandle\", \"snapToCenter\", \"spacing\", \"spotlightContainerDisabled\", \"verticalScrollbar\", \"verticalScrollbarHandle\", \"wrap\"];\n/* global ResizeObserver */\n/**\n * Unstyled scrollable hook and behaviors to be customized by a theme or application.\n *\n * @module ui/useScroll\n * @exports assignPropertiesOf\n * @exports constants\n * @exports useScroll\n * @exports useScrollBase\n * @private\n */\n// scrollMode 'native'\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nvar constants = exports.constants = {\n    animationDuration: 1000,\n    epsilon: 1,\n    flickConfig: {\n      maxDuration: null\n    },\n    isPageDown: (0, _keymap.is)('pageDown'),\n    isPageUp: (0, _keymap.is)('pageUp'),\n    nop: function nop() {},\n    overscrollDefaultRatio: 0.5,\n    overscrollTypeNone: 0,\n    overscrollTypeHold: 1,\n    overscrollTypeOnce: 2,\n    overscrollTypeDone: 9,\n    overscrollVelocityFactor: 300,\n    // scrollMode 'native'\n    paginationPageMultiplier: 0.66,\n    scrollStopWaiting: 200,\n    scrollWheelPageMultiplierForMaxPixel: 0.2 // The ratio of the maximum distance scrolled by wheel to the size of the viewport.\n  },\n  animationDuration = constants.animationDuration,\n  epsilon = constants.epsilon,\n  flickConfig = constants.flickConfig,\n  isPageDown = constants.isPageDown,\n  isPageUp = constants.isPageUp,\n  overscrollDefaultRatio = constants.overscrollDefaultRatio,\n  overscrollTypeDone = constants.overscrollTypeDone,\n  overscrollTypeHold = constants.overscrollTypeHold,\n  overscrollTypeNone = constants.overscrollTypeNone,\n  overscrollTypeOnce = constants.overscrollTypeOnce,\n  overscrollVelocityFactor = constants.overscrollVelocityFactor,\n  paginationPageMultiplier = constants.paginationPageMultiplier,\n  scrollStopWaiting = constants.scrollStopWaiting,\n  scrollWheelPageMultiplierForMaxPixel = constants.scrollWheelPageMultiplierForMaxPixel;\nvar TouchableDiv = (0, _ForwardRef[\"default\"])({\n  prop: 'componentRef'\n}, (0, _Touchable[\"default\"])(function (_ref) {\n  var componentRef = _ref.componentRef,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/(0, _jsxRuntime.jsx)(\"div\", _objectSpread(_objectSpread({}, rest), {}, {\n    ref: componentRef\n  }));\n}));\nvar useForceUpdate = function useForceUpdate() {\n  return (0, _react.useReducer)(function (x) {\n    return x + 1;\n  }, 0);\n};\n\n/**\n * A custom hook that passes scrollable behavior information as its render prop.\n *\n * @class\n * @memberof ui/useScroll\n * @ui\n * @private\n */\nvar useScrollBase = exports.useScrollBase = function useScrollBase(props) {\n  var childProps = props.childProps,\n    children = props.children,\n    className = props.className,\n    clientSize = props.clientSize,\n    assignProperties = props.assignProperties,\n    dataSize = props.dataSize,\n    direction = props.direction,\n    horizontalScrollbar = props.horizontalScrollbar,\n    horizontalScrollbarHandle = props.horizontalScrollbarHandle,\n    itemRenderer = props.itemRenderer,\n    itemSize = props.itemSize,\n    itemSizes = props.itemSizes,\n    noScrollByDrag = props.noScrollByDrag,\n    noScrollByWheel = props.noScrollByWheel,\n    overhang = props.overhang,\n    overscrollEffectOn = props.overscrollEffectOn,\n    pageScroll = props.pageScroll,\n    role = props.role,\n    rtl = props.rtl,\n    scrollContainerRef = props.scrollContainerRef,\n    scrollContentHandle = props.scrollContentHandle,\n    scrollContentRef = props.scrollContentRef,\n    scrollMode = props.scrollMode,\n    setScrollContainerHandle = props.setScrollContainerHandle,\n    snapToCenter = props.snapToCenter,\n    spacing = props.spacing,\n    spotlightContainerDisabled = props.spotlightContainerDisabled,\n    verticalScrollbar = props.verticalScrollbar,\n    verticalScrollbarHandle = props.verticalScrollbarHandle,\n    wrap = props.wrap,\n    rest = _objectWithoutProperties(props, _excluded2),\n    scrollClasses = (0, _classnames[\"default\"])(_useScrollModule[\"default\"].scroll, className);\n\n  // The following props are the one having the same naming function in this scope.\n  // So it is better to use props[propName]\n  // instead of extracting it from the `props` and renaming it\n  delete rest.addEventListeners;\n  delete rest.applyOverscrollEffect;\n  delete rest.cbScrollTo;\n  delete rest.clearOverscrollEffect;\n  delete rest.handleResizeWindow;\n  delete rest.onFlick;\n  delete rest.onKeyDown;\n  delete rest.onMouseDown;\n  delete rest.onScroll;\n  delete rest.onScrollStart;\n  delete rest.onScrollStop;\n  delete rest.onWheel;\n  delete rest.removeEventListeners;\n  delete rest.scrollStopOnScroll; // scrollMode 'native'\n  delete rest.scrollTo;\n  delete rest.start; // scrollMode 'native'\n  delete rest.stop; // scrollMode 'translate'\n\n  // Mutable value and Hooks\n\n  var _useForceUpdate = useForceUpdate(),\n    _useForceUpdate2 = _slicedToArray(_useForceUpdate, 2),\n    forceUpdate = _useForceUpdate2[1];\n  var context = (0, _react.useContext)(_Resizable.ResizeContext);\n  var _useState = (0, _react.useState)(horizontalScrollbar === 'visible'),\n    _useState2 = _slicedToArray(_useState, 2),\n    isHorizontalScrollbarVisible = _useState2[0],\n    setIsHorizontalScrollbarVisible = _useState2[1];\n  var _useState3 = (0, _react.useState)(verticalScrollbar === 'visible'),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isVerticalScrollbarVisible = _useState4[0],\n    setIsVerticalScrollbarVisible = _useState4[1];\n  var mutableRef = (0, _react.useRef)({\n    overscrollEnabled: !!props.applyOverscrollEffect,\n    // Enable the early bail out of repeated scrolling to the same position\n    animationInfo: null,\n    resizeRegistry: null,\n    // constants\n    pixelPerLine: 39,\n    scrollWheelMultiplierForDeltaPixel: 1.5,\n    // The ratio of wheel 'delta' units to pixels scrolled.\n\n    // status\n    deferScrollTo: true,\n    isScrollAnimationTargetAccumulated: false,\n    rtl: rtl,\n    // overscroll\n    lastInputType: null,\n    overscrollStatus: {\n      horizontal: {\n        before: {\n          type: overscrollTypeNone,\n          ratio: 0\n        },\n        after: {\n          type: overscrollTypeNone,\n          ratio: 0\n        }\n      },\n      vertical: {\n        before: {\n          type: overscrollTypeNone,\n          ratio: 0\n        },\n        after: {\n          type: overscrollTypeNone,\n          ratio: 0\n        }\n      }\n    },\n    // bounds info\n    bounds: {\n      clientWidth: 0,\n      clientHeight: 0,\n      scrollWidth: 0,\n      scrollHeight: 0,\n      maxTop: 0,\n      maxLeft: 0\n    },\n    // wheel/drag/flick info\n    wheelDirection: 0,\n    isDragging: false,\n    isTouching: false,\n    // scrollMode 'native'\n\n    // scroll info\n    scrolling: false,\n    scrollLeft: 0,\n    scrollTop: 0,\n    scrollToInfo: null,\n    // scroll animator\n    animator: null,\n    // scroll status observer\n    observerOnScroll: [],\n    // non-declared-variable.\n    accumulatedTargetX: null,\n    accumulatedTargetY: null,\n    flickTarget: null,\n    dragStartX: null,\n    dragStartY: null,\n    scrollStopJob: null,\n    prevState: {\n      isHorizontalScrollbarVisible: isHorizontalScrollbarVisible,\n      isVerticalScrollbarVisible: isVerticalScrollbarVisible\n    }\n  });\n\n  /* istanbul ignore next */\n  var themeScrollContainerHandle = (0, _react.useRef)({\n    get animator() {\n      return mutableRef.current.animator;\n    },\n    get bounds() {\n      return mutableRef.current.bounds;\n    },\n    get isDragging() {\n      return mutableRef.current.isDragging;\n    },\n    set isDragging(val) {\n      mutableRef.current.isDragging = val;\n    },\n    get isScrollAnimationTargetAccumulated() {\n      return mutableRef.current.isScrollAnimationTargetAccumulated;\n    },\n    set isScrollAnimationTargetAccumulated(val) {\n      mutableRef.current.isScrollAnimationTargetAccumulated = val;\n    },\n    get lastInputType() {\n      return mutableRef.current.lastInputType;\n    },\n    set lastInputType(val) {\n      mutableRef.current.lastInputType = val;\n    },\n    get rtl() {\n      return mutableRef.current.rtl;\n    },\n    get scrollBounds() {\n      return getScrollBounds();\n    },\n    get scrollHeight() {\n      return mutableRef.current.bounds.scrollHeight;\n    },\n    get scrolling() {\n      return mutableRef.current.scrolling;\n    },\n    get scrollLeft() {\n      return mutableRef.current.scrollLeft;\n    },\n    get scrollToInfo() {\n      return mutableRef.current.scrollToInfo;\n    },\n    get scrollTop() {\n      return mutableRef.current.scrollTop;\n    },\n    get wheelDirection() {\n      return mutableRef.current.wheelDirection;\n    },\n    set wheelDirection(val) {\n      mutableRef.current.wheelDirection = val;\n    }\n  });\n  if (mutableRef.current.animator == null) {\n    mutableRef.current.animator = new _ScrollAnimator[\"default\"]();\n  }\n  if (mutableRef.current.rtl !== rtl) {\n    mutableRef.current.rtl = rtl;\n  }\n  (0, _react.useLayoutEffect)(function () {\n    /* istanbul ignore next */\n    if (setScrollContainerHandle) {\n      Object.assign(themeScrollContainerHandle.current, {\n        applyOverscrollEffect: applyOverscrollEffect,\n        calculateDistanceByWheel: calculateDistanceByWheel,\n        canScrollHorizontally: canScrollHorizontally,\n        canScrollVertically: canScrollVertically,\n        checkAndApplyOverscrollEffect: checkAndApplyOverscrollEffect,\n        getScrollBounds: getScrollBounds,\n        scrollTo: scrollTo,\n        scrollToAccumulatedTarget: scrollToAccumulatedTarget,\n        setOverscrollStatus: setOverscrollStatus,\n        showScrollbarTrack: showScrollbarTrack,\n        start: start,\n        startHidingScrollbarTrack: startHidingScrollbarTrack,\n        stop: stop\n      });\n      setScrollContainerHandle(themeScrollContainerHandle.current);\n    }\n  });\n  (0, _react.useLayoutEffect)(function () {\n    if (props.cbScrollTo) {\n      props.cbScrollTo(scrollTo);\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  (0, _react.useLayoutEffect)(function () {\n    var containerRef = scrollContainerRef.current;\n    if (!containerRef) {\n      return;\n    }\n    if (typeof ResizeObserver === 'function') {\n      var resizeObserver = new ResizeObserver(function () {\n        if (scrollContentHandle.current && scrollContentHandle.current.syncClientSize) {\n          scrollContentHandle.current.syncClientSize();\n        }\n      });\n      resizeObserver.observe(containerRef);\n      return function () {\n        if (resizeObserver) {\n          resizeObserver.disconnect();\n          resizeObserver = null;\n        }\n      };\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  (0, _react.useLayoutEffect)(function () {\n    mutableRef.current.resizeRegistry.parent = context;\n\n    // componentWillUnmount\n    return function () {\n      var _mutableRef$current = mutableRef.current,\n        animator = _mutableRef$current.animator,\n        resizeRegistry = _mutableRef$current.resizeRegistry,\n        scrolling = _mutableRef$current.scrolling,\n        scrollStopJob = _mutableRef$current.scrollStopJob; // eslint-disable-line react-hooks/exhaustive-deps\n\n      resizeRegistry.parent = null;\n\n      // Before call cancelAnimationFrame, you must send scrollStop Event.\n      if (scrolling) {\n        forwardScrollEvent('onScrollStop', getReachedEdgeInfo());\n      }\n      scrollStopJob.stop();\n\n      // scrollMode 'translate' [\n      if (animator.isAnimating()) {\n        animator.stop();\n      }\n      // scrollMode 'translate' ]\n    };\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  (0, _react.useEffect)(function () {\n    addEventListeners();\n    return function () {\n      removeEventListeners();\n    };\n  });\n\n  // scrollMode 'translate' [[\n  // TODO: consider replacing forceUpdate() by storing bounds in state rather than a non-\n  // state member.\n  var enqueueForceUpdate = (0, _react.useCallback)(function () {\n    scrollContentHandle.current.calculateMetrics(scrollContentHandle.current.props);\n    forceUpdate();\n  }, [forceUpdate, scrollContentHandle]);\n  // scrollMode 'translate' ]]\n\n  function handleResizeWindow() {\n    var propsHandleResizeWindow = props.handleResizeWindow;\n\n    // `handleSize` in `ui/resolution.ResolutionDecorator` should be executed first.\n    setTimeout(function () {\n      var handleResizeResult = propsHandleResizeWindow === null || propsHandleResizeWindow === void 0 ? void 0 : propsHandleResizeWindow();\n      if (handleResizeResult) {\n        if (scrollMode === 'translate') {\n          scrollTo({\n            position: {\n              x: 0,\n              y: 0\n            },\n            animate: false\n          });\n        } else {\n          scrollContentHandle.current.scrollToPosition(0, 0, 'instant');\n        }\n      }\n      enqueueForceUpdate();\n    });\n  }\n\n  // scrollMode 'translate' [[\n  var handleResize = (0, _react.useCallback)(function (ev) {\n    if (ev.action === 'invalidateBounds') {\n      enqueueForceUpdate();\n    }\n  }, [enqueueForceUpdate]);\n  // scrollMode 'translate' ]]\n\n  if (mutableRef.current.resizeRegistry == null) {\n    mutableRef.current.resizeRegistry = _Registry[\"default\"].create(handleResize);\n  }\n  (0, _react.useLayoutEffect)(function () {\n    var ref = mutableRef.current;\n    if (scrollMode === 'translate') {\n      ref.scrollStopJob = new _util.Job(doScrollStop, scrollStopWaiting);\n    } else {\n      ref.scrollStopJob = new _util.Job(scrollStopOnScroll, scrollStopWaiting);\n    }\n    return function () {\n      if (ref.scrolling) {\n        ref.scrollStopJob.run();\n      }\n      ref.scrollStopJob.stop();\n    };\n  }, [direction, isHorizontalScrollbarVisible, isVerticalScrollbarVisible, rtl, scrollMode, spotlightContainerDisabled]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  (0, _react.useLayoutEffect)(function () {\n    var hasDataSizeChanged = scrollContentHandle.current.hasDataSizeChanged,\n      _mutableRef$current2 = mutableRef.current,\n      prevState = _mutableRef$current2.prevState,\n      resizeRegistry = _mutableRef$current2.resizeRegistry,\n      scrollToInfo = _mutableRef$current2.scrollToInfo;\n\n    // Need to sync calculated client size if it is different from the real size\n    if (scrollContentHandle.current.syncClientSize) {\n      // If we actually synced, we need to reset scroll position.\n      if (scrollContentHandle.current.syncClientSize()) {\n        setScrollLeft(0);\n        setScrollTop(0);\n      }\n    }\n    clampScrollPosition(); // scrollMode 'translate'\n\n    if (hasDataSizeChanged === false && (isHorizontalScrollbarVisible && !prevState.isHorizontalScrollbarVisible || isVerticalScrollbarVisible && !prevState.isVerticalScrollbarVisible)) {\n      mutableRef.current.deferScrollTo = false;\n      updateScrollbarTrackSize();\n    } else {\n      updateScrollbars();\n    }\n    if (scrollToInfo !== null) {\n      if (!mutableRef.current.deferScrollTo) {\n        scrollTo(scrollToInfo);\n      }\n    }\n\n    // publish container resize changes\n    var horizontal = isHorizontalScrollbarVisible !== prevState.isHorizontalScrollbarVisible;\n    var vertical = isVerticalScrollbarVisible !== prevState.isVerticalScrollbarVisible;\n    if (horizontal || vertical) {\n      resizeRegistry.notify({});\n    }\n  });\n\n  // scrollMode 'translate' [[\n  function clampScrollPosition() {\n    var bounds = getScrollBounds();\n    if (mutableRef.current.scrollTop > bounds.maxTop) {\n      mutableRef.current.scrollTop = bounds.maxTop;\n    }\n    if (mutableRef.current.scrollLeft > bounds.maxLeft) {\n      mutableRef.current.scrollLeft = bounds.maxLeft;\n    }\n  }\n  // scrollMode 'translate' ]]\n\n  // drag/flick event handlers\n\n  function getRtlX(x) {\n    return rtl ? -x : x;\n  }\n  function onMouseDown(ev) {\n    if (snapToCenter) {\n      ev.preventDefault();\n    }\n    if ((0, _handle.forwardWithPrevent)('onMouseDown', ev, props) && !snapToCenter) {\n      stop();\n    }\n  }\n\n  // scrollMode 'native' [[\n  function onTouchStart() {\n    mutableRef.current.isTouching = true;\n  }\n  // scrollMode 'native' ]]\n\n  function onDragStart(ev) {\n    if (scrollMode === 'translate') {\n      if (ev.type === 'dragstart') return;\n      (0, _handle.forward)('onDragStart', ev, props);\n      stop();\n      mutableRef.current.isDragging = true;\n      mutableRef.current.dragStartX = mutableRef.current.scrollLeft + getRtlX(ev.x);\n      mutableRef.current.dragStartY = mutableRef.current.scrollTop + ev.y;\n    } else {\n      if (!mutableRef.current.isTouching) {\n        stop();\n        mutableRef.current.isDragging = true;\n      }\n\n      // these values are used also for touch inputs\n      mutableRef.current.dragStartX = mutableRef.current.scrollLeft + getRtlX(ev.x);\n      mutableRef.current.dragStartY = mutableRef.current.scrollTop + ev.y;\n    }\n  }\n  function onDrag(ev) {\n    if (scrollMode === 'translate') {\n      if (ev.type === 'drag') {\n        return;\n      }\n      mutableRef.current.lastInputType = 'drag';\n      (0, _handle.forward)('onDrag', ev, props);\n      start({\n        targetX: direction === 'vertical' ? 0 : mutableRef.current.dragStartX - getRtlX(ev.x),\n        // 'horizontal' or 'both'\n        targetY: direction === 'horizontal' ? 0 : mutableRef.current.dragStartY - ev.y,\n        // 'vertical' or 'both'\n        animate: false,\n        overscrollEffect: overscrollEffectOn && overscrollEffectOn.drag\n      });\n    } else {\n      var targetX = direction === 'vertical' ? 0 : mutableRef.current.dragStartX - getRtlX(ev.x),\n        // 'horizontal' or 'both'\n        targetY = direction === 'horizontal' ? 0 : mutableRef.current.dragStartY - ev.y; // 'vertical' or 'both'\n\n      mutableRef.current.lastInputType = 'drag';\n      if (!mutableRef.current.isTouching) {\n        start({\n          targetX: targetX,\n          targetY: targetY,\n          animate: false,\n          overscrollEffect: overscrollEffectOn && overscrollEffectOn.drag\n        });\n      } else if (mutableRef.current.overscrollEnabled && overscrollEffectOn && overscrollEffectOn.drag) {\n        checkAndApplyOverscrollEffectOnDrag(targetX, targetY, overscrollTypeHold);\n      }\n    }\n  }\n  function onDragEnd(ev) {\n    if (scrollMode === 'translate') {\n      if (ev.type === 'dragend') {\n        return;\n      }\n      mutableRef.current.isDragging = false;\n      (0, _handle.forward)('onDragEnd', ev, props);\n      if (mutableRef.current.flickTarget) {\n        var _mutableRef$current$f = mutableRef.current.flickTarget,\n          targetX = _mutableRef$current$f.targetX,\n          targetY = _mutableRef$current$f.targetY,\n          duration = _mutableRef$current$f.duration;\n        mutableRef.current.lastInputType = 'drag';\n        mutableRef.current.isScrollAnimationTargetAccumulated = false;\n        start({\n          targetX: targetX,\n          targetY: targetY,\n          duration: duration,\n          overscrollEffect: overscrollEffectOn && overscrollEffectOn.drag\n        });\n      } else {\n        stop();\n      }\n      if (mutableRef.current.overscrollEnabled) {\n        // not check overscrollEffectOn && overscrollEffectOn.drag for safety\n        clearAllOverscrollEffects();\n      }\n      mutableRef.current.flickTarget = null;\n    } else {\n      mutableRef.current.isDragging = false;\n      mutableRef.current.lastInputType = 'drag';\n      if (mutableRef.current.flickTarget) {\n        var _mutableRef$current$f2 = mutableRef.current.flickTarget,\n          _targetX = _mutableRef$current$f2.targetX,\n          _targetY = _mutableRef$current$f2.targetY;\n        if (!mutableRef.current.isTouching) {\n          mutableRef.current.isScrollAnimationTargetAccumulated = false;\n          start({\n            targetX: _targetX,\n            targetY: _targetY,\n            overscrollEffect: overscrollEffectOn && overscrollEffectOn.drag\n          });\n        } else if (mutableRef.current.overscrollEnabled && overscrollEffectOn && overscrollEffectOn.drag) {\n          checkAndApplyOverscrollEffectOnDrag(_targetX, _targetY, overscrollTypeOnce);\n        }\n      } else if (!mutableRef.current.isTouching) {\n        stop();\n      }\n      if (mutableRef.current.overscrollEnabled) {\n        // not check overscrollEffectOn && overscrollEffectOn.drag for safety\n        clearAllOverscrollEffects();\n      }\n      mutableRef.current.isTouching = false;\n      mutableRef.current.flickTarget = null;\n    }\n  }\n  function onFlick(ev) {\n    var isVerticalFlick = ev.direction === 'vertical';\n    if (scrollMode === 'translate' || !mutableRef.current.isTouching) {\n      // except touch input in 'native' mode\n      mutableRef.current.flickTarget = mutableRef.current.animator.simulate(mutableRef.current.scrollLeft, mutableRef.current.scrollTop, direction !== 'vertical' && !isVerticalFlick ? getRtlX(-ev.velocityX) : 0, direction !== 'horizontal' && isVerticalFlick ? -ev.velocityY : 0);\n    } else if (mutableRef.current.overscrollEnabled && overscrollEffectOn && overscrollEffectOn.drag) {\n      // overscroll is required on touch input in 'native' mode\n      mutableRef.current.flickTarget = {\n        targetX: mutableRef.current.scrollLeft + (!isVerticalFlick ? getRtlX(-ev.velocityX) : 0) * overscrollVelocityFactor,\n        // 'horizontal' or 'both'\n        targetY: mutableRef.current.scrollTop + (isVerticalFlick ? -ev.velocityY : 0) * overscrollVelocityFactor // 'vertical' or 'both'\n      };\n    }\n    if (props.onFlick) {\n      (0, _handle.forward)('onFlick', ev, props);\n    }\n  }\n  function calculateDistanceByWheel(deltaMode, delta, maxPixel) {\n    if (deltaMode === 0) {\n      delta = (0, _clamp[\"default\"])(-maxPixel, maxPixel, _resolution[\"default\"].scale(delta * mutableRef.current.scrollWheelMultiplierForDeltaPixel));\n    } else if (deltaMode === 1) {\n      // line; firefox\n      delta = (0, _clamp[\"default\"])(-maxPixel, maxPixel, _resolution[\"default\"].scale(delta * mutableRef.current.pixelPerLine * mutableRef.current.scrollWheelMultiplierForDeltaPixel));\n    } else if (deltaMode === 2) {\n      // page\n      delta = delta < 0 ? -maxPixel : maxPixel;\n    }\n    return delta;\n  }\n\n  /*\n   * wheel event handler;\n   * - for horizontal scroll, supports wheel action on any children nodes since web engine cannot support this\n   * - for vertical scroll, supports wheel action on scrollbars only\n   */\n  function onWheel(ev) {\n    if (mutableRef.current.isDragging) {\n      ev.preventDefault();\n      ev.stopPropagation();\n    } else {\n      var bounds = getScrollBounds(),\n        canScrollH = canScrollHorizontally(bounds),\n        canScrollV = canScrollVertically(bounds),\n        eventDeltaMode = ev.deltaMode,\n        eventDelta = -ev.wheelDeltaY || ev.deltaY;\n      var delta = 0;\n      mutableRef.current.lastInputType = 'wheel';\n      if (noScrollByWheel) {\n        if (scrollMode === 'native' && canScrollV) {\n          ev.preventDefault();\n        }\n        return;\n      }\n      if (snapToCenter) {\n        if (scrollMode === 'native' && (canScrollV || canScrollH)) {\n          ev.preventDefault();\n          (0, _handle.forward)('onWheel', ev, props);\n          return;\n        }\n      }\n      if (scrollMode === 'translate') {\n        if (canScrollV) {\n          delta = calculateDistanceByWheel(eventDeltaMode, eventDelta, bounds.clientHeight * scrollWheelPageMultiplierForMaxPixel);\n        } else if (canScrollH) {\n          delta = calculateDistanceByWheel(eventDeltaMode, eventDelta, bounds.clientWidth * scrollWheelPageMultiplierForMaxPixel);\n        }\n        var dir = Math.sign(delta);\n        if (dir !== mutableRef.current.wheelDirection) {\n          mutableRef.current.isScrollAnimationTargetAccumulated = false;\n          mutableRef.current.wheelDirection = dir;\n        }\n        (0, _handle.forward)('onWheel', {\n          delta: delta,\n          horizontalScrollbarHandle: horizontalScrollbarHandle,\n          verticalScrollbarHandle: verticalScrollbarHandle\n        }, props);\n        if (delta !== 0) {\n          scrollToAccumulatedTarget(delta, canScrollV, overscrollEffectOn && overscrollEffectOn.wheel);\n          ev.preventDefault();\n          ev.stopPropagation();\n        }\n      } else {\n        // scrollMode 'native'\n        var overscrollEffectRequired = mutableRef.current.overscrollEnabled && overscrollEffectOn && overscrollEffectOn.wheel;\n        var needToHideScrollbarTrack = false;\n        if (props.onWheel) {\n          (0, _handle.forward)('onWheel', ev, props);\n          return;\n        }\n        showScrollbarTrack(bounds);\n\n        // FIXME This routine is a temporary support for horizontal wheel scroll.\n        // FIXME If web engine supports horizontal wheel, this routine should be refined or removed.\n        if (canScrollV) {\n          // This routine handles wheel events on scrollbars for vertical scroll.\n          if (eventDelta < 0 && mutableRef.current.scrollTop > 0 || eventDelta > 0 && mutableRef.current.scrollTop < bounds.maxTop) {\n            // Not to check if ev.target is a descendant of a wrapped component which may have a lot of nodes in it.\n            if (horizontalScrollbarHandle.current && horizontalScrollbarHandle.current.getContainerRef && _utilDOM[\"default\"].containsDangerously(horizontalScrollbarHandle.current.getContainerRef(), ev.target) || verticalScrollbarHandle.current && verticalScrollbarHandle.current.getContainerRef && _utilDOM[\"default\"].containsDangerously(verticalScrollbarHandle.current.getContainerRef(), ev.target)) {\n              delta = calculateDistanceByWheel(eventDeltaMode, eventDelta, bounds.clientHeight * scrollWheelPageMultiplierForMaxPixel);\n              needToHideScrollbarTrack = !delta;\n              ev.preventDefault();\n            } else if (overscrollEffectRequired) {\n              checkAndApplyOverscrollEffect('vertical', eventDelta > 0 ? 'after' : 'before', overscrollTypeOnce);\n            }\n            ev.stopPropagation();\n          } else {\n            if (overscrollEffectRequired && (eventDelta < 0 && mutableRef.current.scrollTop <= 0 || eventDelta > 0 && mutableRef.current.scrollTop >= bounds.maxTop)) {\n              applyOverscrollEffect('vertical', eventDelta > 0 ? 'after' : 'before', overscrollTypeOnce);\n            }\n            needToHideScrollbarTrack = true;\n          }\n        } else if (canScrollH) {\n          // this routine handles wheel events on any children for horizontal scroll.\n          if (eventDelta < 0 && mutableRef.current.scrollLeft > 0 || eventDelta > 0 && mutableRef.current.scrollLeft < bounds.maxLeft) {\n            delta = calculateDistanceByWheel(eventDeltaMode, eventDelta, bounds.clientWidth * scrollWheelPageMultiplierForMaxPixel);\n            needToHideScrollbarTrack = !delta;\n            ev.preventDefault();\n            ev.stopPropagation();\n          } else {\n            if (overscrollEffectRequired && (eventDelta < 0 && mutableRef.current.scrollLeft <= 0 || eventDelta > 0 && mutableRef.current.scrollLeft >= bounds.maxLeft)) {\n              applyOverscrollEffect('horizontal', eventDelta > 0 ? 'after' : 'before', overscrollTypeOnce);\n            }\n            needToHideScrollbarTrack = true;\n          }\n        }\n        if (delta !== 0) {\n          var _dir = Math.sign(delta);\n\n          // Not to accumulate scroll position if wheel direction is different from hold direction\n          if (_dir !== mutableRef.current.wheelDirection) {\n            mutableRef.current.isScrollAnimationTargetAccumulated = false;\n            mutableRef.current.wheelDirection = _dir;\n          }\n          scrollToAccumulatedTarget(delta, canScrollV, overscrollEffectOn && overscrollEffectOn.wheel);\n        }\n        if (needToHideScrollbarTrack) {\n          startHidingScrollbarTrack();\n        }\n      }\n    }\n  }\n\n  // scrollMode 'translate' [[\n  function scrollByPage(keyCode) {\n    var bounds = getScrollBounds(),\n      canScrollV = canScrollVertically(bounds),\n      pageDistance = (isPageUp(keyCode) ? -1 : 1) * (canScrollV ? bounds.clientHeight : bounds.clientWidth) * paginationPageMultiplier;\n    mutableRef.current.lastInputType = 'pageKey';\n    scrollToAccumulatedTarget(pageDistance, canScrollV, overscrollEffectOn && overscrollEffectOn.pageKey);\n  }\n  // scrollMode 'translate' ]]\n\n  // scrollMode 'native' [[\n  function onScroll(ev) {\n    var _ev$target = ev.target,\n      scrollLeft = _ev$target.scrollLeft,\n      scrollTop = _ev$target.scrollTop;\n    var bounds = getScrollBounds(),\n      canScrollH = canScrollHorizontally(bounds);\n    if (!mutableRef.current.scrolling) {\n      scrollStartOnScroll();\n    }\n    if (rtl && canScrollH) {\n      scrollLeft = _platform.platform.chrome < 85 ? bounds.maxLeft - scrollLeft : -scrollLeft;\n    }\n    if (scrollLeft !== mutableRef.current.scrollLeft) {\n      setScrollLeft(scrollLeft);\n    }\n    if (scrollTop !== mutableRef.current.scrollTop) {\n      setScrollTop(scrollTop);\n    }\n    if (scrollContentHandle.current.didScroll) {\n      scrollContentHandle.current.didScroll(mutableRef.current.scrollLeft, mutableRef.current.scrollTop);\n    }\n    forwardScrollEvent('onScroll');\n    mutableRef.current.scrollStopJob.start();\n  }\n  // scrollMode 'native' ]]\n\n  function onKeyDown(ev) {\n    if (scrollMode === 'translate') {\n      if (props.onKeyDown) {\n        (0, _handle.forward)('onKeyDown', ev, props);\n      } else if (isPageUp(ev.keyCode) || isPageDown(ev.keyCode)) {\n        scrollByPage(ev.keyCode);\n      }\n    } else {\n      (0, _handle.forward)('onKeyDown', ev, props);\n    }\n  }\n  function scrollToAccumulatedTarget(delta, vertical, overscrollEffect) {\n    if (!mutableRef.current.isScrollAnimationTargetAccumulated) {\n      mutableRef.current.accumulatedTargetX = mutableRef.current.scrollLeft;\n      mutableRef.current.accumulatedTargetY = mutableRef.current.scrollTop;\n      mutableRef.current.isScrollAnimationTargetAccumulated = true;\n    }\n    if (vertical) {\n      mutableRef.current.accumulatedTargetY += delta;\n    } else {\n      mutableRef.current.accumulatedTargetX += delta;\n    }\n    start({\n      targetX: mutableRef.current.accumulatedTargetX,\n      targetY: mutableRef.current.accumulatedTargetY,\n      overscrollEffect: overscrollEffect\n    });\n  }\n\n  // overscroll effect\n\n  function getEdgeFromPosition(position, maxPosition) {\n    if (position <= 0) {\n      return 'before';\n    } else if (position >= maxPosition - epsilon) {\n      return 'after';\n    } else {\n      return null;\n    }\n  }\n  function setOverscrollStatus(orientation, edge, overscrollEffectType, ratio) {\n    var status = mutableRef.current.overscrollStatus[orientation][edge];\n    status.type = overscrollEffectType;\n    status.ratio = ratio;\n  }\n  function getOverscrollStatus(orientation, edge) {\n    return mutableRef.current.overscrollStatus[orientation][edge];\n  }\n  function calculateOverscrollRatio(orientation, position) {\n    var bounds = getScrollBounds(),\n      isVertical = orientation === 'vertical',\n      baseSize = isVertical ? bounds.clientHeight : bounds.clientWidth,\n      maxPos = bounds[isVertical ? 'maxTop' : 'maxLeft'];\n    var overDistance = 0;\n    if (position < 0) {\n      overDistance = -position;\n    } else if (position > maxPos) {\n      overDistance = position - maxPos;\n    } else {\n      return 0;\n    }\n    return Math.min(1, 2 * overDistance / baseSize);\n  }\n  function applyOverscrollEffect(orientation, edge, overscrollEffectType) {\n    var ratio = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : overscrollDefaultRatio;\n    props.applyOverscrollEffect(orientation, edge, overscrollEffectType, ratio);\n    setOverscrollStatus(orientation, edge, overscrollEffectType === overscrollTypeOnce ? overscrollTypeDone : overscrollEffectType, ratio);\n  }\n  function checkAndApplyOverscrollEffect(orientation, edge, overscrollEffectType) {\n    var ratio = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : overscrollDefaultRatio;\n    var isVertical = orientation === 'vertical',\n      curPos = isVertical ? mutableRef.current.scrollTop : mutableRef.current.scrollLeft,\n      maxPos = getScrollBounds()[isVertical ? 'maxTop' : 'maxLeft'];\n    if (edge === 'before' && curPos <= 0 || edge === 'after' && curPos >= maxPos - epsilon) {\n      // Already on the edge\n      applyOverscrollEffect(orientation, edge, overscrollEffectType, ratio);\n    } else {\n      setOverscrollStatus(orientation, edge, overscrollEffectType, ratio);\n    }\n  }\n  function clearOverscrollEffect(orientation, edge) {\n    if (getOverscrollStatus(orientation, edge).type !== overscrollTypeNone) {\n      if (props.clearOverscrollEffect) {\n        props.clearOverscrollEffect(orientation, edge);\n      } else {\n        applyOverscrollEffect(orientation, edge, overscrollTypeNone, 0);\n      }\n    }\n  }\n  function clearAllOverscrollEffects() {\n    ['horizontal', 'vertical'].forEach(function (orientation) {\n      ['before', 'after'].forEach(function (edge) {\n        clearOverscrollEffect(orientation, edge);\n      });\n    });\n  }\n  function applyOverscrollEffectOnDrag(orientation, edge, targetPosition, overscrollEffectType) {\n    if (edge) {\n      var oppositeEdge = edge === 'before' ? 'after' : 'before',\n        ratio = calculateOverscrollRatio(orientation, targetPosition);\n      applyOverscrollEffect(orientation, edge, overscrollEffectType, ratio);\n      clearOverscrollEffect(orientation, oppositeEdge);\n    } else {\n      clearOverscrollEffect(orientation, 'before');\n      clearOverscrollEffect(orientation, 'after');\n    }\n  }\n\n  // scrollMode 'native' [[\n  function checkAndApplyOverscrollEffectOnDrag(targetX, targetY, overscrollEffectType) {\n    var bounds = getScrollBounds();\n    if (canScrollHorizontally(bounds)) {\n      applyOverscrollEffectOnDrag('horizontal', getEdgeFromPosition(targetX, bounds.maxLeft), targetX, overscrollEffectType);\n    }\n    if (canScrollVertically(bounds)) {\n      applyOverscrollEffectOnDrag('vertical', getEdgeFromPosition(targetY, bounds.maxTop), targetY, overscrollEffectType);\n    }\n  }\n  // scrollMode 'native' ]]\n\n  function checkAndApplyOverscrollEffectOnScroll(orientation) {\n    ['before', 'after'].forEach(function (edge) {\n      var _getOverscrollStatus = getOverscrollStatus(orientation, edge),\n        ratio = _getOverscrollStatus.ratio,\n        overscrollEffectType = _getOverscrollStatus.type;\n      if (overscrollEffectType === overscrollTypeOnce) {\n        checkAndApplyOverscrollEffect(orientation, edge, overscrollEffectType, ratio);\n      }\n    });\n  }\n  function checkAndApplyOverscrollEffectOnStart(orientation, edge, targetPosition) {\n    if (mutableRef.current.isDragging) {\n      applyOverscrollEffectOnDrag(orientation, edge, targetPosition, overscrollTypeHold);\n    } else if (edge) {\n      checkAndApplyOverscrollEffect(orientation, edge, overscrollTypeOnce);\n    }\n  }\n\n  // call scroll callbacks\n\n  var addObserverOnScroll = (0, _react.useCallback)(function (fn) {\n    var observerOnScroll = mutableRef.current.observerOnScroll;\n    if (typeof fn === 'function' && !observerOnScroll.includes(fn)) {\n      observerOnScroll.push(fn);\n    }\n  }, []);\n  var removeObserverOnScroll = (0, _react.useCallback)(function (fn) {\n    var observerOnScroll = mutableRef.current.observerOnScroll;\n    var index = observerOnScroll.indexOf(fn);\n    if (index !== -1) {\n      observerOnScroll.splice(index, 1);\n    }\n  }, []);\n  function forwardScrollEvent(type, reachedEdgeInfo) {\n    var data = {\n      scrollLeft: mutableRef.current.scrollLeft,\n      scrollTop: mutableRef.current.scrollTop,\n      moreInfo: getMoreInfo(),\n      reachedEdgeInfo: reachedEdgeInfo\n    };\n    (0, _handle.forward)(type, data, props);\n    if (type === 'onScroll') {\n      mutableRef.current.observerOnScroll.forEach(function (fn) {\n        return fn(data);\n      });\n    }\n  }\n\n  // scrollMode 'native' [[\n  // call scroll callbacks and update scrollbars for native scroll\n\n  function scrollStartOnScroll() {\n    mutableRef.current.scrolling = true;\n    showScrollbarTrack(getScrollBounds());\n    forwardScrollEvent('onScrollStart');\n  }\n  function scrollStopOnScroll() {\n    if (props.scrollStopOnScroll) {\n      props.scrollStopOnScroll();\n    }\n    if (mutableRef.current.overscrollEnabled && !mutableRef.current.isDragging) {\n      // not check overscrollEffectOn && overscrollEffectOn for safety\n      clearAllOverscrollEffects();\n    }\n    mutableRef.current.lastInputType = null;\n    mutableRef.current.isScrollAnimationTargetAccumulated = false;\n    mutableRef.current.scrolling = false;\n    forwardScrollEvent('onScrollStop', getReachedEdgeInfo());\n    startHidingScrollbarTrack();\n  }\n  // scrollMode 'native' ]]\n\n  // update scroll position\n\n  function setScrollLeft(value) {\n    var bounds = getScrollBounds();\n    mutableRef.current.scrollLeft = (0, _clamp[\"default\"])(0, bounds.maxLeft, value);\n    if (mutableRef.current.overscrollEnabled && overscrollEffectOn && overscrollEffectOn[mutableRef.current.lastInputType]) {\n      checkAndApplyOverscrollEffectOnScroll('horizontal');\n    }\n    if (isHorizontalScrollbarVisible) {\n      updateScrollbarTrack(horizontalScrollbarHandle, bounds);\n    }\n  }\n  function setScrollTop(value) {\n    var bounds = getScrollBounds();\n    mutableRef.current.scrollTop = (0, _clamp[\"default\"])(0, bounds.maxTop, value);\n    if (mutableRef.current.overscrollEnabled && overscrollEffectOn && overscrollEffectOn[mutableRef.current.lastInputType]) {\n      checkAndApplyOverscrollEffectOnScroll('vertical');\n    }\n    if (isVerticalScrollbarVisible) {\n      updateScrollbarTrack(verticalScrollbarHandle, bounds);\n    }\n  }\n  function getReachedEdgeInfo() {\n    var bounds = getScrollBounds(),\n      reachedEdgeInfo = {\n        bottom: false,\n        left: false,\n        right: false,\n        top: false\n      };\n    if (canScrollHorizontally(bounds)) {\n      var edge = getEdgeFromPosition(mutableRef.current.scrollLeft, bounds.maxLeft);\n      if (edge) {\n        // if edge is null, no need to check which edge is reached.\n        if (edge === 'before' && !rtl || edge === 'after' && rtl) {\n          reachedEdgeInfo.left = true;\n        } else {\n          reachedEdgeInfo.right = true;\n        }\n      }\n    }\n    if (canScrollVertically(bounds)) {\n      var _edge = getEdgeFromPosition(mutableRef.current.scrollTop, bounds.maxTop);\n      if (_edge === 'before') {\n        reachedEdgeInfo.top = true;\n      } else if (_edge === 'after') {\n        reachedEdgeInfo.bottom = true;\n      }\n    }\n    return reachedEdgeInfo;\n  }\n\n  // scroll start/stop\n\n  // scrollMode 'translate' [[\n  function doScrollStop() {\n    mutableRef.current.scrolling = false;\n    forwardScrollEvent('onScrollStop', getReachedEdgeInfo());\n  }\n  // scrollMode 'translate' ]]\n\n  function start(_ref2) {\n    var targetX = _ref2.targetX,\n      targetY = _ref2.targetY,\n      _ref2$animate = _ref2.animate,\n      animate = _ref2$animate === void 0 ? true : _ref2$animate,\n      _ref2$duration = _ref2.duration,\n      duration = _ref2$duration === void 0 ? animationDuration : _ref2$duration,\n      _ref2$overscrollEffec = _ref2.overscrollEffect,\n      overscrollEffect = _ref2$overscrollEffec === void 0 ? false : _ref2$overscrollEffec;\n    var _mutableRef$current3 = mutableRef.current,\n      scrollLeft = _mutableRef$current3.scrollLeft,\n      scrollTop = _mutableRef$current3.scrollTop,\n      bounds = getScrollBounds(),\n      maxLeft = bounds.maxLeft,\n      maxTop = bounds.maxTop;\n    var updatedAnimationInfo = scrollMode === 'translate' ? {\n      sourceX: scrollLeft,\n      sourceY: scrollTop,\n      targetX: targetX,\n      targetY: targetY,\n      duration: duration\n    } : {\n      targetX: targetX,\n      targetY: targetY\n    };\n\n    // bail early when scrolling to the same position\n    if ((scrollMode === 'translate' && mutableRef.current.animator.isAnimating() || scrollMode === 'native' && mutableRef.current.scrolling) && mutableRef.current.animationInfo && mutableRef.current.animationInfo.targetX === targetX && mutableRef.current.animationInfo.targetY === targetY) {\n      return;\n    }\n    mutableRef.current.animationInfo = updatedAnimationInfo;\n    if (scrollMode === 'translate') {\n      mutableRef.current.animator.stop();\n      if (!mutableRef.current.scrolling) {\n        mutableRef.current.scrolling = true;\n        forwardScrollEvent('onScrollStart');\n      }\n      mutableRef.current.scrollStopJob.stop();\n    }\n    if (Math.abs(maxLeft - targetX) < epsilon) {\n      targetX = maxLeft;\n    }\n    if (Math.abs(maxTop - targetY) < epsilon) {\n      targetY = maxTop;\n    }\n    if (mutableRef.current.overscrollEnabled && overscrollEffect) {\n      if (scrollLeft !== targetX && canScrollHorizontally(bounds)) {\n        checkAndApplyOverscrollEffectOnStart('horizontal', getEdgeFromPosition(targetX, maxLeft), targetX);\n      }\n      if (scrollTop !== targetY && canScrollVertically(bounds)) {\n        checkAndApplyOverscrollEffectOnStart('vertical', getEdgeFromPosition(targetY, maxTop), targetY);\n      }\n    }\n    if (scrollMode === 'translate') {\n      showScrollbarTrack(bounds);\n      if (scrollContentHandle.current && scrollContentHandle.current.setScrollPositionTarget) {\n        scrollContentHandle.current.setScrollPositionTarget(targetX, targetY);\n      }\n      if (animate) {\n        mutableRef.current.animator.animate(scrollAnimation(mutableRef.current.animationInfo));\n      } else {\n        scroll(targetX, targetY);\n        stop();\n      }\n    } else {\n      // scrollMode 'native'\n      if (animate) {\n        scrollContentHandle.current.scrollToPosition(targetX, targetY, 'smooth');\n      } else {\n        scrollContentHandle.current.scrollToPosition(targetX, targetY, 'instant');\n      }\n      if (props.start) {\n        props.start(animate);\n      }\n    }\n  }\n\n  // scrollMode 'translate' [[\n  function scrollAnimation(animationInfo) {\n    return function (curTime) {\n      var sourceX = animationInfo.sourceX,\n        sourceY = animationInfo.sourceY,\n        targetX = animationInfo.targetX,\n        targetY = animationInfo.targetY,\n        duration = animationInfo.duration,\n        bounds = getScrollBounds();\n      if (curTime < duration) {\n        var toBeContinued = false,\n          curTargetX = sourceX,\n          curTargetY = sourceY;\n        if (canScrollHorizontally(bounds)) {\n          curTargetX = mutableRef.current.animator.timingFunction(sourceX, targetX, duration, curTime);\n          if (Math.abs(curTargetX - targetX) < epsilon) {\n            curTargetX = targetX;\n          } else {\n            toBeContinued = true;\n          }\n        }\n        if (canScrollVertically(bounds)) {\n          curTargetY = mutableRef.current.animator.timingFunction(sourceY, targetY, duration, curTime);\n          if (Math.abs(curTargetY - targetY) < epsilon) {\n            curTargetY = targetY;\n          } else {\n            toBeContinued = true;\n          }\n        }\n        scroll(curTargetX, curTargetY);\n        if (!toBeContinued) {\n          stop();\n        }\n      } else {\n        scroll(targetX, targetY);\n        stop();\n      }\n    };\n  }\n  function scroll(left, top) {\n    if (left !== mutableRef.current.scrollLeft) {\n      setScrollLeft(left);\n    }\n    if (top !== mutableRef.current.scrollTop) {\n      setScrollTop(top);\n    }\n    scrollContentHandle.current.setScrollPosition(mutableRef.current.scrollLeft, mutableRef.current.scrollTop);\n    forwardScrollEvent('onScroll');\n  }\n  // scrollMode 'translate' ]]\n\n  function stopForTranslate() {\n    mutableRef.current.animator.stop();\n    mutableRef.current.lastInputType = null;\n    mutableRef.current.isScrollAnimationTargetAccumulated = false;\n    startHidingScrollbarTrack();\n    if (mutableRef.current.overscrollEnabled && !mutableRef.current.isDragging) {\n      // not check overscrollEffectOn && overscrollEffectOn for safety\n      clearAllOverscrollEffects();\n    }\n    if (props.stop) {\n      props.stop();\n    }\n    if (mutableRef.current.scrolling) {\n      mutableRef.current.scrollStopJob.start();\n    }\n  }\n  function stopForNative() {\n    scrollContentHandle.current.scrollToPosition(mutableRef.current.scrollLeft + (rtl ? -0.1 : 0.1), mutableRef.current.scrollTop + 0.1, 'instant');\n  }\n  function stop() {\n    if (scrollMode === 'translate') {\n      stopForTranslate();\n    } else {\n      stopForNative();\n    }\n  }\n\n  // scrollTo API\n\n  function getPositionForScrollTo(opt) {\n    var bounds = getScrollBounds(),\n      canScrollH = canScrollHorizontally(bounds),\n      canScrollV = canScrollVertically(bounds);\n    var itemPos,\n      left = null,\n      top = null;\n    if (opt instanceof Object) {\n      if (opt.position instanceof Object) {\n        if (canScrollH) {\n          // We need '!=' to check if opt.position.x is null or undefined\n          left = opt.position.x != null ? opt.position.x : mutableRef.current.scrollLeft;\n        } else {\n          left = 0;\n        }\n        if (canScrollV) {\n          // We need '!=' to check if opt.position.y is null or undefined\n          top = opt.position.y != null ? opt.position.y : mutableRef.current.scrollTop;\n        } else {\n          top = 0;\n        }\n      } else if (typeof opt.align === 'string') {\n        if (canScrollH) {\n          if (opt.align.includes('left')) {\n            left = 0;\n          } else if (opt.align.includes('right')) {\n            left = bounds.maxLeft;\n          }\n        }\n        if (canScrollV) {\n          if (opt.align.includes('top')) {\n            top = 0;\n          } else if (opt.align.includes('bottom')) {\n            top = bounds.maxTop;\n          }\n        }\n      } else {\n        if (typeof opt.index === 'number' && typeof scrollContentHandle.current.getItemPosition === 'function') {\n          itemPos = scrollContentHandle.current.getItemPosition(opt.index, opt.stickTo, opt.offset, opt.disallowNegativeOffset);\n        } else if (opt.node instanceof Object) {\n          if (opt.node.nodeType === 1 && typeof scrollContentHandle.current.getNodePosition === 'function') {\n            itemPos = scrollContentHandle.current.getNodePosition(opt.node);\n          }\n        }\n        if (itemPos) {\n          if (canScrollH) {\n            left = itemPos.left;\n          }\n          if (canScrollV) {\n            top = itemPos.top;\n          }\n        }\n      }\n    }\n    return {\n      left: left,\n      top: top\n    };\n  }\n  function scrollTo(opt) {\n    if (!mutableRef.current.deferScrollTo) {\n      var _getPositionForScroll = getPositionForScrollTo(opt),\n        left = _getPositionForScroll.left,\n        top = _getPositionForScroll.top;\n      var targetX = left !== null ? left : mutableRef.current.scrollLeft;\n      var targetY = top !== null ? top : mutableRef.current.scrollTop;\n      if (props.scrollTo) {\n        props.scrollTo(opt);\n      }\n      mutableRef.current.scrollToInfo = null;\n      if (scrollMode === 'native' && scrollContentHandle.current && scrollContentHandle.current.setScrollToPositionTarget) {\n        scrollContentHandle.current.setScrollToPositionTarget(targetX, targetY);\n      }\n      start({\n        targetX: targetX,\n        targetY: targetY,\n        animate: opt.animate\n      });\n    } else {\n      mutableRef.current.scrollToInfo = opt;\n    }\n  }\n  function canScrollHorizontally(bounds) {\n    return (direction === 'horizontal' || direction === 'both') && bounds.scrollWidth > bounds.clientWidth && !isNaN(bounds.scrollWidth);\n  }\n  function canScrollVertically(bounds) {\n    return (direction === 'vertical' || direction === 'both') && bounds.scrollHeight > bounds.clientHeight && !isNaN(bounds.scrollHeight);\n  }\n\n  // scroll bar\n\n  function showScrollbarTrack(bounds) {\n    if (isHorizontalScrollbarVisible && canScrollHorizontally(bounds) && horizontalScrollbarHandle.current) {\n      horizontalScrollbarHandle.current.showScrollbarTrack();\n    }\n    if (isVerticalScrollbarVisible && canScrollVertically(bounds) && verticalScrollbarHandle.current) {\n      verticalScrollbarHandle.current.showScrollbarTrack();\n    }\n  }\n  function updateScrollbarTrack(scrollbarRef, bounds) {\n    scrollbarRef.current.update(_objectSpread(_objectSpread({}, bounds), {}, {\n      scrollLeft: mutableRef.current.scrollLeft,\n      scrollTop: mutableRef.current.scrollTop\n    }));\n  }\n  function startHidingScrollbarTrack() {\n    if (isHorizontalScrollbarVisible && horizontalScrollbarHandle.current) {\n      horizontalScrollbarHandle.current.startHidingScrollbarTrack();\n    }\n    if (isVerticalScrollbarVisible && verticalScrollbarHandle.current) {\n      verticalScrollbarHandle.current.startHidingScrollbarTrack();\n    }\n  }\n  function updateScrollbars() {\n    var bounds = getScrollBounds(),\n      canScrollH = canScrollHorizontally(bounds),\n      canScrollV = canScrollVertically(bounds),\n      curHorizontalScrollbarVisible = horizontalScrollbar === 'auto' ? canScrollH : horizontalScrollbar === 'visible',\n      curVerticalScrollbarVisible = verticalScrollbar === 'auto' ? canScrollV : verticalScrollbar === 'visible';\n\n    // determine if we should hide or show any scrollbars\n    var isVisibilityChanged = isHorizontalScrollbarVisible !== curHorizontalScrollbarVisible || isVerticalScrollbarVisible !== curVerticalScrollbarVisible;\n    if (isVisibilityChanged) {\n      // one or both scrollbars have changed visibility\n      setIsHorizontalScrollbarVisible(curHorizontalScrollbarVisible);\n      setIsVerticalScrollbarVisible(curVerticalScrollbarVisible);\n    } else {\n      mutableRef.current.deferScrollTo = false;\n      updateScrollbarTrackSize();\n    }\n  }\n  function updateScrollbarTrackSize() {\n    var bounds = getScrollBounds(),\n      canScrollH = canScrollHorizontally(bounds),\n      canScrollV = canScrollVertically(bounds),\n      curHorizontalScrollbarVisible = horizontalScrollbar === 'auto' ? canScrollH : horizontalScrollbar === 'visible',\n      curVerticalScrollbarVisible = verticalScrollbar === 'auto' ? canScrollV : verticalScrollbar === 'visible';\n    if (curHorizontalScrollbarVisible || curVerticalScrollbarVisible) {\n      // no visibility change but need to notify whichever scrollbars are visible of the\n      // updated bounds and scroll position\n      var updatedBounds = _objectSpread(_objectSpread({}, bounds), {}, {\n        scrollLeft: mutableRef.current.scrollLeft,\n        scrollTop: mutableRef.current.scrollTop\n      });\n      if (curHorizontalScrollbarVisible && horizontalScrollbarHandle.current) {\n        horizontalScrollbarHandle.current.update(updatedBounds);\n      }\n      if (curVerticalScrollbarVisible && verticalScrollbarHandle.current) {\n        verticalScrollbarHandle.current.update(updatedBounds);\n      }\n      return true;\n    }\n    return false;\n  }\n\n  // ref\n\n  function getScrollBounds() {\n    if (scrollContentHandle.current && typeof scrollContentHandle.current.getScrollBounds === 'function') {\n      return scrollContentHandle.current.getScrollBounds();\n    }\n  }\n  function getMoreInfo() {\n    if (scrollContentHandle.current && typeof scrollContentHandle.current.getMoreInfo === 'function') {\n      return scrollContentHandle.current.getMoreInfo();\n    }\n  }\n\n  // FIXME setting event handlers directly to work on the V8 snapshot.\n  function addEventListeners() {\n    (0, _utilEvent[\"default\"])('wheel').addEventListener(scrollContainerRef, onWheel);\n    (0, _utilEvent[\"default\"])('keydown').addEventListener(scrollContainerRef, onKeyDown);\n    (0, _utilEvent[\"default\"])('mousedown').addEventListener(scrollContainerRef, onMouseDown);\n\n    // scrollMode 'native' [[\n    if (scrollMode === 'native' && scrollContentRef.current) {\n      (0, _utilEvent[\"default\"])('scroll').addEventListener(scrollContentRef, onScroll, {\n        passive: true\n      });\n    }\n    // scrollMode 'native' ]]\n\n    if (props.addEventListeners) {\n      props.addEventListeners(scrollContentRef);\n    }\n    if (window) {\n      (0, _utilEvent[\"default\"])('resize').addEventListener(window, handleResizeWindow);\n    }\n  }\n\n  // FIXME setting event handlers directly to work on the V8 snapshot.\n  function removeEventListeners() {\n    (0, _utilEvent[\"default\"])('wheel').removeEventListener(scrollContainerRef, onWheel);\n    (0, _utilEvent[\"default\"])('keydown').removeEventListener(scrollContainerRef, onKeyDown);\n    (0, _utilEvent[\"default\"])('mousedown').removeEventListener(scrollContainerRef, onMouseDown);\n\n    // scrollMode 'native' [[\n    (0, _utilEvent[\"default\"])('scroll').removeEventListener(scrollContentRef, onScroll, {\n      passive: true\n    });\n    // scrollMode 'native' ]]\n\n    if (props.removeEventListeners) {\n      props.removeEventListeners(scrollContentRef);\n    }\n    (0, _utilEvent[\"default\"])('resize').removeEventListener(window, handleResizeWindow);\n  }\n\n  // render\n\n  // scrollMode 'translate' [[\n  function handleScroll() {\n    // Prevent scroll by focus.\n    // VirtualList and VirtualGridList DO NOT receive `onscroll` event.\n    // Only Scroller could get `onscroll` event.\n    if (!mutableRef.current.animator.isAnimating() && scrollContentHandle.current && scrollContentRef.current && scrollContentHandle.current.getRtlPositionX && !mutableRef.current.isDragging) {\n      // For Scroller\n      scrollContentRef.current.scrollTop = mutableRef.current.scrollTop;\n      scrollContentRef.current.scrollLeft = scrollContentHandle.current.getRtlPositionX(mutableRef.current.scrollLeft);\n    }\n  }\n  // scrollMode 'translate' ]]\n\n  function scrollContainerContainsDangerously(target) {\n    return _utilDOM[\"default\"].containsDangerously(scrollContainerRef, target);\n  }\n  assignProperties('scrollContainerProps', _objectSpread(_objectSpread({}, rest), {}, {\n    className: [scrollClasses]\n  }));\n  assignProperties('scrollInnerContainerProps', {\n    className: [_useScrollModule[\"default\"].scrollInnerContainer]\n  });\n  assignProperties('scrollContentWrapperProps', _objectSpread({\n    className: [_useScrollModule[\"default\"].scrollContentWrapper]\n  }, !noScrollByDrag && {\n    flickConfig: flickConfig,\n    onDrag: onDrag,\n    onDragEnd: onDragEnd,\n    onDragStart: onDragStart,\n    onFlick: onFlick,\n    onTouchStart: scrollMode === 'native' ? onTouchStart : null // scrollMode 'native'\n  }));\n  var scrollContentProps = props.itemRenderer ?\n  // If the child component is a VirtualList\n  {\n    childProps: childProps,\n    clientSize: clientSize,\n    dataSize: dataSize,\n    itemRenderer: itemRenderer,\n    itemSize: itemSize,\n    itemSizes: itemSizes,\n    overhang: overhang,\n    pageScroll: pageScroll,\n    spacing: spacing,\n    wrap: wrap\n  } : {\n    children: children\n  };\n  assignProperties('scrollContentProps', _objectSpread(_objectSpread({}, scrollContentProps), {}, {\n    cbScrollTo: scrollTo,\n    className: [_useScrollModule[\"default\"].scrollFill],\n    direction: direction,\n    get isHorizontalScrollbarVisible() {\n      return isHorizontalScrollbarVisible;\n    },\n    get isVerticalScrollbarVisible() {\n      return isVerticalScrollbarVisible;\n    },\n    onScroll: scrollMode === 'translate' ? handleScroll : null,\n    role: role,\n    rtl: rtl,\n    scrollContainerContainsDangerously: scrollContainerContainsDangerously,\n    scrollMode: scrollMode\n  }));\n  assignProperties('verticalScrollbarProps', {\n    clientSize: clientSize,\n    disabled: !isVerticalScrollbarVisible,\n    rtl: rtl,\n    vertical: true\n  });\n  assignProperties('horizontalScrollbarProps', {\n    clientSize: clientSize,\n    corner: isVerticalScrollbarVisible,\n    disabled: !isHorizontalScrollbarVisible,\n    rtl: rtl,\n    vertical: false\n  });\n  assignProperties('resizeContextProps', {\n    value: mutableRef.current.resizeRegistry.register\n  });\n  mutableRef.current.deferScrollTo = true;\n  mutableRef.current.prevState = {\n    isHorizontalScrollbarVisible: isHorizontalScrollbarVisible,\n    isVerticalScrollbarVisible: isVerticalScrollbarVisible\n  };\n  return {\n    isHorizontalScrollbarVisible: isHorizontalScrollbarVisible,\n    isVerticalScrollbarVisible: isVerticalScrollbarVisible,\n    scrollContentWrapper: noScrollByDrag ? 'div' : TouchableDiv,\n    scrollObserver: {\n      addObserverOnScroll: addObserverOnScroll,\n      removeObserverOnScroll: removeObserverOnScroll\n    }\n  };\n};\nvar assignPropertiesOf = exports.assignPropertiesOf = function assignPropertiesOf(instance) {\n  return function (name, properties) {\n    if (!instance[name]) {\n      instance[name] = {};\n    }\n    if (typeof properties === 'object') {\n      for (var property in properties) {\n        if (property === 'className') {\n          process.env.NODE_ENV !== \"production\" ? (0, _warning[\"default\"])(Array.isArray(properties.className), 'Unsupported other types for `className` prop except Array') : void 0;\n          instance[name].className = (0, _classnames[\"default\"])(instance[name].className, properties.className);\n        } else {\n          process.env.NODE_ENV !== \"production\" ? (0, _warning[\"default\"])(!instance[name][property], 'Unsupported to push value in the same ' + property + ' prop.') : void 0;\n\n          // Override the previous value.\n          instance[name][property] = properties[property];\n        }\n      }\n    }\n  };\n};\nvar useScroll = exports.useScroll = function useScroll(props) {\n  // Mutable value\n\n  var scrollContainerRef = (0, _react.useRef)({});\n  var scrollContentHandle = (0, _react.useRef)({});\n  var scrollContentRef = (0, _react.useRef)({});\n  var itemRefs = (0, _react.useRef)([]);\n  var horizontalScrollbarHandle = (0, _react.useRef)({});\n  var verticalScrollbarHandle = (0, _react.useRef)({});\n\n  // Hooks\n\n  var collectionOfProperties = {},\n    assignProperties = assignPropertiesOf(collectionOfProperties);\n  var _useScrollBase = useScrollBase(_objectSpread(_objectSpread({}, props), {}, {\n      assignProperties: assignProperties,\n      horizontalScrollbarHandle: horizontalScrollbarHandle,\n      scrollContainerRef: scrollContainerRef,\n      scrollContentHandle: scrollContentHandle,\n      scrollContentRef: scrollContentRef,\n      verticalScrollbarHandle: verticalScrollbarHandle\n    })),\n    scrollContentWrapper = _useScrollBase.scrollContentWrapper,\n    isHorizontalScrollbarVisible = _useScrollBase.isHorizontalScrollbarVisible,\n    isVerticalScrollbarVisible = _useScrollBase.isVerticalScrollbarVisible;\n  assignProperties('scrollContainerProps', {\n    ref: scrollContainerRef\n  });\n  assignProperties('scrollContentProps', _objectSpread(_objectSpread({}, props.itemRenderer ? {\n    itemRefs: itemRefs\n  } : {}), {}, {\n    scrollContentRef: scrollContentRef\n  }));\n  assignProperties('verticalScrollbarProps', {\n    scrollbarHandle: verticalScrollbarHandle\n  });\n  assignProperties('horizontalScrollbarProps', {\n    scrollbarHandle: horizontalScrollbarHandle\n  });\n\n  // Return\n\n  return _objectSpread(_objectSpread({}, collectionOfProperties), {}, {\n    scrollContentWrapper: scrollContentWrapper,\n    scrollContentHandle: scrollContentHandle,\n    isHorizontalScrollbarVisible: isHorizontalScrollbarVisible,\n    isVerticalScrollbarVisible: isVerticalScrollbarVisible\n  });\n};\nvar _default = exports[\"default\"] = useScroll;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}