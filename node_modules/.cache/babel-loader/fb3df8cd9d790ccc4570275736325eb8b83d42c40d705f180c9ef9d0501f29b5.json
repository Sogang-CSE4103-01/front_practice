{"ast":null,"code":"// src/views/LoginState.js\nimport { useState, useCallback } from 'react';\nimport debugLog from '../libs/log';\nexport const useLogin = () => {\n  const [isLoginOpen, setLoginOpen] = useState(true); // 초기값을 true로 설정\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isSignupOpen, setSignupOpen] = useState(true);\n  const handleLoginOpen = useCallback(() => {\n    setLoginOpen(true);\n  }, []);\n  const handleLoginClose = useCallback(() => {\n    setLoginOpen(false);\n    setUsername('');\n    setPassword('');\n  }, []);\n  const handleUsernameChange = useCallback(e => {\n    if (e && e.value !== undefined) {\n      setUsername(e.value);\n    } else {\n      console.warn('handleUsernameChange: Invalid event object', e);\n    }\n  }, []);\n  const handlePasswordChange = useCallback(e => {\n    if (e && e.value !== undefined) {\n      setPassword(e.value);\n    } else {\n      console.warn('handlePasswordChange: Invalid event object', e);\n    }\n  }, []);\n  const handleLogin = useCallback(async () => {\n    debugLog('Attempting login', {\n      username,\n      password\n    });\n    try {\n      const response = await fetch(`http://localhost:8080/api/login?username=${username}&password=${password}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        throw new Error('Login failed');\n      }\n      const data = await response.json();\n      debugLog('Login successful', data);\n      handleLoginClose();\n    } catch (error) {\n      debugLog('Login failed', error.message);\n    }\n  }, [username, password, handleLoginClose]);\n\n  /*\n  const handleSignup = useCallback(() => {\n  \tsetLoginOpen(false);\n  \tsetSignupOpen(true);\n  }) */\n\n  return {\n    isLoginOpen,\n    isSignupOpen,\n    handleLoginOpen,\n    handleLoginClose,\n    handleLogin,\n    handleUsernameChange,\n    handlePasswordChange,\n    //handleSignup,\n    username,\n    password\n  };\n};","map":{"version":3,"names":["useState","useCallback","debugLog","useLogin","isLoginOpen","setLoginOpen","username","setUsername","password","setPassword","isSignupOpen","setSignupOpen","handleLoginOpen","handleLoginClose","handleUsernameChange","e","value","undefined","console","warn","handlePasswordChange","handleLogin","response","fetch","method","headers","credentials","ok","Error","data","json","error","message"],"sources":["/home/connected/enact-template/src/views/LoginState.js"],"sourcesContent":["// src/views/LoginState.js\nimport { useState, useCallback } from 'react';\nimport debugLog from '../libs/log';\n\nexport const useLogin = () => {\n\tconst [isLoginOpen, setLoginOpen] = useState(true); // 초기값을 true로 설정\n\tconst [username, setUsername] = useState('');\n\tconst [password, setPassword] = useState('');\n\tconst [isSignupOpen, setSignupOpen] = useState(true);\n\n\tconst handleLoginOpen = useCallback(() => {\n\t\tsetLoginOpen(true);\n\t}, []);\n\n\tconst handleLoginClose = useCallback(() => {\n\t\tsetLoginOpen(false);\n\t\tsetUsername('');\n\t\tsetPassword('');\n\t}, []);\n\n\tconst handleUsernameChange = useCallback((e) => {\n\t\tif (e && e.value !== undefined) {\n\t\t\tsetUsername(e.value);\n\t\t} else {\n\t\t\tconsole.warn('handleUsernameChange: Invalid event object', e);\n\t\t}\n\t}, []);\n\n\tconst handlePasswordChange = useCallback((e) => {\n\t\tif (e && e.value !== undefined) {\n\t\t\tsetPassword(e.value);\n\t\t} else {\n\t\t\tconsole.warn('handlePasswordChange: Invalid event object', e);\n\t\t}\n\t}, []);\n\n\tconst handleLogin = useCallback(async () => {\n\t\tdebugLog('Attempting login', { username, password });\n\t\ttry {\n\t\t\tconst response = await fetch(`http://localhost:8080/api/login?username=${username}&password=${password}`, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t\tcredentials: 'include',\n\t\t\t});\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error('Login failed');\n\t\t\t}\n\t\t\tconst data = await response.json();\n\t\t\tdebugLog('Login successful', data);\n\t\t\thandleLoginClose();\n\t\t} catch (error) {\n\t\t\tdebugLog('Login failed', error.message);\n\t\t}\n\t}, [username, password, handleLoginClose]);\n\n\t/*\n\tconst handleSignup = useCallback(() => {\n\t\tsetLoginOpen(false);\n\t\tsetSignupOpen(true);\n\t}) */\n\n\treturn {\n\t\tisLoginOpen,\n\t\tisSignupOpen,\n\t\thandleLoginOpen,\n\t\thandleLoginClose,\n\t\thandleLogin,\n\t\thandleUsernameChange,\n\t\thandlePasswordChange,\n\t\t//handleSignup,\n\t\tusername,\n\t\tpassword\n\t};\n};\n"],"mappings":"AAAA;AACA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7C,OAAOC,QAAQ,MAAM,aAAa;AAElC,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAC7B,MAAM,CAACC,WAAW,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACpD,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,YAAY,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAMY,eAAe,GAAGX,WAAW,CAAC,MAAM;IACzCI,YAAY,CAAC,IAAI,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,gBAAgB,GAAGZ,WAAW,CAAC,MAAM;IAC1CI,YAAY,CAAC,KAAK,CAAC;IACnBE,WAAW,CAAC,EAAE,CAAC;IACfE,WAAW,CAAC,EAAE,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,oBAAoB,GAAGb,WAAW,CAAEc,CAAC,IAAK;IAC/C,IAAIA,CAAC,IAAIA,CAAC,CAACC,KAAK,KAAKC,SAAS,EAAE;MAC/BV,WAAW,CAACQ,CAAC,CAACC,KAAK,CAAC;IACrB,CAAC,MAAM;MACNE,OAAO,CAACC,IAAI,CAAC,4CAA4C,EAAEJ,CAAC,CAAC;IAC9D;EACD,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,oBAAoB,GAAGnB,WAAW,CAAEc,CAAC,IAAK;IAC/C,IAAIA,CAAC,IAAIA,CAAC,CAACC,KAAK,KAAKC,SAAS,EAAE;MAC/BR,WAAW,CAACM,CAAC,CAACC,KAAK,CAAC;IACrB,CAAC,MAAM;MACNE,OAAO,CAACC,IAAI,CAAC,4CAA4C,EAAEJ,CAAC,CAAC;IAC9D;EACD,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,WAAW,GAAGpB,WAAW,CAAC,YAAY;IAC3CC,QAAQ,CAAC,kBAAkB,EAAE;MAAEI,QAAQ;MAAEE;IAAS,CAAC,CAAC;IACpD,IAAI;MACH,MAAMc,QAAQ,GAAG,MAAMC,KAAK,CAAE,4CAA2CjB,QAAS,aAAYE,QAAS,EAAC,EAAE;QACzGgB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACR,cAAc,EAAE;QACjB,CAAC;QACDC,WAAW,EAAE;MACd,CAAC,CAAC;MACF,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;QACjB,MAAM,IAAIC,KAAK,CAAC,cAAc,CAAC;MAChC;MACA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClC5B,QAAQ,CAAC,kBAAkB,EAAE2B,IAAI,CAAC;MAClChB,gBAAgB,CAAC,CAAC;IACnB,CAAC,CAAC,OAAOkB,KAAK,EAAE;MACf7B,QAAQ,CAAC,cAAc,EAAE6B,KAAK,CAACC,OAAO,CAAC;IACxC;EACD,CAAC,EAAE,CAAC1B,QAAQ,EAAEE,QAAQ,EAAEK,gBAAgB,CAAC,CAAC;;EAE1C;AACD;AACA;AACA;AACA;;EAEC,OAAO;IACNT,WAAW;IACXM,YAAY;IACZE,eAAe;IACfC,gBAAgB;IAChBQ,WAAW;IACXP,oBAAoB;IACpBM,oBAAoB;IACpB;IACAd,QAAQ;IACRE;EACD,CAAC;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}