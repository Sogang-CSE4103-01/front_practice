{"ast":null,"code":"// src/views/LoginState.js\nimport { useState, useCallback } from 'react';\nimport debugLog from '../libs/log';\nexport const useLogin = () => {\n  const [isLoginOpen, setLoginOpen] = useState(true); // 초기값을 true로 설정\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLoginSuccess, setLoginSuccess] = useState(false);\n  const handleLoginOpen = useCallback(() => {\n    setLoginOpen(true);\n  }, []);\n  const handleLoginClose = useCallback(() => {\n    setLoginOpen(false);\n    //setUsername('');\n    //setPassword('');\n  }, [isLoginSuccess]);\n  const handleUsernameChange = useCallback(e => {\n    if (e && e.value !== undefined) {\n      setUsername(e.value);\n      console.log('log in : name submitted');\n    } else {\n      console.warn('handleUsernameChange: Invalid event object', e);\n    }\n  }, []);\n  const handlePasswordChange = useCallback(e => {\n    if (e && e.value !== undefined) {\n      setPassword(e.value);\n      console.log('log in : PW submitted');\n    } else {\n      console.warn('handlePasswordChange: Invalid event object', e);\n    }\n  }, []);\n  const handleCancel = useCallback(() => {\n    //setLoginOpen(false);\n    setUsername('');\n    setPassword('');\n  });\n  const handleLogin = useCallback(async () => {\n    debugLog('Attempting login', {\n      username,\n      password\n    });\n    try {\n      //const response = await fetch(`https://cors-anywhere-herokuapp.com/https://connected-backend-yir6.onrender.com/api/login`, {\n      const response = await fetch('https://connected-backend-yir6.onrender.com/api/login?username=${username}&password=${password}', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n        //credentials: 'include',\n      });\n\n      if (!response.ok) {\n        //throw new Error('Login failed');\n        const data = await response.json();\n        debugLog('Login 111', data);\n        setLoginSuccess(true);\n        handleLoginClose();\n      }\n      const data = await response.json();\n      debugLog('Login successful', data);\n      setLoginSuccess(true);\n      handleLoginClose();\n    } catch (error) {\n      //const data = await response.json();\n      debugLog('Login failed 222', error.message);\n      //debugLog('Login 111', data);\n      setLoginSuccess(true);\n      handleLoginClose();\n    }\n  }, [username, password, handleLoginClose]);\n  return {\n    isLoginOpen,\n    isLoginSuccess,\n    handleLoginOpen,\n    handleLoginClose,\n    handleLogin,\n    handleUsernameChange,\n    handlePasswordChange,\n    handleCancel,\n    username,\n    password\n  };\n};","map":{"version":3,"names":["useState","useCallback","debugLog","useLogin","isLoginOpen","setLoginOpen","username","setUsername","password","setPassword","isLoginSuccess","setLoginSuccess","handleLoginOpen","handleLoginClose","handleUsernameChange","e","value","undefined","console","log","warn","handlePasswordChange","handleCancel","handleLogin","response","fetch","method","headers","body","JSON","stringify","ok","data","json","error","message"],"sources":["/home/connected/enact-template/src/views/LoginState.js"],"sourcesContent":["// src/views/LoginState.js\nimport { useState, useCallback } from 'react';\nimport debugLog from '../libs/log';\n\nexport const useLogin = () => {\n\tconst [isLoginOpen, setLoginOpen] = useState(true); // 초기값을 true로 설정\n\tconst [username, setUsername] = useState('');\n\tconst [password, setPassword] = useState('');\n\tconst [isLoginSuccess, setLoginSuccess] = useState(false);\n\n\tconst handleLoginOpen = useCallback(() => {\n\t\tsetLoginOpen(true);\n\t}, []);\n\n\tconst handleLoginClose = useCallback(() => {\n\t\tsetLoginOpen(false);\n\t\t//setUsername('');\n\t\t//setPassword('');\n\t}, [isLoginSuccess]);\n\n\tconst handleUsernameChange = useCallback((e) => {\n\t\tif (e && e.value !== undefined) {\n\t\t\tsetUsername(e.value);\n\t\t\tconsole.log('log in : name submitted');\n\t\t} else {\n\t\t\tconsole.warn('handleUsernameChange: Invalid event object', e);\n\t\t}\n\t}, []);\n\n\tconst handlePasswordChange = useCallback((e) => {\n\t\tif (e && e.value !== undefined) {\n\t\t\tsetPassword(e.value);\n\t\t\tconsole.log('log in : PW submitted');\n\t\t} else {\n\t\t\tconsole.warn('handlePasswordChange: Invalid event object', e);\n\t\t}\n\t}, []);\n\n\tconst handleCancel = useCallback(() => {\n\t\t//setLoginOpen(false);\n\t\tsetUsername('');\n\t\tsetPassword('');\n\t},);\n\n\tconst handleLogin = useCallback(async () => {\n\t\tdebugLog('Attempting login', { username, password });\n\t\ttry {\n\t\t\t//const response = await fetch(`https://cors-anywhere-herokuapp.com/https://connected-backend-yir6.onrender.com/api/login`, {\n\t\t\tconst response = await fetch('https://connected-backend-yir6.onrender.com/api/login?username=${username}&password=${password}', {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t\tbody : JSON.stringify({username, password}),\n\t\t\t\t//credentials: 'include',\n\t\t\t});\n\t\t\tif (!response.ok) {\n\t\t\t\t//throw new Error('Login failed');\n\t\t\t\tconst data = await response.json();\n\t\t\t\tdebugLog('Login 111', data);\n\t\t\t\tsetLoginSuccess(true);\n\t\t\t\thandleLoginClose();\n\t\t\t}\n\t\t\tconst data = await response.json();\n\t\t\tdebugLog('Login successful', data);\n\t\t\tsetLoginSuccess(true);\n\t\t\thandleLoginClose();\n\t\t} catch (error) {\n\t\t\t//const data = await response.json();\n\t\t\tdebugLog('Login failed 222', error.message);\n\t\t\t//debugLog('Login 111', data);\n\t\t\tsetLoginSuccess(true);\n\t\t\thandleLoginClose();\n\t\t}\n\t}, [username, password, handleLoginClose]);\n\n\treturn {\n\t\tisLoginOpen,\n\t\tisLoginSuccess,\n\t\thandleLoginOpen,\n\t\thandleLoginClose,\n\t\thandleLogin,\n\t\thandleUsernameChange,\n\t\thandlePasswordChange,\n\t\thandleCancel,\n\t\tusername,\n\t\tpassword\n\t};\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}