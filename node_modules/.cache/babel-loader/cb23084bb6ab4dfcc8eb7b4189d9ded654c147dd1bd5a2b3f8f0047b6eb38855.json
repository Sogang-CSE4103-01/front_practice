{"ast":null,"code":"// src/views/LoginState.js\nimport { useState, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom'; // useNavigate import\nimport debugLog from '../libs/log';\nexport const useLoginState = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate(); // 페이지 이동을 위한 navigate 객체\n\n  const handleInputChange = useCallback(event => {\n    event.stopPropagation(); // 이벤트 전파 방지\n    const {\n      name,\n      value\n    } = event.target;\n    if (name === 'username') {\n      setUsername(value);\n    } else if (name === 'password') {\n      setPassword(value);\n    }\n  }, []);\n\n  // 로그인 처리 함수\n  const handleLogin = useCallback(() => {\n    debugLog('로그인 시도:', username, password); // 로그인 시도 로그\n    // 로그인 성공 후 메인 페이지로 이동\n    navigate('/main');\n  }, [navigate, username, password]);\n\n  // 회원가입 페이지로 이동하는 함수\n  const handleNavigateToSignup = useCallback(() => {\n    navigate('/signup');\n  }, [navigate]);\n  return {\n    username,\n    password,\n    handleInputChange,\n    handleLogin,\n    handleNavigateToSignup\n  };\n};","map":{"version":3,"names":["useState","useCallback","useNavigate","debugLog","useLoginState","username","setUsername","password","setPassword","navigate","handleInputChange","event","stopPropagation","name","value","target","handleLogin","handleNavigateToSignup"],"sources":["/Users/meogyu/connected_front/src/views/LoginState.js"],"sourcesContent":["// src/views/LoginState.js\nimport { useState, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom'; // useNavigate import\nimport debugLog from '../libs/log';\n\nexport const useLoginState = () => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const navigate = useNavigate(); // 페이지 이동을 위한 navigate 객체\n\n    const handleInputChange = useCallback((event) => {\n\t\tevent.stopPropagation(); // 이벤트 전파 방지\n\t\tconst { name, value } = event.target;\n\t\tif (name === 'username') {\n\t\t\tsetUsername(value);\n\t\t} else if (name === 'password') {\n\t\t\tsetPassword(value);\n\t\t}\n\t}, []);\n\t\n\n    // 로그인 처리 함수\n    const handleLogin = useCallback(() => {\n        debugLog('로그인 시도:', username, password); // 로그인 시도 로그\n        // 로그인 성공 후 메인 페이지로 이동\n        navigate('/main');\n    }, [navigate, username, password]);\n\n    // 회원가입 페이지로 이동하는 함수\n    const handleNavigateToSignup = useCallback(() => {\n        navigate('/signup');\n    }, [navigate]);\n\n    return { username, password, handleInputChange, handleLogin, handleNavigateToSignup };\n};\n"],"mappings":"AAAA;AACA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7C,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAChD,OAAOC,QAAQ,MAAM,aAAa;AAElC,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC/B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMS,QAAQ,GAAGP,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC,MAAMQ,iBAAiB,GAAGT,WAAW,CAAEU,KAAK,IAAK;IACnDA,KAAK,CAACC,eAAe,CAAC,CAAC,CAAC,CAAC;IACzB,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGH,KAAK,CAACI,MAAM;IACpC,IAAIF,IAAI,KAAK,UAAU,EAAE;MACxBP,WAAW,CAACQ,KAAK,CAAC;IACnB,CAAC,MAAM,IAAID,IAAI,KAAK,UAAU,EAAE;MAC/BL,WAAW,CAACM,KAAK,CAAC;IACnB;EACD,CAAC,EAAE,EAAE,CAAC;;EAGH;EACA,MAAME,WAAW,GAAGf,WAAW,CAAC,MAAM;IAClCE,QAAQ,CAAC,SAAS,EAAEE,QAAQ,EAAEE,QAAQ,CAAC,CAAC,CAAC;IACzC;IACAE,QAAQ,CAAC,OAAO,CAAC;EACrB,CAAC,EAAE,CAACA,QAAQ,EAAEJ,QAAQ,EAAEE,QAAQ,CAAC,CAAC;;EAElC;EACA,MAAMU,sBAAsB,GAAGhB,WAAW,CAAC,MAAM;IAC7CQ,QAAQ,CAAC,SAAS,CAAC;EACvB,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,OAAO;IAAEJ,QAAQ;IAAEE,QAAQ;IAAEG,iBAAiB;IAAEM,WAAW;IAAEC;EAAuB,CAAC;AACzF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}