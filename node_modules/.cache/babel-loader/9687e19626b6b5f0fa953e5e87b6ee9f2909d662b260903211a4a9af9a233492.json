{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getContainerConfig = exports.getAllContainerIds = exports.containerAttribute = exports.configureDefaults = exports.configureContainer = exports.addContainer = void 0;\nexports.getContainerDefaultElement = getContainerDefaultElement;\nexports.getContainerFocusTarget = getContainerFocusTarget;\nexports.getContainerId = void 0;\nexports.getContainerLastFocusedElement = getContainerLastFocusedElement;\nexports.getContainerNavigableElements = getContainerNavigableElements;\nexports.getContainerNode = void 0;\nexports.getContainerPreviousTarget = getContainerPreviousTarget;\nexports.getContainersForNode = getContainersForNode;\nexports.getDeepSpottableDescendants = void 0;\nexports.getDefaultContainer = getDefaultContainer;\nexports.getLastContainer = getLastContainer;\nexports.getNavigableContainersForNode = getNavigableContainersForNode;\nexports.getPositionTargetOnFocus = getPositionTargetOnFocus;\nexports.isNavigable = exports.isContainer5WayHoldable = exports.isContainer = exports.getSpottableDescendants = void 0;\nexports.isWithinOverflowContainer = isWithinOverflowContainer;\nexports.mayActivateContainer = mayActivateContainer;\nexports.notifyEnterContainer = notifyEnterContainer;\nexports.notifyLeaveContainer = notifyLeaveContainer;\nexports.notifyLeaveContainerFail = notifyLeaveContainerFail;\nexports.rootContainerId = exports.removeContainer = exports.removeAllContainers = void 0;\nexports.setContainerLastFocusedElement = setContainerLastFocusedElement;\nexports.setContainerPreviousTarget = setContainerPreviousTarget;\nexports.setDefaultContainer = setDefaultContainer;\nexports.setLastContainer = setLastContainer;\nexports.setLastContainerFromTarget = setLastContainerFromTarget;\nexports.unmountContainer = unmountContainer;\nvar _and = _interopRequireDefault(require(\"ramda/src/and\"));\nvar _concat = _interopRequireDefault(require(\"ramda/src/concat\"));\nvar _snapshot = require(\"@enact/core/snapshot\");\nvar _util = require(\"@enact/core/util\");\nvar _intersection = _interopRequireDefault(require(\"ramda/src/intersection\"));\nvar _last = _interopRequireDefault(require(\"ramda/src/last\"));\nvar _utils = require(\"./utils\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : String(i);\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n} /**\n  * Exports methods and members for creating and maintaining spotlight containers.\n  *\n  * @module spotlight/container\n  * @private\n  */\nvar containerAttribute = exports.containerAttribute = 'data-spotlight-id';\nvar containerConfigs = new Map();\nvar containerKey = 'spotlightId';\nvar disabledKey = 'spotlightContainerDisabled';\nvar containerPrefix = 'container-';\nvar containerSelector = '[data-spotlight-container]';\nvar rootContainerId = exports.rootContainerId = 'spotlightRootDecorator';\nvar reverseDirections = {\n  'left': 'right',\n  'up': 'down',\n  'right': 'left',\n  'down': 'up'\n};\n\n// Incrementer for container IDs\nvar _ids = 0;\nvar _defaultContainerId = '';\nvar _lastContainerId = '';\n\n// Note: an <extSelector> can be one of following types:\n// - a valid selector string for \"querySelectorAll\"\n// - a NodeList or an array containing DOM elements\n// - a single DOM element\n// - a string \"@<containerId>\" to indicate the specified container\n// - a string \"@\" to indicate the default container\nvar GlobalConfig = {\n  // set to false for unmounted containers to omit them from searches\n  active: true,\n  continue5WayHold: false,\n  defaultElement: '',\n  // <extSelector> except \"@\" syntax.\n  enterTo: null,\n  // null, 'last-focused', 'default-element'\n  isStandardFocusableMode: false,\n  // @private - set to true to focus standard focusable element\n  lastFocusedElement: null,\n  lastFocusedKey: null,\n  lastFocusedPersist: function lastFocusedPersist(node, all) {\n    var container = typeof node === 'string';\n    return {\n      container: container,\n      element: !container,\n      key: container ? node : all.indexOf(node)\n    };\n  },\n  lastFocusedRestore: function lastFocusedRestore(_ref, all) {\n    var container = _ref.container,\n      key = _ref.key;\n    return container ? key : all[key];\n  },\n  leaveFor: null,\n  // {left: <extSelector>, right: <extSelector>, up: <extSelector>, down: <extSelector>}\n  navigableFilter: null,\n  obliqueMultiplier: 5,\n  onEnterContainer: null,\n  // @private - notify the container when entering via 5-way\n  onLeaveContainer: null,\n  // @private - notify the container when leaving via 5-way\n  onLeaveContainerFail: null,\n  // @private - notify the container when failing to leave via 5-way\n  overflow: false,\n  partition: false,\n  // use the container bounds for partitioning when leaving\n  positionTargetOnFocus: false,\n  // @private - use the container for the position target when its descendants is focused\n  rememberSource: false,\n  restrict: 'self-first',\n  // 'self-first', 'self-only', 'none'\n  selector: '',\n  // can be a valid <extSelector> except \"@\" syntax.\n  selectorDisabled: false,\n  straightMultiplier: 1,\n  straightOnly: false,\n  straightOverlapThreshold: 0.5,\n  tabIndexIgnoreList: 'a, input, select, textarea, button, iframe, [contentEditable=true]'\n};\n\n/**\n * Calculates nodes within `node` that match `includeSelector` and do not match `excludeSelector`\n *\n * @param   {Node}    node             DOM Node to query\n * @param   {String}  includeSelector  CSS selector of nodes to include\n * @param   {String}  excludeSelector  CSS selector for nodes to exclude\n *\n * @returns {Node[]}                   Array of nodes\n * @memberof spotlight/container\n * @private\n */\nvar querySelector = function querySelector(node, includeSelector, excludeSelector) {\n  var focusables = GlobalConfig.isStandardFocusableMode ? Array.prototype.filter.call(node.getElementsByTagName('*'), _utils.isStandardFocusable) : [];\n  var include = new Set([].concat(_toConsumableArray(node.querySelectorAll(includeSelector)), _toConsumableArray(focusables)));\n  var exclude = node.querySelectorAll(excludeSelector);\n  for (var i = 0; i < exclude.length; i++) {\n    include[\"delete\"](exclude[i]);\n  }\n  return Array.from(include);\n};\n\n/**\n * Determines if `node` is a spotlight container\n *\n * @param   {Node}     node   Node to check\n *\n * @returns {Boolean}        `true` if `node` is a spotlight container\n * @memberof spotlight/container\n * @private\n */\nvar isContainerNode = function isContainerNode(node) {\n  return node && node.dataset && 'spotlightContainer' in node.dataset;\n};\n\n/**\n * Walks up the node hierarchy calling `fn` on each node that is a container\n *\n * @param   {Node}     node  Node from which to start the search\n * @param   {Function} fn    Called once for each container with the container node as the first\n *                           argument. The return value is accumulated in the array returned by\n *                           `mapContainers`\n *\n * @returns {Array}          Array of values returned by `fn` in order of outermost container to\n *                           innermost container\n * @memberof spotlight/container\n * @private\n */\nvar mapContainers = function mapContainers(node, fn) {\n  var result = [];\n  while (node && node !== document) {\n    if (isContainerNode(node)) {\n      result.unshift(fn(node));\n    }\n    node = node.parentNode;\n  }\n  return result;\n};\n\n/**\n * Returns the container config for `containerId`\n *\n * @param   {String}  id  Container ID\n *\n * @returns {Object}      Container config\n * @memberof spotlight/container\n * @private\n */\nvar getContainerConfig = exports.getContainerConfig = function getContainerConfig(id) {\n  return containerConfigs.get(id);\n};\n\n/**\n * Determines if node or a container id represents a spotlight container\n *\n * @param   {Node|String}  nodeOrId  Node or container ID\n *\n * @returns {Boolean}                `true` if `nodeOrId` represents a spotlight container\n * @memberof spotlight/container\n * @private\n */\nvar isContainer = exports.isContainer = function isContainer(nodeOrId) {\n  if (typeof nodeOrId === 'string') {\n    return containerConfigs.has(nodeOrId);\n  }\n  return isContainerNode(nodeOrId);\n};\n\n/**\n * Determines if any of the containers at or above `node` are disabled and, if so, returns `false`.\n *\n * @param   {Node}     node  Spottable node or spotlight container\n *\n * @returns {Boolean}        `true` if all container ancestors are enabled\n * @memberof spotlight/container\n * @private\n */\nvar isContainerEnabled = function isContainerEnabled(node) {\n  return mapContainers(node, function (container) {\n    return container.dataset[disabledKey] !== 'true';\n  }).reduce(_and[\"default\"], true);\n};\n\n/**\n * Returns the container ID for `node`\n *\n * @param   {Node}    node  Container Node\n *\n * @returns {String}        Container ID\n * @memberof spotlight/container\n * @private\n */\nvar getContainerId = exports.getContainerId = function getContainerId(node) {\n  return node.dataset[containerKey];\n};\n\n/**\n * Generates a CSS selector string for a current container if `node` is a container\n *\n * @param   {Node}    node  Container Node\n *\n * @returns {String}        CSS selector\n * @memberof spotlight/container\n * @private\n */\nvar getContainerSelector = function getContainerSelector(node) {\n  if (isContainerNode(node)) {\n    return \"[\".concat(containerAttribute, \"=\\\"\").concat(getContainerId(node), \"\\\"]\");\n  }\n  return '';\n};\n\n/**\n * Generates a CSS selector string for containers within `node` if it is a container\n *\n * @param   {Node}    node  Container Node\n *\n * @returns {String}        CSS selector\n * @memberof spotlight/container\n * @private\n */\nvar getSubContainerSelector = function getSubContainerSelector(node) {\n  if (isContainerNode(node)) {\n    return \"\".concat(getContainerSelector(node), \" \").concat(containerSelector);\n  }\n  return containerSelector;\n};\n\n/**\n * Returns the node for a container\n *\n * @param   {String}  containerId  ID of container\n *\n * @returns {Node}                 DOM node of the container\n * @memberof spotlight/container\n * @private\n */\nvar getContainerNode = exports.getContainerNode = function getContainerNode(containerId) {\n  if (!containerId) {\n    return null;\n  } else if (containerId === rootContainerId) {\n    return document;\n  }\n  return document.querySelector(\"[\".concat(containerAttribute, \"=\\\"\").concat(containerId, \"\\\"]\"));\n};\n\n/**\n * Calls the `navigableFilter` function for the container if defined.\n *\n * @param   {Node}    node         DOM node to check if it is navigable\n * @param   {String}  containerId  ID of container\n *\n * @returns {Boolean}              `true` if it passes the `navigableFilter` method or if that\n *                                  method is not defined for the container\n * @memberof spotlight/container\n * @private\n */\nvar navigableFilter = function navigableFilter(node, containerId) {\n  var nodeStyle = node && (0, _snapshot.isWindowReady)() && window.getComputedStyle(node);\n  var config = getContainerConfig(containerId);\n  if (!nodeStyle || nodeStyle.display === 'none' || nodeStyle.visibility === 'hidden') {\n    return false;\n  }\n  if (config && typeof config.navigableFilter === 'function') {\n    if (config.navigableFilter(node, containerId) === false) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Determines nodes that are owned by `node` based on `aria-owns`.\n *\n * @param   {Node}   node          Owner\n *\n * @returns {Node[]}               Array of owned nodes\n * @memberof spotlight/container\n * @private\n */\nvar getOwnedNodes = function getOwnedNodes(node, selector) {\n  // if node is document, it will not have getAttribute and therefore can't have aria-owns\n  var owns = node && node.getAttribute && node.getAttribute('aria-owns');\n  if (owns) {\n    var ids = owns.split(' ');\n    return ids.map(function (id) {\n      return id && document.getElementById(id);\n    }).filter(Boolean).filter(function (n) {\n      return isContainerNode(n) || (0, _utils.matchSelector)(selector, n);\n    });\n  }\n  return [];\n};\n\n/**\n * Determines all spottable elements and containers that are directly contained by the container\n * identified by `containerId` and no other subcontainers.\n *\n * @param   {String}  containerId  ID of container\n *\n * @returns {Node[]}               Array of spottable elements and containers.\n * @memberof spotlight/container\n * @public\n */\nvar getSpottableDescendants = exports.getSpottableDescendants = function getSpottableDescendants(containerId) {\n  var node = getContainerNode(containerId);\n\n  // if it's falsy or is a disabled container, return an empty set\n  if (!node || isContainerNode(node) && !isContainerEnabled(node)) {\n    return [];\n  }\n  var _ref2 = getContainerConfig(containerId) || {},\n    selector = _ref2.selector,\n    selectorDisabled = _ref2.selectorDisabled;\n  if (!selector || selectorDisabled) {\n    return [];\n  }\n  var spottableSelector = selector;\n  var subContainerSelector = getSubContainerSelector(node);\n  var candidates = querySelector(node, \"\".concat(spottableSelector, \", \").concat(getContainerSelector(node), \" \").concat(containerSelector, \":not([data-spotlight-container-disabled=\\\"true\\\"])\"), \"\".concat(subContainerSelector, \" \").concat(spottableSelector, \", \").concat(subContainerSelector, \" \").concat(containerSelector));\n  candidates.push.apply(candidates, _toConsumableArray(getOwnedNodes(node, selector)));\n  return candidates.filter(function (n) {\n    return navigableFilter(n, containerId);\n  });\n};\n\n/**\n * Recursively get spottable descendants by including elements within sub-containers that do not\n * have `enterTo` configured\n *\n * @param   {String}    containerId          ID of container\n * @param   {String[]}  [excludedContainers] IDs of containers to exclude from result set\n *\n * @returns {Node[]}                         Array of spottable elements and containers\n * @memberof spotlight/container\n * @private\n */\nvar getDeepSpottableDescendants = exports.getDeepSpottableDescendants = function getDeepSpottableDescendants(containerId, excludedContainers) {\n  return getSpottableDescendants(containerId).map(function (n) {\n    if (isContainer(n)) {\n      var id = getContainerId(n);\n      var config = getContainerConfig(id);\n      if (excludedContainers && excludedContainers.indexOf(id) >= 0) {\n        return [];\n      } else if (config && !config.enterTo) {\n        return getDeepSpottableDescendants(id, excludedContainers);\n      }\n    }\n    return [n];\n  }).reduce(_concat[\"default\"], []);\n};\n\n/**\n * Determines if a container allows 5-way key hold to be preserved or not.\n *\n * @param {String} containerId Container Id\n * @returns {Boolean} `true` if a container is 5 way holdable\n * @memberof spotlight/container\n * @private\n */\nvar isContainer5WayHoldable = exports.isContainer5WayHoldable = function isContainer5WayHoldable(containerId) {\n  var config = getContainerConfig(containerId);\n  return config && config.continue5WayHold || false;\n};\n\n/**\n * Returns an array of ids for containers that wrap the element, in order of outer-to-inner, with\n * the last array item being the immediate container id of the element.\n *\n * @param   {Node}      node  Node from which to start the search\n *\n * @returns {String[]}        Array on container IDs\n * @memberof spotlight/container\n * @private\n */\nfunction getContainersForNode(node) {\n  var containers = mapContainers(node, getContainerId);\n  containers.unshift(rootContainerId);\n  return containers;\n}\n\n/**\n * Returns an array of ids for containers that wrap the element, in order of outer-to-inner, with\n * the last array item being the immediate container id of the element. The container ids are\n * limited to only those between `node` and the first restrict=\"self-only\" container.\n *\n * @param   {Node}      node  Node from which to start the search\n *\n * @returns {String[]}        Array on container IDs\n * @memberof spotlight/container\n * @private\n */\nfunction getNavigableContainersForNode(node) {\n  var containerIds = getContainersForNode(node);\n\n  // find first self-only container id\n  var selfOnlyIndex = containerIds.map(getContainerConfig).filter(function (config) {\n    return config != null;\n  }).reduceRight(function (index, config, i) {\n    if (index === -1 && config.restrict === 'self-only') {\n      return i;\n    }\n    return index;\n  }, -1);\n\n  // if we found one (and it's not the root), slice those off and return\n  if (selfOnlyIndex > 0) {\n    return containerIds.slice(selfOnlyIndex);\n  }\n  return containerIds;\n}\n\n/**\n * Generates a new unique identifier for a container\n *\n * @returns {String} Container ID\n * @memberof spotlight/container\n * @private\n */\nfunction generateId() {\n  var id;\n  /* eslint no-constant-condition: [\"error\", { \"checkLoops\": false }] */\n  while (true) {\n    id = containerPrefix + String(++_ids);\n    if (!isContainer(id)) {\n      break;\n    }\n  }\n  return id;\n}\n\n/**\n * Merges two container configurations while only allowing keys from `updated` which are defined in\n * `GlobalConfig`\n *\n * @param   {Object}  current  Current container configuration\n * @param   {Object}  updated  Updated configuration which may only be a partial configuration\n *\n * @returns {Object}           Merged configuration\n * @memberof spotlight/container\n * @private\n */\nvar mergeConfig = function mergeConfig(current, updated) {\n  if (!updated) return current;\n  var cfg = null;\n  Object.keys(updated).forEach(function (key) {\n    if (key in GlobalConfig && current[key] !== updated[key]) {\n      if (cfg == null) {\n        cfg = Object.assign({}, current);\n      }\n      cfg[key] = updated[key];\n    }\n  });\n  return cfg || current;\n};\n\n/**\n * Adds or updates a container. When a container id is not specified, it will be generated.\n *\n * @param   {String|Object}  containerIdOrConfig  Either a string container id or a configuration\n *                                                object.\n * @param   {Object}         [config]             Container configuration when `containerIdOrConfig`\n *                                                is a string. When omitted, the container will have\n *                                                the default `GlobalConfig`.\n *\n * @returns {String}                              The container id\n * @memberof spotlight/container\n * @public\n */\nvar configureContainer = exports.configureContainer = function configureContainer() {\n  var containerId, config;\n  if (typeof (arguments.length <= 0 ? undefined : arguments[0]) === 'object') {\n    config = arguments.length <= 0 ? undefined : arguments[0];\n    containerId = config.id;\n  } else if (typeof (arguments.length <= 0 ? undefined : arguments[0]) === 'string') {\n    containerId = arguments.length <= 0 ? undefined : arguments[0];\n    if (typeof (arguments.length <= 1 ? undefined : arguments[1]) === 'object') {\n      config = arguments.length <= 1 ? undefined : arguments[1];\n    }\n  }\n  if (!containerId) {\n    containerId = generateId();\n  }\n  config = mergeConfig(containerConfigs.get(containerId) || _objectSpread({}, GlobalConfig), config);\n  containerConfigs.set(containerId, config);\n  return containerId;\n};\n\n/**\n * Adds a container and marks it active. When a container id is not specified, it will be generated.\n *\n * @param   {String|Object}  containerIdOrConfig  Either a string container id or a configuration\n *                                                object.\n * @param   {Object}         [config]             Container configuration when `containerIdOrConfig`\n *                                                is a string. When omitted, the container will have\n *                                                the default `GlobalConfig`.\n *\n * @returns {String}                              The container id\n * @memberof spotlight/container\n * @public\n */\nvar addContainer = exports.addContainer = function addContainer() {\n  var containerId = configureContainer.apply(void 0, arguments);\n  var config = getContainerConfig(containerId);\n  config.active = true;\n  return containerId;\n};\n\n/**\n * Removes a container\n *\n * @param   {String}     containerId  ID of the container to remove\n *\n * @returns {undefined}\n * @memberof spotlight/container\n * @public\n */\nvar removeContainer = exports.removeContainer = function removeContainer(containerId) {\n  containerConfigs[\"delete\"](containerId);\n};\n\n/**\n * Removes all containers\n *\n * @returns {undefined}\n * @memberof spotlight/container\n * @public\n */\nvar removeAllContainers = exports.removeAllContainers = function removeAllContainers() {\n  containerConfigs.clear();\n};\n\n/**\n * Configures the `GlobalConfig` for containers\n *\n * @param   {Object}  config  New global configuration. Cannot introduce new keys\n *\n * @returns {undefined}\n * @memberof spotlight/container\n * @public\n */\nvar configureDefaults = exports.configureDefaults = function configureDefaults(config) {\n  GlobalConfig = mergeConfig(GlobalConfig, config);\n};\n\n/**\n * Determines if `node` is a navigable element within the container identified by `containerId`.\n *\n * @param   {Node}     node         DOM node to check if it is navigable\n * @param   {String}   containerId  ID of the container containing `node`\n * @param   {Boolean}  verify       `true` to verify the node matches the container's `selector`\n *\n * @returns {Boolean}               `true` if `node` is navigable\n * @memberof spotlight/container\n * @public\n */\nvar isNavigable = exports.isNavigable = function isNavigable(node, containerId, verify) {\n  if (!node ||\n  // jsdom reports all nodes as having no size so we must skip this condition in our tests\n  process.env.NODE_ENV !== 'test' && node.offsetWidth <= 0 && node.offsetHeight <= 0) {\n    return false;\n  }\n  var containerNode = getContainerNode(containerId);\n  if (containerNode !== document && containerNode.dataset[disabledKey] === 'true') {\n    return false;\n  }\n  var config = getContainerConfig(containerId);\n  if (verify && config && config.selector && !isContainer(node) && !(0, _utils.matchSelector)(config.selector, node) && !(GlobalConfig.isStandardFocusableMode && (0, _utils.isStandardFocusable)(node))) {\n    return false;\n  }\n  return navigableFilter(node, containerId);\n};\n\n/**\n * Returns the IDs of all containers\n *\n * @returns {String[]}  Array of container IDs\n * @memberof spotlight/container\n * @private\n */\nvar getAllContainerIds = exports.getAllContainerIds = function getAllContainerIds() {\n  var ids = [];\n  var keys = containerConfigs.keys();\n\n  // PhantomJS-friendly iterator->array conversion\n  var id;\n  while ((id = keys.next()) && !id.done) {\n    if (isActiveContainer(id.value)) {\n      ids.push(id.value);\n    }\n  }\n  return ids;\n};\n\n/**\n * Returns the default focus element for a container\n *\n * @param   {String}                                       containerId        Container ID\n * @param   {('last-focused'|'default-element'|'topmost')} [preferredEnterTo] Prefer the given enterTo configuration\n *\n * @returns {Node|null}                 Default focus element\n * @memberof spotlight/container\n * @public\n */\nfunction getContainerDefaultElement(containerId, preferredEnterTo) {\n  var config = getContainerConfig(containerId);\n  var defaultElementSelector = config && config.defaultElement;\n  if (!defaultElementSelector) {\n    return null;\n  }\n  defaultElementSelector = (0, _util.coerceArray)(defaultElementSelector);\n\n  // If a preferred enterTo has been provided, we will favor it by making it first in search array\n  if (preferredEnterTo && typeof preferredEnterTo === 'string' && preferredEnterTo !== 'default-element') {\n    defaultElementSelector.unshift(preferredEnterTo);\n  }\n  var spottables = getDeepSpottableDescendants(containerId);\n  return defaultElementSelector.reduce(function (result, selector) {\n    if (result) {\n      return result;\n    }\n    if (typeof selector === 'string') {\n      return spottables.filter(function (elem) {\n        return (0, _utils.matchSelector)(selector, elem) && isNavigable(elem, containerId, true);\n      })[0];\n    }\n\n    // FIXME: There is some prior implicit support for `defaultElement` to be an element rather\n    // than a selector. This continues that support but should eventually be removed.\n    return selector;\n  }, null);\n}\n\n/**\n * Gets the element last focused within the container.\n *\n * @param   {String}       containerId  ID of container\n *\n * @returns {Node|String|null}               DOM Node last focused\n * @memberof spotlight/container\n * @public\n */\nfunction getContainerLastFocusedElement(containerId) {\n  var config = getContainerConfig(containerId);\n  if (!config || !config.lastFocusedElement) {\n    return null;\n  }\n\n  // lastFocusedElement may be a container ID so try to convert it to a node to test navigability\n  var lastFocusedElement = config.lastFocusedElement;\n  var node = lastFocusedElement;\n  if (typeof node === 'string') {\n    node = getContainerNode(lastFocusedElement);\n  }\n  return isNavigable(node, containerId, true) ? lastFocusedElement : null;\n}\n\n/**\n * Sets the element last focused within the container\n *\n * @param   {Node}      node         DOM node last focused\n * @param   {String[]}  containerId  ID of container\n *\n * @returns {undefined}\n * @memberof spotlight/container\n * @public\n */\nfunction setContainerLastFocusedElement(node, containerIds) {\n  var lastFocusedElement = node;\n  for (var i = containerIds.length - 1; i > -1; i--) {\n    var id = containerIds[i];\n    configureContainer(id, {\n      lastFocusedElement: lastFocusedElement\n    });\n\n    // If any container in the stack is controlling entering focus, use its container id as the\n    // lastFocusedElement instead of the node\n    var config = getContainerConfig(id);\n    if (config.enterTo) {\n      lastFocusedElement = id;\n    }\n  }\n}\n\n/**\n * Returns all navigable nodes (spottable nodes or containers) visible from outside the container.\n * If the container is restricting navigation into itself via `enterTo`, this method will attempt to\n * return that element as the only element in an array. If that fails or if navigation is not\n * restricted, it will return an array of all possible navigable nodes.\n *\n * @param   {String}                                       containerId        Container ID\n * @param   {('last-focused'|'default-element'|'topmost')} [preferredEnterTo] Prefer the given enterTo configuration\n *\n * @returns {Node[]}             Navigable elements within container\n * @memberof spotlight/container\n * @public\n */\nfunction getContainerNavigableElements(containerId, preferredEnterTo) {\n  if (!isContainer(containerId)) {\n    return [];\n  }\n  var config = getContainerConfig(containerId);\n  var enterTo = config.enterTo,\n    overflow = config.overflow;\n  var enterLast = preferredEnterTo === 'last-focused' || enterTo === 'last-focused' && !preferredEnterTo;\n  var next;\n\n  // if the container has a preferred entry point, try to find it first\n  if (enterLast) {\n    next = getContainerLastFocusedElement(containerId);\n  }\n\n  // try default element if last focused can't be focused\n  if (!next) {\n    next = getContainerDefaultElement(containerId, preferredEnterTo);\n  }\n  if (!next) {\n    var spottables = overflow ?\n    // overflow requires deep recursion to handle selecting the children of unrestricted\n    // containers or restricted containers larger than the container\n    getDeepSpottableDescendants(containerId) : getSpottableDescendants(containerId);\n\n    // if there isn't a preferred entry on an overflow container, filter the visible elements\n    if (overflow) {\n      var containerRect = (0, _utils.getContainerRect)(containerId);\n      next = containerRect && spottables.filter(function (element) {\n        var elementRect = (0, _utils.getRect)(element);\n        if (isContainer(element)) {\n          return (0, _utils.intersects)(containerRect, elementRect);\n        }\n        return (0, _utils.contains)(containerRect, (0, _utils.getRect)(element));\n      });\n      if (next && preferredEnterTo === 'topmost') {\n        next.sort(function (a, b) {\n          return (0, _utils.getRect)(a).top - (0, _utils.getRect)(b).top;\n        });\n      }\n    }\n\n    // otherwise, return all spottables within the container\n    if (!next) {\n      next = spottables;\n    }\n  }\n  return next ? (0, _util.coerceArray)(next) : [];\n}\n\n/**\n * Determines the preferred focus target, traversing any sub-containers as necessary, for the given\n * container.\n *\n * @param   {String}                                       containerId        Container ID\n * @param   {('last-focused'|'default-element'|'topmost')} [preferredEnterTo] Prefer the given enterTo configuration\n *\n * @returns {Node}                 Preferred target as either a DOM node or container-id\n * @memberof spotlight/container\n * @public\n */\nfunction getContainerFocusTarget(containerId, preferredEnterTo) {\n  // deferring restoration until it's requested to allow containers to prepare first\n  restoreLastFocusedElement(containerId);\n  var next = getContainerNavigableElements(containerId, preferredEnterTo);\n  // If multiple candidates returned, we need to find the first viable target since some may\n  // be empty containers which should be skipped.\n  return next.reduce(function (result, element) {\n    if (result) {\n      return result;\n    } else if (isContainer(element)) {\n      var nextId = isContainerNode(element) ? getContainerId(element) : element;\n      return getContainerFocusTarget(nextId);\n    }\n    return element;\n  }, null) || null;\n}\nfunction getContainerPreviousTarget(containerId, direction, destination) {\n  var config = getContainerConfig(containerId);\n  if (config && config.rememberSource && config.previous && config.previous.reverse === direction && config.previous.destination === destination) {\n    return config.previous.target;\n  }\n}\nfunction setContainerPreviousTarget(containerId, direction, destination, target) {\n  var config = getContainerConfig(containerId);\n  if (config && config.rememberSource) {\n    configureContainer(containerId, {\n      previous: {\n        target: target,\n        destination: destination,\n        reverse: reverseDirections[direction]\n      }\n    });\n  }\n}\n\n/**\n * Saves the last focused element into `lastFocusedKey` using a container-defined serialization\n * method configured in `lastFocusedPersist`.\n *\n * @param   {String}     containerId  ID of container\n *\n * @returns {undefined}\n * @memberof spotlight/container\n * @public\n */\nfunction persistLastFocusedElement(containerId) {\n  var cfg = getContainerConfig(containerId);\n  if (cfg) {\n    var lastFocusedElement = cfg.lastFocusedElement;\n    if (lastFocusedElement) {\n      var all = getDeepSpottableDescendants(containerId);\n      var lastFocusedKey = cfg.lastFocusedPersist(lastFocusedElement, all);\n\n      // store lastFocusedKey and release node reference to lastFocusedElement\n      cfg.lastFocusedKey = lastFocusedKey;\n      cfg.lastFocusedElement = null;\n    }\n  }\n}\n\n/**\n * Restores the last focused element from `lastFocusedKey` using a container-defined deserialization\n * method configured in `lastFocusedRestore`.\n *\n * @param   {String}     containerId  ID of container\n *\n * @returns {undefined}\n * @memberof spotlight/container\n * @public\n */\nfunction restoreLastFocusedElement(containerId) {\n  var cfg = getContainerConfig(containerId);\n  if (cfg && cfg.lastFocusedKey) {\n    var all = getDeepSpottableDescendants(containerId);\n    var lastFocusedElement = cfg.lastFocusedRestore(cfg.lastFocusedKey, all);\n\n    // restore lastFocusedElement and release lastFocusedKey\n    cfg.lastFocusedKey = null;\n    cfg.lastFocusedElement = lastFocusedElement;\n  }\n}\nfunction unmountContainer(containerId) {\n  var config = getContainerConfig(containerId);\n  if (config) {\n    config.active = false;\n    persistLastFocusedElement(containerId);\n    if (typeof config.defaultElement !== 'string') {\n      config.defaultElement = null;\n    }\n  }\n}\nfunction isActiveContainer(containerId) {\n  var config = getContainerConfig(containerId);\n  return config && config.active;\n}\n\n/**\n * Determines if the provided container has a configured restriction.\n *\n * By default, returns `true` for `'self-only'` restrictions but the type of restriction can be\n * passed as well.\n *\n * @param {String} containerId The container id\n * @param {String} [restrict] The container restriction defaulted to `'self-only'`\n * @returns {Boolean} `true` if the container has the specified restriction\n * @private\n */\nfunction isRestrictedContainer(containerId) {\n  var restrict = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'self-only';\n  var config = getContainerConfig(containerId);\n  return Boolean(config && config.restrict === restrict);\n}\n\n/**\n * Determines if `innerContainerId` is inside `outerContainerId`.\n *\n * @param {String} outerContainerId The outer container id\n * @param {String} innerContainerId The inner container id\n * @returns {Boolean} `true` if both containers exist and `innerContainerId` is within\n *                    `outerContainerId`\n * @private\n */\nfunction containsContainer(outerContainerId, innerContainerId) {\n  var outer = getContainerNode(outerContainerId);\n  var inner = getContainerNode(innerContainerId);\n  return Boolean(outer && inner && outer.contains(inner));\n}\n\n/**\n * Determines if `containerId` may become the active container.\n *\n * @param {String} containerId Spotlight container to which focus is leaving\n * @returns\t{Boolean} `true` if the active container can change to `containerId`\n * @private\n */\nfunction mayActivateContainer(containerId) {\n  var currentContainerId = getLastContainer();\n\n  // If the current container or its outer containers are restricted to 'self-only' and\n  // if the next container to be activated is not inside the restrict container,\n  // the next container should not be activated.\n  var currentContainerNode = getContainerNode(currentContainerId);\n  var restrictContainer = getContainersForNode(currentContainerNode).reduceRight(function (result, outerContainerId) {\n    return result || (isRestrictedContainer(outerContainerId) ? outerContainerId : null);\n  }, null);\n  return !restrictContainer || containsContainer(restrictContainer, containerId);\n}\nfunction getDefaultContainer() {\n  return isActiveContainer(_defaultContainerId) ? _defaultContainerId : '';\n}\nfunction setDefaultContainer(containerId) {\n  if (!containerId) {\n    _defaultContainerId = '';\n  } else if (!getContainerConfig(containerId)) {\n    throw new Error('Container \"' + containerId + '\" doesn\\'t exist!');\n  } else {\n    _defaultContainerId = containerId;\n  }\n}\nfunction getLastContainer() {\n  return isActiveContainer(_lastContainerId) ? _lastContainerId : '';\n}\nfunction setLastContainer(containerId) {\n  _lastContainerId = containerId || '';\n}\n\n/**\n * Updates the last container based on the current focus and target focus.\n *\n * @param {Node} current Currently focused node\n * @param {Node} target  Target node. May or may not be focusable\n * @memberof spotlight/container\n * @public\n */\nfunction setLastContainerFromTarget(current, target) {\n  var currentContainers = getNavigableContainersForNode(current);\n  var currentOuterContainerId = currentContainers[0];\n  var currentContainerConfig = getContainerConfig(currentOuterContainerId);\n  var targetContainers = getContainersForNode(target);\n  var targetInnerContainer = (0, _last[\"default\"])(targetContainers);\n  var sharedContainer = (0, _last[\"default\"])((0, _intersection[\"default\"])(currentContainers, targetContainers));\n  if (sharedContainer || !currentContainerConfig || currentContainerConfig.restrict !== 'self-only') {\n    // If the target shares a container with the current container stack or the current\n    // element isn't within a self-only container, use the target's nearest container\n    setLastContainer(targetInnerContainer);\n  } else {\n    // Otherwise, the target is not within the current container stack and the current\n    // element was within a 'self-only' container, use the current's outer container\n    setLastContainer(currentOuterContainerId);\n  }\n}\nfunction isWithinOverflowContainer(target) {\n  var containerIds = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getContainersForNode(target);\n  return containerIds\n  // ignore the root container id which is set to overflow by the root decorator\n  .filter(function (id) {\n    return id !== rootContainerId;\n  })\n  // get the config for each container\n  .map(getContainerConfig)\n  // and check if any are set to overflow\n  .some(function (config) {\n    return config && config.overflow;\n  });\n}\n\n/**\n * Notifies any affected containers that focus has left one of their children for another container\n *\n * @param {String} direction up/down/left/right\n * @param {Node} current currently focused element\n * @param {String[]} currentContainerIds Containers for current\n * @param {Node} next To be focused element\n * @param {String[]} nextContainerIds Containers for next\n * @private\n */\nfunction notifyLeaveContainer(direction, current, currentContainerIds, next, nextContainerIds) {\n  currentContainerIds.forEach(function (containerId) {\n    if (!nextContainerIds.includes(containerId)) {\n      var config = getContainerConfig(containerId);\n      if (config && config.onLeaveContainer) {\n        config.onLeaveContainer({\n          type: 'onLeaveContainer',\n          direction: direction,\n          target: current,\n          relatedTarget: next\n        });\n      }\n    }\n  });\n}\n\n/**\n * Notifies any containers that focus attempted to move but failed to find a target\n *\n * @param {String} direction up/down/left/right\n * @param {Node} current currently focused element\n * @param {String[]} currentContainerIds Containers for current\n * @private\n */\nfunction notifyLeaveContainerFail(direction, current, currentContainerIds) {\n  currentContainerIds.forEach(function (containerId) {\n    var config = getContainerConfig(containerId);\n    if (config && config.onLeaveContainerFail) {\n      config.onLeaveContainerFail({\n        type: 'onLeaveContainerFail',\n        direction: direction,\n        target: current\n      });\n    }\n  });\n}\n\n/**\n * Notifies any affected containers that one of their children has received focus.\n *\n * @param {String} direction up/down/left/right\n * @param {Node} previous Previously focused element\n * @param {String[]} previousContainerIds Containers for previous\n * @param {Node} current Currently focused element\n * @param {String[]} currentContainerIds Containers for current\n * @private\n */\nfunction notifyEnterContainer(direction, previous, previousContainerIds, current, currentContainerIds) {\n  currentContainerIds.forEach(function (containerId) {\n    if (!previousContainerIds.includes(containerId)) {\n      var config = getContainerConfig(containerId);\n      if (config && config.onEnterContainer) {\n        config.onEnterContainer({\n          type: 'onEnterContainer',\n          direction: direction,\n          target: current,\n          relatedTarget: previous\n        });\n      }\n    }\n  });\n}\n\n/**\n * Returns the closest container that wrap the element and has positionTargetOnFocus configured\n *\n * @param {Node} spotItem Focused element\n * @param {String[]} containerIds Ids for containers that wrap the spotItem element\n * @private\n */\nfunction getPositionTargetOnFocus(spotItem) {\n  var containerIds = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getContainersForNode(spotItem);\n  return containerIds.reduce(function (result, containerId) {\n    var _getContainerConfig;\n    if ((_getContainerConfig = getContainerConfig(containerId)) !== null && _getContainerConfig !== void 0 && _getContainerConfig.positionTargetOnFocus) {\n      result = getContainerNode(containerId);\n    }\n    return result;\n  }, spotItem);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","getContainerConfig","getAllContainerIds","containerAttribute","configureDefaults","configureContainer","addContainer","getContainerDefaultElement","getContainerFocusTarget","getContainerId","getContainerLastFocusedElement","getContainerNavigableElements","getContainerNode","getContainerPreviousTarget","getContainersForNode","getDeepSpottableDescendants","getDefaultContainer","getLastContainer","getNavigableContainersForNode","getPositionTargetOnFocus","isNavigable","isContainer5WayHoldable","isContainer","getSpottableDescendants","isWithinOverflowContainer","mayActivateContainer","notifyEnterContainer","notifyLeaveContainer","notifyLeaveContainerFail","rootContainerId","removeContainer","removeAllContainers","setContainerLastFocusedElement","setContainerPreviousTarget","setDefaultContainer","setLastContainer","setLastContainerFromTarget","unmountContainer","_and","_interopRequireDefault","require","_concat","_snapshot","_util","_intersection","_last","_utils","obj","__esModule","ownKeys","e","r","t","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","key","_toPropertyKey","configurable","writable","i","_toPrimitive","String","Symbol","toPrimitive","call","TypeError","Number","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","minLen","_arrayLikeToArray","n","prototype","toString","slice","constructor","name","Array","from","test","iter","iterator","isArray","len","arr2","containerConfigs","Map","containerKey","disabledKey","containerPrefix","containerSelector","reverseDirections","_ids","_defaultContainerId","_lastContainerId","GlobalConfig","active","continue5WayHold","defaultElement","enterTo","isStandardFocusableMode","lastFocusedElement","lastFocusedKey","lastFocusedPersist","node","all","container","element","indexOf","lastFocusedRestore","_ref","leaveFor","navigableFilter","obliqueMultiplier","onEnterContainer","onLeaveContainer","onLeaveContainerFail","overflow","partition","positionTargetOnFocus","rememberSource","restrict","selector","selectorDisabled","straightMultiplier","straightOnly","straightOverlapThreshold","tabIndexIgnoreList","querySelector","includeSelector","excludeSelector","focusables","getElementsByTagName","isStandardFocusable","include","Set","concat","querySelectorAll","exclude","isContainerNode","dataset","mapContainers","fn","result","document","unshift","parentNode","id","get","nodeOrId","has","isContainerEnabled","reduce","getContainerSelector","getSubContainerSelector","containerId","nodeStyle","isWindowReady","window","getComputedStyle","config","display","visibility","getOwnedNodes","owns","getAttribute","ids","split","map","getElementById","Boolean","matchSelector","_ref2","spottableSelector","subContainerSelector","candidates","excludedContainers","containers","containerIds","selfOnlyIndex","reduceRight","index","generateId","mergeConfig","current","updated","cfg","assign","undefined","set","clear","verify","process","env","NODE_ENV","offsetWidth","offsetHeight","containerNode","next","done","isActiveContainer","preferredEnterTo","defaultElementSelector","coerceArray","spottables","elem","enterLast","containerRect","getContainerRect","elementRect","getRect","intersects","contains","sort","a","b","top","restoreLastFocusedElement","nextId","direction","destination","previous","reverse","target","persistLastFocusedElement","isRestrictedContainer","containsContainer","outerContainerId","innerContainerId","outer","inner","currentContainerId","currentContainerNode","restrictContainer","Error","currentContainers","currentOuterContainerId","currentContainerConfig","targetContainers","targetInnerContainer","sharedContainer","some","currentContainerIds","nextContainerIds","includes","type","relatedTarget","previousContainerIds","spotItem","_getContainerConfig"],"sources":["/Users/meogyu/connected_front/node_modules/@enact/spotlight/src/container.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getContainerConfig = exports.getAllContainerIds = exports.containerAttribute = exports.configureDefaults = exports.configureContainer = exports.addContainer = void 0;\nexports.getContainerDefaultElement = getContainerDefaultElement;\nexports.getContainerFocusTarget = getContainerFocusTarget;\nexports.getContainerId = void 0;\nexports.getContainerLastFocusedElement = getContainerLastFocusedElement;\nexports.getContainerNavigableElements = getContainerNavigableElements;\nexports.getContainerNode = void 0;\nexports.getContainerPreviousTarget = getContainerPreviousTarget;\nexports.getContainersForNode = getContainersForNode;\nexports.getDeepSpottableDescendants = void 0;\nexports.getDefaultContainer = getDefaultContainer;\nexports.getLastContainer = getLastContainer;\nexports.getNavigableContainersForNode = getNavigableContainersForNode;\nexports.getPositionTargetOnFocus = getPositionTargetOnFocus;\nexports.isNavigable = exports.isContainer5WayHoldable = exports.isContainer = exports.getSpottableDescendants = void 0;\nexports.isWithinOverflowContainer = isWithinOverflowContainer;\nexports.mayActivateContainer = mayActivateContainer;\nexports.notifyEnterContainer = notifyEnterContainer;\nexports.notifyLeaveContainer = notifyLeaveContainer;\nexports.notifyLeaveContainerFail = notifyLeaveContainerFail;\nexports.rootContainerId = exports.removeContainer = exports.removeAllContainers = void 0;\nexports.setContainerLastFocusedElement = setContainerLastFocusedElement;\nexports.setContainerPreviousTarget = setContainerPreviousTarget;\nexports.setDefaultContainer = setDefaultContainer;\nexports.setLastContainer = setLastContainer;\nexports.setLastContainerFromTarget = setLastContainerFromTarget;\nexports.unmountContainer = unmountContainer;\nvar _and = _interopRequireDefault(require(\"ramda/src/and\"));\nvar _concat = _interopRequireDefault(require(\"ramda/src/concat\"));\nvar _snapshot = require(\"@enact/core/snapshot\");\nvar _util = require(\"@enact/core/util\");\nvar _intersection = _interopRequireDefault(require(\"ramda/src/intersection\"));\nvar _last = _interopRequireDefault(require(\"ramda/src/last\"));\nvar _utils = require(\"./utils\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; } /**\n * Exports methods and members for creating and maintaining spotlight containers.\n *\n * @module spotlight/container\n * @private\n */\nvar containerAttribute = exports.containerAttribute = 'data-spotlight-id';\nvar containerConfigs = new Map();\nvar containerKey = 'spotlightId';\nvar disabledKey = 'spotlightContainerDisabled';\nvar containerPrefix = 'container-';\nvar containerSelector = '[data-spotlight-container]';\nvar rootContainerId = exports.rootContainerId = 'spotlightRootDecorator';\nvar reverseDirections = {\n  'left': 'right',\n  'up': 'down',\n  'right': 'left',\n  'down': 'up'\n};\n\n// Incrementer for container IDs\nvar _ids = 0;\nvar _defaultContainerId = '';\nvar _lastContainerId = '';\n\n// Note: an <extSelector> can be one of following types:\n// - a valid selector string for \"querySelectorAll\"\n// - a NodeList or an array containing DOM elements\n// - a single DOM element\n// - a string \"@<containerId>\" to indicate the specified container\n// - a string \"@\" to indicate the default container\nvar GlobalConfig = {\n  // set to false for unmounted containers to omit them from searches\n  active: true,\n  continue5WayHold: false,\n  defaultElement: '',\n  // <extSelector> except \"@\" syntax.\n  enterTo: null,\n  // null, 'last-focused', 'default-element'\n  isStandardFocusableMode: false,\n  // @private - set to true to focus standard focusable element\n  lastFocusedElement: null,\n  lastFocusedKey: null,\n  lastFocusedPersist: function lastFocusedPersist(node, all) {\n    var container = typeof node === 'string';\n    return {\n      container: container,\n      element: !container,\n      key: container ? node : all.indexOf(node)\n    };\n  },\n  lastFocusedRestore: function lastFocusedRestore(_ref, all) {\n    var container = _ref.container,\n      key = _ref.key;\n    return container ? key : all[key];\n  },\n  leaveFor: null,\n  // {left: <extSelector>, right: <extSelector>, up: <extSelector>, down: <extSelector>}\n  navigableFilter: null,\n  obliqueMultiplier: 5,\n  onEnterContainer: null,\n  // @private - notify the container when entering via 5-way\n  onLeaveContainer: null,\n  // @private - notify the container when leaving via 5-way\n  onLeaveContainerFail: null,\n  // @private - notify the container when failing to leave via 5-way\n  overflow: false,\n  partition: false,\n  // use the container bounds for partitioning when leaving\n  positionTargetOnFocus: false,\n  // @private - use the container for the position target when its descendants is focused\n  rememberSource: false,\n  restrict: 'self-first',\n  // 'self-first', 'self-only', 'none'\n  selector: '',\n  // can be a valid <extSelector> except \"@\" syntax.\n  selectorDisabled: false,\n  straightMultiplier: 1,\n  straightOnly: false,\n  straightOverlapThreshold: 0.5,\n  tabIndexIgnoreList: 'a, input, select, textarea, button, iframe, [contentEditable=true]'\n};\n\n/**\n * Calculates nodes within `node` that match `includeSelector` and do not match `excludeSelector`\n *\n * @param   {Node}    node             DOM Node to query\n * @param   {String}  includeSelector  CSS selector of nodes to include\n * @param   {String}  excludeSelector  CSS selector for nodes to exclude\n *\n * @returns {Node[]}                   Array of nodes\n * @memberof spotlight/container\n * @private\n */\nvar querySelector = function querySelector(node, includeSelector, excludeSelector) {\n  var focusables = GlobalConfig.isStandardFocusableMode ? Array.prototype.filter.call(node.getElementsByTagName('*'), _utils.isStandardFocusable) : [];\n  var include = new Set([].concat(_toConsumableArray(node.querySelectorAll(includeSelector)), _toConsumableArray(focusables)));\n  var exclude = node.querySelectorAll(excludeSelector);\n  for (var i = 0; i < exclude.length; i++) {\n    include[\"delete\"](exclude[i]);\n  }\n  return Array.from(include);\n};\n\n/**\n * Determines if `node` is a spotlight container\n *\n * @param   {Node}     node   Node to check\n *\n * @returns {Boolean}        `true` if `node` is a spotlight container\n * @memberof spotlight/container\n * @private\n */\nvar isContainerNode = function isContainerNode(node) {\n  return node && node.dataset && 'spotlightContainer' in node.dataset;\n};\n\n/**\n * Walks up the node hierarchy calling `fn` on each node that is a container\n *\n * @param   {Node}     node  Node from which to start the search\n * @param   {Function} fn    Called once for each container with the container node as the first\n *                           argument. The return value is accumulated in the array returned by\n *                           `mapContainers`\n *\n * @returns {Array}          Array of values returned by `fn` in order of outermost container to\n *                           innermost container\n * @memberof spotlight/container\n * @private\n */\nvar mapContainers = function mapContainers(node, fn) {\n  var result = [];\n  while (node && node !== document) {\n    if (isContainerNode(node)) {\n      result.unshift(fn(node));\n    }\n    node = node.parentNode;\n  }\n  return result;\n};\n\n/**\n * Returns the container config for `containerId`\n *\n * @param   {String}  id  Container ID\n *\n * @returns {Object}      Container config\n * @memberof spotlight/container\n * @private\n */\nvar getContainerConfig = exports.getContainerConfig = function getContainerConfig(id) {\n  return containerConfigs.get(id);\n};\n\n/**\n * Determines if node or a container id represents a spotlight container\n *\n * @param   {Node|String}  nodeOrId  Node or container ID\n *\n * @returns {Boolean}                `true` if `nodeOrId` represents a spotlight container\n * @memberof spotlight/container\n * @private\n */\nvar isContainer = exports.isContainer = function isContainer(nodeOrId) {\n  if (typeof nodeOrId === 'string') {\n    return containerConfigs.has(nodeOrId);\n  }\n  return isContainerNode(nodeOrId);\n};\n\n/**\n * Determines if any of the containers at or above `node` are disabled and, if so, returns `false`.\n *\n * @param   {Node}     node  Spottable node or spotlight container\n *\n * @returns {Boolean}        `true` if all container ancestors are enabled\n * @memberof spotlight/container\n * @private\n */\nvar isContainerEnabled = function isContainerEnabled(node) {\n  return mapContainers(node, function (container) {\n    return container.dataset[disabledKey] !== 'true';\n  }).reduce(_and[\"default\"], true);\n};\n\n/**\n * Returns the container ID for `node`\n *\n * @param   {Node}    node  Container Node\n *\n * @returns {String}        Container ID\n * @memberof spotlight/container\n * @private\n */\nvar getContainerId = exports.getContainerId = function getContainerId(node) {\n  return node.dataset[containerKey];\n};\n\n/**\n * Generates a CSS selector string for a current container if `node` is a container\n *\n * @param   {Node}    node  Container Node\n *\n * @returns {String}        CSS selector\n * @memberof spotlight/container\n * @private\n */\nvar getContainerSelector = function getContainerSelector(node) {\n  if (isContainerNode(node)) {\n    return \"[\".concat(containerAttribute, \"=\\\"\").concat(getContainerId(node), \"\\\"]\");\n  }\n  return '';\n};\n\n/**\n * Generates a CSS selector string for containers within `node` if it is a container\n *\n * @param   {Node}    node  Container Node\n *\n * @returns {String}        CSS selector\n * @memberof spotlight/container\n * @private\n */\nvar getSubContainerSelector = function getSubContainerSelector(node) {\n  if (isContainerNode(node)) {\n    return \"\".concat(getContainerSelector(node), \" \").concat(containerSelector);\n  }\n  return containerSelector;\n};\n\n/**\n * Returns the node for a container\n *\n * @param   {String}  containerId  ID of container\n *\n * @returns {Node}                 DOM node of the container\n * @memberof spotlight/container\n * @private\n */\nvar getContainerNode = exports.getContainerNode = function getContainerNode(containerId) {\n  if (!containerId) {\n    return null;\n  } else if (containerId === rootContainerId) {\n    return document;\n  }\n  return document.querySelector(\"[\".concat(containerAttribute, \"=\\\"\").concat(containerId, \"\\\"]\"));\n};\n\n/**\n * Calls the `navigableFilter` function for the container if defined.\n *\n * @param   {Node}    node         DOM node to check if it is navigable\n * @param   {String}  containerId  ID of container\n *\n * @returns {Boolean}              `true` if it passes the `navigableFilter` method or if that\n *                                  method is not defined for the container\n * @memberof spotlight/container\n * @private\n */\nvar navigableFilter = function navigableFilter(node, containerId) {\n  var nodeStyle = node && (0, _snapshot.isWindowReady)() && window.getComputedStyle(node);\n  var config = getContainerConfig(containerId);\n  if (!nodeStyle || nodeStyle.display === 'none' || nodeStyle.visibility === 'hidden') {\n    return false;\n  }\n  if (config && typeof config.navigableFilter === 'function') {\n    if (config.navigableFilter(node, containerId) === false) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Determines nodes that are owned by `node` based on `aria-owns`.\n *\n * @param   {Node}   node          Owner\n *\n * @returns {Node[]}               Array of owned nodes\n * @memberof spotlight/container\n * @private\n */\nvar getOwnedNodes = function getOwnedNodes(node, selector) {\n  // if node is document, it will not have getAttribute and therefore can't have aria-owns\n  var owns = node && node.getAttribute && node.getAttribute('aria-owns');\n  if (owns) {\n    var ids = owns.split(' ');\n    return ids.map(function (id) {\n      return id && document.getElementById(id);\n    }).filter(Boolean).filter(function (n) {\n      return isContainerNode(n) || (0, _utils.matchSelector)(selector, n);\n    });\n  }\n  return [];\n};\n\n/**\n * Determines all spottable elements and containers that are directly contained by the container\n * identified by `containerId` and no other subcontainers.\n *\n * @param   {String}  containerId  ID of container\n *\n * @returns {Node[]}               Array of spottable elements and containers.\n * @memberof spotlight/container\n * @public\n */\nvar getSpottableDescendants = exports.getSpottableDescendants = function getSpottableDescendants(containerId) {\n  var node = getContainerNode(containerId);\n\n  // if it's falsy or is a disabled container, return an empty set\n  if (!node || isContainerNode(node) && !isContainerEnabled(node)) {\n    return [];\n  }\n  var _ref2 = getContainerConfig(containerId) || {},\n    selector = _ref2.selector,\n    selectorDisabled = _ref2.selectorDisabled;\n  if (!selector || selectorDisabled) {\n    return [];\n  }\n  var spottableSelector = selector;\n  var subContainerSelector = getSubContainerSelector(node);\n  var candidates = querySelector(node, \"\".concat(spottableSelector, \", \").concat(getContainerSelector(node), \" \").concat(containerSelector, \":not([data-spotlight-container-disabled=\\\"true\\\"])\"), \"\".concat(subContainerSelector, \" \").concat(spottableSelector, \", \").concat(subContainerSelector, \" \").concat(containerSelector));\n  candidates.push.apply(candidates, _toConsumableArray(getOwnedNodes(node, selector)));\n  return candidates.filter(function (n) {\n    return navigableFilter(n, containerId);\n  });\n};\n\n/**\n * Recursively get spottable descendants by including elements within sub-containers that do not\n * have `enterTo` configured\n *\n * @param   {String}    containerId          ID of container\n * @param   {String[]}  [excludedContainers] IDs of containers to exclude from result set\n *\n * @returns {Node[]}                         Array of spottable elements and containers\n * @memberof spotlight/container\n * @private\n */\nvar getDeepSpottableDescendants = exports.getDeepSpottableDescendants = function getDeepSpottableDescendants(containerId, excludedContainers) {\n  return getSpottableDescendants(containerId).map(function (n) {\n    if (isContainer(n)) {\n      var id = getContainerId(n);\n      var config = getContainerConfig(id);\n      if (excludedContainers && excludedContainers.indexOf(id) >= 0) {\n        return [];\n      } else if (config && !config.enterTo) {\n        return getDeepSpottableDescendants(id, excludedContainers);\n      }\n    }\n    return [n];\n  }).reduce(_concat[\"default\"], []);\n};\n\n/**\n * Determines if a container allows 5-way key hold to be preserved or not.\n *\n * @param {String} containerId Container Id\n * @returns {Boolean} `true` if a container is 5 way holdable\n * @memberof spotlight/container\n * @private\n */\nvar isContainer5WayHoldable = exports.isContainer5WayHoldable = function isContainer5WayHoldable(containerId) {\n  var config = getContainerConfig(containerId);\n  return config && config.continue5WayHold || false;\n};\n\n/**\n * Returns an array of ids for containers that wrap the element, in order of outer-to-inner, with\n * the last array item being the immediate container id of the element.\n *\n * @param   {Node}      node  Node from which to start the search\n *\n * @returns {String[]}        Array on container IDs\n * @memberof spotlight/container\n * @private\n */\nfunction getContainersForNode(node) {\n  var containers = mapContainers(node, getContainerId);\n  containers.unshift(rootContainerId);\n  return containers;\n}\n\n/**\n * Returns an array of ids for containers that wrap the element, in order of outer-to-inner, with\n * the last array item being the immediate container id of the element. The container ids are\n * limited to only those between `node` and the first restrict=\"self-only\" container.\n *\n * @param   {Node}      node  Node from which to start the search\n *\n * @returns {String[]}        Array on container IDs\n * @memberof spotlight/container\n * @private\n */\nfunction getNavigableContainersForNode(node) {\n  var containerIds = getContainersForNode(node);\n\n  // find first self-only container id\n  var selfOnlyIndex = containerIds.map(getContainerConfig).filter(function (config) {\n    return config != null;\n  }).reduceRight(function (index, config, i) {\n    if (index === -1 && config.restrict === 'self-only') {\n      return i;\n    }\n    return index;\n  }, -1);\n\n  // if we found one (and it's not the root), slice those off and return\n  if (selfOnlyIndex > 0) {\n    return containerIds.slice(selfOnlyIndex);\n  }\n  return containerIds;\n}\n\n/**\n * Generates a new unique identifier for a container\n *\n * @returns {String} Container ID\n * @memberof spotlight/container\n * @private\n */\nfunction generateId() {\n  var id;\n  /* eslint no-constant-condition: [\"error\", { \"checkLoops\": false }] */\n  while (true) {\n    id = containerPrefix + String(++_ids);\n    if (!isContainer(id)) {\n      break;\n    }\n  }\n  return id;\n}\n\n/**\n * Merges two container configurations while only allowing keys from `updated` which are defined in\n * `GlobalConfig`\n *\n * @param   {Object}  current  Current container configuration\n * @param   {Object}  updated  Updated configuration which may only be a partial configuration\n *\n * @returns {Object}           Merged configuration\n * @memberof spotlight/container\n * @private\n */\nvar mergeConfig = function mergeConfig(current, updated) {\n  if (!updated) return current;\n  var cfg = null;\n  Object.keys(updated).forEach(function (key) {\n    if (key in GlobalConfig && current[key] !== updated[key]) {\n      if (cfg == null) {\n        cfg = Object.assign({}, current);\n      }\n      cfg[key] = updated[key];\n    }\n  });\n  return cfg || current;\n};\n\n/**\n * Adds or updates a container. When a container id is not specified, it will be generated.\n *\n * @param   {String|Object}  containerIdOrConfig  Either a string container id or a configuration\n *                                                object.\n * @param   {Object}         [config]             Container configuration when `containerIdOrConfig`\n *                                                is a string. When omitted, the container will have\n *                                                the default `GlobalConfig`.\n *\n * @returns {String}                              The container id\n * @memberof spotlight/container\n * @public\n */\nvar configureContainer = exports.configureContainer = function configureContainer() {\n  var containerId, config;\n  if (typeof (arguments.length <= 0 ? undefined : arguments[0]) === 'object') {\n    config = arguments.length <= 0 ? undefined : arguments[0];\n    containerId = config.id;\n  } else if (typeof (arguments.length <= 0 ? undefined : arguments[0]) === 'string') {\n    containerId = arguments.length <= 0 ? undefined : arguments[0];\n    if (typeof (arguments.length <= 1 ? undefined : arguments[1]) === 'object') {\n      config = arguments.length <= 1 ? undefined : arguments[1];\n    }\n  }\n  if (!containerId) {\n    containerId = generateId();\n  }\n  config = mergeConfig(containerConfigs.get(containerId) || _objectSpread({}, GlobalConfig), config);\n  containerConfigs.set(containerId, config);\n  return containerId;\n};\n\n/**\n * Adds a container and marks it active. When a container id is not specified, it will be generated.\n *\n * @param   {String|Object}  containerIdOrConfig  Either a string container id or a configuration\n *                                                object.\n * @param   {Object}         [config]             Container configuration when `containerIdOrConfig`\n *                                                is a string. When omitted, the container will have\n *                                                the default `GlobalConfig`.\n *\n * @returns {String}                              The container id\n * @memberof spotlight/container\n * @public\n */\nvar addContainer = exports.addContainer = function addContainer() {\n  var containerId = configureContainer.apply(void 0, arguments);\n  var config = getContainerConfig(containerId);\n  config.active = true;\n  return containerId;\n};\n\n/**\n * Removes a container\n *\n * @param   {String}     containerId  ID of the container to remove\n *\n * @returns {undefined}\n * @memberof spotlight/container\n * @public\n */\nvar removeContainer = exports.removeContainer = function removeContainer(containerId) {\n  containerConfigs[\"delete\"](containerId);\n};\n\n/**\n * Removes all containers\n *\n * @returns {undefined}\n * @memberof spotlight/container\n * @public\n */\nvar removeAllContainers = exports.removeAllContainers = function removeAllContainers() {\n  containerConfigs.clear();\n};\n\n/**\n * Configures the `GlobalConfig` for containers\n *\n * @param   {Object}  config  New global configuration. Cannot introduce new keys\n *\n * @returns {undefined}\n * @memberof spotlight/container\n * @public\n */\nvar configureDefaults = exports.configureDefaults = function configureDefaults(config) {\n  GlobalConfig = mergeConfig(GlobalConfig, config);\n};\n\n/**\n * Determines if `node` is a navigable element within the container identified by `containerId`.\n *\n * @param   {Node}     node         DOM node to check if it is navigable\n * @param   {String}   containerId  ID of the container containing `node`\n * @param   {Boolean}  verify       `true` to verify the node matches the container's `selector`\n *\n * @returns {Boolean}               `true` if `node` is navigable\n * @memberof spotlight/container\n * @public\n */\nvar isNavigable = exports.isNavigable = function isNavigable(node, containerId, verify) {\n  if (!node ||\n  // jsdom reports all nodes as having no size so we must skip this condition in our tests\n  process.env.NODE_ENV !== 'test' && node.offsetWidth <= 0 && node.offsetHeight <= 0) {\n    return false;\n  }\n  var containerNode = getContainerNode(containerId);\n  if (containerNode !== document && containerNode.dataset[disabledKey] === 'true') {\n    return false;\n  }\n  var config = getContainerConfig(containerId);\n  if (verify && config && config.selector && !isContainer(node) && !(0, _utils.matchSelector)(config.selector, node) && !(GlobalConfig.isStandardFocusableMode && (0, _utils.isStandardFocusable)(node))) {\n    return false;\n  }\n  return navigableFilter(node, containerId);\n};\n\n/**\n * Returns the IDs of all containers\n *\n * @returns {String[]}  Array of container IDs\n * @memberof spotlight/container\n * @private\n */\nvar getAllContainerIds = exports.getAllContainerIds = function getAllContainerIds() {\n  var ids = [];\n  var keys = containerConfigs.keys();\n\n  // PhantomJS-friendly iterator->array conversion\n  var id;\n  while ((id = keys.next()) && !id.done) {\n    if (isActiveContainer(id.value)) {\n      ids.push(id.value);\n    }\n  }\n  return ids;\n};\n\n/**\n * Returns the default focus element for a container\n *\n * @param   {String}                                       containerId        Container ID\n * @param   {('last-focused'|'default-element'|'topmost')} [preferredEnterTo] Prefer the given enterTo configuration\n *\n * @returns {Node|null}                 Default focus element\n * @memberof spotlight/container\n * @public\n */\nfunction getContainerDefaultElement(containerId, preferredEnterTo) {\n  var config = getContainerConfig(containerId);\n  var defaultElementSelector = config && config.defaultElement;\n  if (!defaultElementSelector) {\n    return null;\n  }\n  defaultElementSelector = (0, _util.coerceArray)(defaultElementSelector);\n\n  // If a preferred enterTo has been provided, we will favor it by making it first in search array\n  if (preferredEnterTo && typeof preferredEnterTo === 'string' && preferredEnterTo !== 'default-element') {\n    defaultElementSelector.unshift(preferredEnterTo);\n  }\n  var spottables = getDeepSpottableDescendants(containerId);\n  return defaultElementSelector.reduce(function (result, selector) {\n    if (result) {\n      return result;\n    }\n    if (typeof selector === 'string') {\n      return spottables.filter(function (elem) {\n        return (0, _utils.matchSelector)(selector, elem) && isNavigable(elem, containerId, true);\n      })[0];\n    }\n\n    // FIXME: There is some prior implicit support for `defaultElement` to be an element rather\n    // than a selector. This continues that support but should eventually be removed.\n    return selector;\n  }, null);\n}\n\n/**\n * Gets the element last focused within the container.\n *\n * @param   {String}       containerId  ID of container\n *\n * @returns {Node|String|null}               DOM Node last focused\n * @memberof spotlight/container\n * @public\n */\nfunction getContainerLastFocusedElement(containerId) {\n  var config = getContainerConfig(containerId);\n  if (!config || !config.lastFocusedElement) {\n    return null;\n  }\n\n  // lastFocusedElement may be a container ID so try to convert it to a node to test navigability\n  var lastFocusedElement = config.lastFocusedElement;\n  var node = lastFocusedElement;\n  if (typeof node === 'string') {\n    node = getContainerNode(lastFocusedElement);\n  }\n  return isNavigable(node, containerId, true) ? lastFocusedElement : null;\n}\n\n/**\n * Sets the element last focused within the container\n *\n * @param   {Node}      node         DOM node last focused\n * @param   {String[]}  containerId  ID of container\n *\n * @returns {undefined}\n * @memberof spotlight/container\n * @public\n */\nfunction setContainerLastFocusedElement(node, containerIds) {\n  var lastFocusedElement = node;\n  for (var i = containerIds.length - 1; i > -1; i--) {\n    var id = containerIds[i];\n    configureContainer(id, {\n      lastFocusedElement: lastFocusedElement\n    });\n\n    // If any container in the stack is controlling entering focus, use its container id as the\n    // lastFocusedElement instead of the node\n    var config = getContainerConfig(id);\n    if (config.enterTo) {\n      lastFocusedElement = id;\n    }\n  }\n}\n\n/**\n * Returns all navigable nodes (spottable nodes or containers) visible from outside the container.\n * If the container is restricting navigation into itself via `enterTo`, this method will attempt to\n * return that element as the only element in an array. If that fails or if navigation is not\n * restricted, it will return an array of all possible navigable nodes.\n *\n * @param   {String}                                       containerId        Container ID\n * @param   {('last-focused'|'default-element'|'topmost')} [preferredEnterTo] Prefer the given enterTo configuration\n *\n * @returns {Node[]}             Navigable elements within container\n * @memberof spotlight/container\n * @public\n */\nfunction getContainerNavigableElements(containerId, preferredEnterTo) {\n  if (!isContainer(containerId)) {\n    return [];\n  }\n  var config = getContainerConfig(containerId);\n  var enterTo = config.enterTo,\n    overflow = config.overflow;\n  var enterLast = preferredEnterTo === 'last-focused' || enterTo === 'last-focused' && !preferredEnterTo;\n  var next;\n\n  // if the container has a preferred entry point, try to find it first\n  if (enterLast) {\n    next = getContainerLastFocusedElement(containerId);\n  }\n\n  // try default element if last focused can't be focused\n  if (!next) {\n    next = getContainerDefaultElement(containerId, preferredEnterTo);\n  }\n  if (!next) {\n    var spottables = overflow ?\n    // overflow requires deep recursion to handle selecting the children of unrestricted\n    // containers or restricted containers larger than the container\n    getDeepSpottableDescendants(containerId) : getSpottableDescendants(containerId);\n\n    // if there isn't a preferred entry on an overflow container, filter the visible elements\n    if (overflow) {\n      var containerRect = (0, _utils.getContainerRect)(containerId);\n      next = containerRect && spottables.filter(function (element) {\n        var elementRect = (0, _utils.getRect)(element);\n        if (isContainer(element)) {\n          return (0, _utils.intersects)(containerRect, elementRect);\n        }\n        return (0, _utils.contains)(containerRect, (0, _utils.getRect)(element));\n      });\n      if (next && preferredEnterTo === 'topmost') {\n        next.sort(function (a, b) {\n          return (0, _utils.getRect)(a).top - (0, _utils.getRect)(b).top;\n        });\n      }\n    }\n\n    // otherwise, return all spottables within the container\n    if (!next) {\n      next = spottables;\n    }\n  }\n  return next ? (0, _util.coerceArray)(next) : [];\n}\n\n/**\n * Determines the preferred focus target, traversing any sub-containers as necessary, for the given\n * container.\n *\n * @param   {String}                                       containerId        Container ID\n * @param   {('last-focused'|'default-element'|'topmost')} [preferredEnterTo] Prefer the given enterTo configuration\n *\n * @returns {Node}                 Preferred target as either a DOM node or container-id\n * @memberof spotlight/container\n * @public\n */\nfunction getContainerFocusTarget(containerId, preferredEnterTo) {\n  // deferring restoration until it's requested to allow containers to prepare first\n  restoreLastFocusedElement(containerId);\n  var next = getContainerNavigableElements(containerId, preferredEnterTo);\n  // If multiple candidates returned, we need to find the first viable target since some may\n  // be empty containers which should be skipped.\n  return next.reduce(function (result, element) {\n    if (result) {\n      return result;\n    } else if (isContainer(element)) {\n      var nextId = isContainerNode(element) ? getContainerId(element) : element;\n      return getContainerFocusTarget(nextId);\n    }\n    return element;\n  }, null) || null;\n}\nfunction getContainerPreviousTarget(containerId, direction, destination) {\n  var config = getContainerConfig(containerId);\n  if (config && config.rememberSource && config.previous && config.previous.reverse === direction && config.previous.destination === destination) {\n    return config.previous.target;\n  }\n}\nfunction setContainerPreviousTarget(containerId, direction, destination, target) {\n  var config = getContainerConfig(containerId);\n  if (config && config.rememberSource) {\n    configureContainer(containerId, {\n      previous: {\n        target: target,\n        destination: destination,\n        reverse: reverseDirections[direction]\n      }\n    });\n  }\n}\n\n/**\n * Saves the last focused element into `lastFocusedKey` using a container-defined serialization\n * method configured in `lastFocusedPersist`.\n *\n * @param   {String}     containerId  ID of container\n *\n * @returns {undefined}\n * @memberof spotlight/container\n * @public\n */\nfunction persistLastFocusedElement(containerId) {\n  var cfg = getContainerConfig(containerId);\n  if (cfg) {\n    var lastFocusedElement = cfg.lastFocusedElement;\n    if (lastFocusedElement) {\n      var all = getDeepSpottableDescendants(containerId);\n      var lastFocusedKey = cfg.lastFocusedPersist(lastFocusedElement, all);\n\n      // store lastFocusedKey and release node reference to lastFocusedElement\n      cfg.lastFocusedKey = lastFocusedKey;\n      cfg.lastFocusedElement = null;\n    }\n  }\n}\n\n/**\n * Restores the last focused element from `lastFocusedKey` using a container-defined deserialization\n * method configured in `lastFocusedRestore`.\n *\n * @param   {String}     containerId  ID of container\n *\n * @returns {undefined}\n * @memberof spotlight/container\n * @public\n */\nfunction restoreLastFocusedElement(containerId) {\n  var cfg = getContainerConfig(containerId);\n  if (cfg && cfg.lastFocusedKey) {\n    var all = getDeepSpottableDescendants(containerId);\n    var lastFocusedElement = cfg.lastFocusedRestore(cfg.lastFocusedKey, all);\n\n    // restore lastFocusedElement and release lastFocusedKey\n    cfg.lastFocusedKey = null;\n    cfg.lastFocusedElement = lastFocusedElement;\n  }\n}\nfunction unmountContainer(containerId) {\n  var config = getContainerConfig(containerId);\n  if (config) {\n    config.active = false;\n    persistLastFocusedElement(containerId);\n    if (typeof config.defaultElement !== 'string') {\n      config.defaultElement = null;\n    }\n  }\n}\nfunction isActiveContainer(containerId) {\n  var config = getContainerConfig(containerId);\n  return config && config.active;\n}\n\n/**\n * Determines if the provided container has a configured restriction.\n *\n * By default, returns `true` for `'self-only'` restrictions but the type of restriction can be\n * passed as well.\n *\n * @param {String} containerId The container id\n * @param {String} [restrict] The container restriction defaulted to `'self-only'`\n * @returns {Boolean} `true` if the container has the specified restriction\n * @private\n */\nfunction isRestrictedContainer(containerId) {\n  var restrict = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'self-only';\n  var config = getContainerConfig(containerId);\n  return Boolean(config && config.restrict === restrict);\n}\n\n/**\n * Determines if `innerContainerId` is inside `outerContainerId`.\n *\n * @param {String} outerContainerId The outer container id\n * @param {String} innerContainerId The inner container id\n * @returns {Boolean} `true` if both containers exist and `innerContainerId` is within\n *                    `outerContainerId`\n * @private\n */\nfunction containsContainer(outerContainerId, innerContainerId) {\n  var outer = getContainerNode(outerContainerId);\n  var inner = getContainerNode(innerContainerId);\n  return Boolean(outer && inner && outer.contains(inner));\n}\n\n/**\n * Determines if `containerId` may become the active container.\n *\n * @param {String} containerId Spotlight container to which focus is leaving\n * @returns\t{Boolean} `true` if the active container can change to `containerId`\n * @private\n */\nfunction mayActivateContainer(containerId) {\n  var currentContainerId = getLastContainer();\n\n  // If the current container or its outer containers are restricted to 'self-only' and\n  // if the next container to be activated is not inside the restrict container,\n  // the next container should not be activated.\n  var currentContainerNode = getContainerNode(currentContainerId);\n  var restrictContainer = getContainersForNode(currentContainerNode).reduceRight(function (result, outerContainerId) {\n    return result || (isRestrictedContainer(outerContainerId) ? outerContainerId : null);\n  }, null);\n  return !restrictContainer || containsContainer(restrictContainer, containerId);\n}\nfunction getDefaultContainer() {\n  return isActiveContainer(_defaultContainerId) ? _defaultContainerId : '';\n}\nfunction setDefaultContainer(containerId) {\n  if (!containerId) {\n    _defaultContainerId = '';\n  } else if (!getContainerConfig(containerId)) {\n    throw new Error('Container \"' + containerId + '\" doesn\\'t exist!');\n  } else {\n    _defaultContainerId = containerId;\n  }\n}\nfunction getLastContainer() {\n  return isActiveContainer(_lastContainerId) ? _lastContainerId : '';\n}\nfunction setLastContainer(containerId) {\n  _lastContainerId = containerId || '';\n}\n\n/**\n * Updates the last container based on the current focus and target focus.\n *\n * @param {Node} current Currently focused node\n * @param {Node} target  Target node. May or may not be focusable\n * @memberof spotlight/container\n * @public\n */\nfunction setLastContainerFromTarget(current, target) {\n  var currentContainers = getNavigableContainersForNode(current);\n  var currentOuterContainerId = currentContainers[0];\n  var currentContainerConfig = getContainerConfig(currentOuterContainerId);\n  var targetContainers = getContainersForNode(target);\n  var targetInnerContainer = (0, _last[\"default\"])(targetContainers);\n  var sharedContainer = (0, _last[\"default\"])((0, _intersection[\"default\"])(currentContainers, targetContainers));\n  if (sharedContainer || !currentContainerConfig || currentContainerConfig.restrict !== 'self-only') {\n    // If the target shares a container with the current container stack or the current\n    // element isn't within a self-only container, use the target's nearest container\n    setLastContainer(targetInnerContainer);\n  } else {\n    // Otherwise, the target is not within the current container stack and the current\n    // element was within a 'self-only' container, use the current's outer container\n    setLastContainer(currentOuterContainerId);\n  }\n}\nfunction isWithinOverflowContainer(target) {\n  var containerIds = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getContainersForNode(target);\n  return containerIds\n  // ignore the root container id which is set to overflow by the root decorator\n  .filter(function (id) {\n    return id !== rootContainerId;\n  })\n  // get the config for each container\n  .map(getContainerConfig)\n  // and check if any are set to overflow\n  .some(function (config) {\n    return config && config.overflow;\n  });\n}\n\n/**\n * Notifies any affected containers that focus has left one of their children for another container\n *\n * @param {String} direction up/down/left/right\n * @param {Node} current currently focused element\n * @param {String[]} currentContainerIds Containers for current\n * @param {Node} next To be focused element\n * @param {String[]} nextContainerIds Containers for next\n * @private\n */\nfunction notifyLeaveContainer(direction, current, currentContainerIds, next, nextContainerIds) {\n  currentContainerIds.forEach(function (containerId) {\n    if (!nextContainerIds.includes(containerId)) {\n      var config = getContainerConfig(containerId);\n      if (config && config.onLeaveContainer) {\n        config.onLeaveContainer({\n          type: 'onLeaveContainer',\n          direction: direction,\n          target: current,\n          relatedTarget: next\n        });\n      }\n    }\n  });\n}\n\n/**\n * Notifies any containers that focus attempted to move but failed to find a target\n *\n * @param {String} direction up/down/left/right\n * @param {Node} current currently focused element\n * @param {String[]} currentContainerIds Containers for current\n * @private\n */\nfunction notifyLeaveContainerFail(direction, current, currentContainerIds) {\n  currentContainerIds.forEach(function (containerId) {\n    var config = getContainerConfig(containerId);\n    if (config && config.onLeaveContainerFail) {\n      config.onLeaveContainerFail({\n        type: 'onLeaveContainerFail',\n        direction: direction,\n        target: current\n      });\n    }\n  });\n}\n\n/**\n * Notifies any affected containers that one of their children has received focus.\n *\n * @param {String} direction up/down/left/right\n * @param {Node} previous Previously focused element\n * @param {String[]} previousContainerIds Containers for previous\n * @param {Node} current Currently focused element\n * @param {String[]} currentContainerIds Containers for current\n * @private\n */\nfunction notifyEnterContainer(direction, previous, previousContainerIds, current, currentContainerIds) {\n  currentContainerIds.forEach(function (containerId) {\n    if (!previousContainerIds.includes(containerId)) {\n      var config = getContainerConfig(containerId);\n      if (config && config.onEnterContainer) {\n        config.onEnterContainer({\n          type: 'onEnterContainer',\n          direction: direction,\n          target: current,\n          relatedTarget: previous\n        });\n      }\n    }\n  });\n}\n\n/**\n * Returns the closest container that wrap the element and has positionTargetOnFocus configured\n *\n * @param {Node} spotItem Focused element\n * @param {String[]} containerIds Ids for containers that wrap the spotItem element\n * @private\n */\nfunction getPositionTargetOnFocus(spotItem) {\n  var containerIds = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getContainersForNode(spotItem);\n  return containerIds.reduce(function (result, containerId) {\n    var _getContainerConfig;\n    if ((_getContainerConfig = getContainerConfig(containerId)) !== null && _getContainerConfig !== void 0 && _getContainerConfig.positionTargetOnFocus) {\n      result = getContainerNode(containerId);\n    }\n    return result;\n  }, spotItem);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}