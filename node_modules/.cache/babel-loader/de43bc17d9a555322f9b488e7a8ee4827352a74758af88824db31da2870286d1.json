{"ast":null,"code":"var _jsxFileName = \"/home/connected/enact-template/src/views/Main.js\";\nimport BodyText from '@enact/sandstone/BodyText';\nimport { Header, Panel } from '@enact/sandstone/Panels';\nimport TabLayout, { Tab } from '@enact/sandstone/TabLayout';\nimport { useMainState } from './MainState';\nimport SelectableVideoPlayer from './VideoPlayer';\nimport Scroller from '@enact/sandstone/Scroller';\nimport css from './Main.module.less';\nimport $L from '@enact/i18n/$L';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = props => {\n  const {\n    videoData\n  } = useMainState();\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const [activeTab, setActiveTab] = useState('watching');\n  useEffect(() => {\n    console.log(videoData);\n  }, [videoData]);\n  const handleVideoClick = video => {\n    setSelectedVideo(video);\n  };\n  const handleClosePlayer = () => {\n    setSelectedVideo(null);\n  };\n  const renderVideoCard = video => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.videoCard,\n    onClick: () => handleVideoClick(video),\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: video.thumbnail,\n      alt: video.title,\n      className: css.thumbnail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BodyText, {\n      className: css.videoTitle,\n      size: \"medium\",\n      children: video.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, video.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Panel, {\n    ...props,\n    children: [selectedVideo && /*#__PURE__*/_jsxDEV(SelectableVideoPlayer, {\n      video: selectedVideo,\n      onClose: handleClosePlayer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Scroller, {\n      direction: \"vertical\",\n      style: {\n        height: '100vh',\n        overflowY: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        title: $L('YouTube Clone')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BodyText, {\n        className: css.description,\n        size: \"large\",\n        children: $L('이곳은 유튜브 메인 화면을 모방한 샘플 애플리케이션입니다.')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TabLayout, {\n        selected: activeTab,\n        onSelect: tabId => {\n          console.log('Selected Tab:', tabId);\n          const selectedTabKey = ['watching', 'recommended', 'additional'][tabId.index];\n          setActiveTab(selectedTabKey);\n        },\n        orientation: \"horizontal\",\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          title: $L('시청 중인 영상'),\n          children: /*#__PURE__*/_jsxDEV(Scroller, {\n            direction: \"vertical\",\n            style: {\n              height: '400px',\n              overflowY: 'auto'\n            } // 각 탭의 스크롤 설정\n            ,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: css.videoGrid,\n              children: videoData.length > 0 ? videoData.slice(0, 5).map(renderVideoCard) : /*#__PURE__*/_jsxDEV(BodyText, {\n                children: '비디오가 없습니다.'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 102\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          title: $L('추천 영상'),\n          children: /*#__PURE__*/_jsxDEV(Scroller, {\n            direction: \"vertical\",\n            style: {\n              height: '400px',\n              overflowY: 'auto'\n            } // 각 탭의 스크롤 설정\n            ,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: css.videoGrid,\n              children: videoData.length > 5 ? videoData.slice(5, 10).map(renderVideoCard) : /*#__PURE__*/_jsxDEV(BodyText, {\n                children: '비디오가 없습니다.'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 103\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          title: $L('추가 섹션'),\n          children: /*#__PURE__*/_jsxDEV(Scroller, {\n            direction: \"vertical\",\n            style: {\n              height: '400px',\n              overflowY: 'auto'\n            } // 각 탭의 스크롤 설정\n            ,\n            children: /*#__PURE__*/_jsxDEV(BodyText, {\n              className: css.description,\n              children: Array(20).fill('이곳은 추가 섹션입니다. 더 많은 내용을 추가해 주세요.').map((text, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: text\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\nexport default Main;","map":{"version":3,"names":["BodyText","Header","Panel","TabLayout","Tab","useMainState","SelectableVideoPlayer","Scroller","css","$L","useState","useEffect","jsxDEV","_jsxDEV","Main","props","videoData","selectedVideo","setSelectedVideo","activeTab","setActiveTab","console","log","handleVideoClick","video","handleClosePlayer","renderVideoCard","className","videoCard","onClick","children","src","thumbnail","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","videoTitle","size","id","onClose","direction","style","height","overflowY","description","selected","onSelect","tabId","selectedTabKey","index","orientation","videoGrid","length","slice","map","Array","fill","text"],"sources":["/home/connected/enact-template/src/views/Main.js"],"sourcesContent":["import BodyText from '@enact/sandstone/BodyText';\nimport { Header, Panel } from '@enact/sandstone/Panels';\nimport TabLayout, { Tab } from '@enact/sandstone/TabLayout';\nimport { useMainState } from './MainState';\nimport SelectableVideoPlayer from './VideoPlayer';\nimport Scroller from '@enact/sandstone/Scroller';\nimport css from './Main.module.less';\nimport $L from '@enact/i18n/$L';\nimport { useState, useEffect } from 'react';\n\nconst Main = (props) => {\n    const { videoData } = useMainState();\n    const [selectedVideo, setSelectedVideo] = useState(null);\n    const [activeTab, setActiveTab] = useState('watching');\n\n    useEffect(() => {\n        console.log(videoData);\n    }, [videoData]);\n\n    const handleVideoClick = (video) => {\n        setSelectedVideo(video);\n    };\n\n    const handleClosePlayer = () => {\n        setSelectedVideo(null);\n    };\n\n    const renderVideoCard = (video) => (\n        <div key={video.id} className={css.videoCard} onClick={() => handleVideoClick(video)}>\n            <img src={video.thumbnail} alt={video.title} className={css.thumbnail} />\n            <BodyText className={css.videoTitle} size=\"medium\">\n                {video.title}\n            </BodyText>\n        </div>\n    );\n\n    return (\n        <Panel {...props}>\n            {selectedVideo && (\n                <SelectableVideoPlayer video={selectedVideo} onClose={handleClosePlayer} />\n            )}\n\n            <Scroller\n                direction=\"vertical\"\n                style={{ height: '100vh', overflowY: 'auto' }}\n            >\n                <Header title={$L('YouTube Clone')} />\n                <BodyText className={css.description} size=\"large\">\n                    {$L('이곳은 유튜브 메인 화면을 모방한 샘플 애플리케이션입니다.')}\n                </BodyText>\n\n                <TabLayout\n                    selected={activeTab}\n                    onSelect={(tabId) => {\n                        console.log('Selected Tab:', tabId);\n                        const selectedTabKey = ['watching', 'recommended', 'additional'][tabId.index];\n                        setActiveTab(selectedTabKey);\n                    }}\n                    orientation=\"horizontal\"\n                >\n                    <Tab title={$L('시청 중인 영상')}>\n                        <Scroller\n                            direction=\"vertical\"\n                            style={{ height: '400px', overflowY: 'auto' }} // 각 탭의 스크롤 설정\n                        >\n                            <div className={css.videoGrid}>\n                                {videoData.length > 0 ? videoData.slice(0, 5).map(renderVideoCard) : <BodyText>{'비디오가 없습니다.'}</BodyText>}\n                            </div>\n                        </Scroller>\n                    </Tab>\n                    <Tab title={$L('추천 영상')}>\n                        <Scroller\n                            direction=\"vertical\"\n                            style={{ height: '400px', overflowY: 'auto' }} // 각 탭의 스크롤 설정\n                        >\n                            <div className={css.videoGrid}>\n                                {videoData.length > 5 ? videoData.slice(5, 10).map(renderVideoCard) : <BodyText>{'비디오가 없습니다.'}</BodyText>}\n                            </div>\n                        </Scroller>\n                    </Tab>\n                    <Tab title={$L('추가 섹션')}>\n                        <Scroller\n                            direction=\"vertical\"\n                            style={{ height: '400px', overflowY: 'auto' }} // 각 탭의 스크롤 설정\n                        >\n                            <BodyText className={css.description}>\n                                {Array(20).fill('이곳은 추가 섹션입니다. 더 많은 내용을 추가해 주세요.').map((text, index) => (\n                                    <div key={index}>{text}</div>\n                                ))}\n                            </BodyText>\n                        </Scroller>\n                    </Tab>\n                </TabLayout>\n            </Scroller>\n        </Panel>\n    );\n};\n\nexport default Main;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}