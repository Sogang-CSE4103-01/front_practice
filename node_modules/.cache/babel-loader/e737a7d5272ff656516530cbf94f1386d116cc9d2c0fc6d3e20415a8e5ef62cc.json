{"ast":null,"code":"var _jsxFileName = \"/Users/meogyu/connected_front/src/views/Main.js\";\n/*\nimport Alert from '@enact/sandstone/Alert';\nimport BodyText from '@enact/sandstone/BodyText';\nimport Button from '@enact/sandstone/Button';\nimport {Header, Panel} from '@enact/sandstone/Panels';\nimport {useMainState} from './MainState';\nimport css from './Main.module.less';\nimport $L from '@enact/i18n/$L';\n\nconst Main = props => {\n\tconst {isPopupOpen, handlePopupClose, handleLaunchApp, videoData} = useMainState();\n\n\treturn (\n\t\t<Panel {...props}>\n\t\t\t<Header title={$L('YouTube Clone')} />\n\t\t\t<BodyText>{$L('이곳은 유튜브 메인 화면을 모방한 샘플 애플리케이션입니다.')}</BodyText>\n\t\t\t<div className={css.videoGrid}>\n\t\t\t\t{videoData.map(video => (\n\t\t\t\t\t<div key={video.id} className={css.videoCard}>\n\t\t\t\t\t\t<img src={video.thumbnail} alt={video.title} className={css.thumbnail} />\n\t\t\t\t\t\t<BodyText className={css.videoTitle}>{video.title}</BodyText>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t<Alert type=\"overlay\" open={isPopupOpen} onClose={handlePopupClose} closeButton={false}>\n\t\t\t\t<span>{$L('This is an alert message.')}</span>\n\t\t\t\t<buttons>\n\t\t\t\t\t<Button size=\"small\" className={css.buttonCell} onClick={handleLaunchApp}>\n\t\t\t\t\t\tLaunch\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button size=\"small\" className={css.buttonCell} onClick={handlePopupClose}>\n\t\t\t\t\t\t{$L('Close')}\n\t\t\t\t\t</Button>\n\t\t\t\t</buttons>\n\t\t\t</Alert>\n\t\t</Panel>\n\t);\n};\n\nexport default Main;\n*/\n\nimport BodyText from '@enact/sandstone/BodyText';\nimport { Header, Panel } from '@enact/sandstone/Panels';\nimport { useMainState } from './MainState';\nimport css from './Main.module.less';\nimport $L from '@enact/i18n/$L';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = props => {\n  const {\n    videoData\n  } = useMainState();\n\n  // 시청중인 영상과 추천 영상 데이터 분리\n  const watchingVideos = videoData.slice(0, 3); // 첫 3개 비디오\n  const recommendedVideos = videoData.slice(3, 9); // 다음 6개 비디오\n\n  return /*#__PURE__*/_jsxDEV(Panel, {\n    ...props,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: $L('YouTube Clone')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BodyText, {\n      className: css.description,\n      size: \"large\",\n      children: [\" \", $L('이곳은 유튜브 메인 화면을 모방한 샘플 애플리케이션입니다.')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.section,\n      children: [/*#__PURE__*/_jsxDEV(BodyText, {\n        className: css.sectionTitle,\n        size: \"large\",\n        children: [\" \", $L('시청중인 영상')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: css.videoGrid,\n        children: watchingVideos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: css.videoCard,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: video.thumbnail,\n            alt: video.title,\n            className: css.thumbnail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(BodyText, {\n            className: css.videoTitle,\n            size: \"medium\",\n            children: [\" \", video.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this)]\n        }, video.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.section,\n      children: [/*#__PURE__*/_jsxDEV(BodyText, {\n        className: css.sectionTitle,\n        size: \"large\",\n        children: [\" \", $L('추천 영상')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: css.videoGrid,\n        children: recommendedVideos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: css.videoCard,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: video.thumbnail,\n            alt: video.title,\n            className: css.thumbnail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(BodyText, {\n            className: css.videoTitle,\n            size: \"medium\",\n            children: [\" \", video.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this)]\n        }, video.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\nexport default Main;","map":{"version":3,"names":["BodyText","Header","Panel","useMainState","css","$L","jsxDEV","_jsxDEV","Main","props","videoData","watchingVideos","slice","recommendedVideos","children","title","fileName","_jsxFileName","lineNumber","columnNumber","className","description","size","section","sectionTitle","videoGrid","map","video","videoCard","src","thumbnail","alt","videoTitle","id"],"sources":["/Users/meogyu/connected_front/src/views/Main.js"],"sourcesContent":["/*\nimport Alert from '@enact/sandstone/Alert';\nimport BodyText from '@enact/sandstone/BodyText';\nimport Button from '@enact/sandstone/Button';\nimport {Header, Panel} from '@enact/sandstone/Panels';\nimport {useMainState} from './MainState';\nimport css from './Main.module.less';\nimport $L from '@enact/i18n/$L';\n\nconst Main = props => {\n\tconst {isPopupOpen, handlePopupClose, handleLaunchApp, videoData} = useMainState();\n\n\treturn (\n\t\t<Panel {...props}>\n\t\t\t<Header title={$L('YouTube Clone')} />\n\t\t\t<BodyText>{$L('이곳은 유튜브 메인 화면을 모방한 샘플 애플리케이션입니다.')}</BodyText>\n\t\t\t<div className={css.videoGrid}>\n\t\t\t\t{videoData.map(video => (\n\t\t\t\t\t<div key={video.id} className={css.videoCard}>\n\t\t\t\t\t\t<img src={video.thumbnail} alt={video.title} className={css.thumbnail} />\n\t\t\t\t\t\t<BodyText className={css.videoTitle}>{video.title}</BodyText>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t<Alert type=\"overlay\" open={isPopupOpen} onClose={handlePopupClose} closeButton={false}>\n\t\t\t\t<span>{$L('This is an alert message.')}</span>\n\t\t\t\t<buttons>\n\t\t\t\t\t<Button size=\"small\" className={css.buttonCell} onClick={handleLaunchApp}>\n\t\t\t\t\t\tLaunch\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button size=\"small\" className={css.buttonCell} onClick={handlePopupClose}>\n\t\t\t\t\t\t{$L('Close')}\n\t\t\t\t\t</Button>\n\t\t\t\t</buttons>\n\t\t\t</Alert>\n\t\t</Panel>\n\t);\n};\n\nexport default Main;\n*/\n\nimport BodyText from '@enact/sandstone/BodyText';\nimport { Header, Panel } from '@enact/sandstone/Panels';\nimport { useMainState } from './MainState';\nimport css from './Main.module.less';\nimport $L from '@enact/i18n/$L';\n\nconst Main = (props) => {\n    const { videoData } = useMainState();\n\n    // 시청중인 영상과 추천 영상 데이터 분리\n    const watchingVideos = videoData.slice(0, 3); // 첫 3개 비디오\n    const recommendedVideos = videoData.slice(3, 9); // 다음 6개 비디오\n\n    return (\n        <Panel {...props}>\n            <Header title={$L('YouTube Clone')} />\n            <BodyText className={css.description} size=\"large\"> {/* 여기에 size 속성 추가 */}\n                {$L('이곳은 유튜브 메인 화면을 모방한 샘플 애플리케이션입니다.')}\n            </BodyText>\n\n            {/* 시청중인 영상 섹션 */}\n            <div className={css.section}>\n                <BodyText className={css.sectionTitle} size=\"large\"> {/* 여기에 size 속성 추가 */}\n                    { $L('시청중인 영상') }\n                </BodyText>\n                <div className={css.videoGrid}>\n                    {watchingVideos.map(video => (\n                        <div key={video.id} className={css.videoCard}>\n                            <img src={video.thumbnail} alt={video.title} className={css.thumbnail} />\n                            <BodyText className={css.videoTitle} size=\"medium\"> {/* 여기에 size 속성 추가 */}\n                                {video.title}\n                            </BodyText>\n                        </div>\n                    ))}\n                </div>\n            </div>\n\n            {/* 추천 영상 섹션 */}\n            <div className={css.section}>\n                <BodyText className={css.sectionTitle} size=\"large\"> {/* 여기에 size 속성 추가 */}\n                    { $L('추천 영상') }\n                </BodyText>\n                <div className={css.videoGrid}>\n                    {recommendedVideos.map(video => (\n                        <div key={video.id} className={css.videoCard}>\n                            <img src={video.thumbnail} alt={video.title} className={css.thumbnail} />\n                            <BodyText className={css.videoTitle} size=\"medium\"> {/* 여기에 size 속성 추가 */}\n                                {video.title}\n                            </BodyText>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </Panel>\n    );\n};\n\nexport default Main;\n\n\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,QAAQ,MAAM,2BAA2B;AAChD,SAASC,MAAM,EAAEC,KAAK,QAAQ,yBAAyB;AACvD,SAASC,YAAY,QAAQ,aAAa;AAC1C,OAAOC,GAAG,MAAM,oBAAoB;AACpC,OAAOC,EAAE,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,IAAI,GAAIC,KAAK,IAAK;EACpB,MAAM;IAAEC;EAAU,CAAC,GAAGP,YAAY,CAAC,CAAC;;EAEpC;EACA,MAAMQ,cAAc,GAAGD,SAAS,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAMC,iBAAiB,GAAGH,SAAS,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;EAEjD,oBACIL,OAAA,CAACL,KAAK;IAAA,GAAKO,KAAK;IAAAK,QAAA,gBACZP,OAAA,CAACN,MAAM;MAACc,KAAK,EAAEV,EAAE,CAAC,eAAe;IAAE;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtCZ,OAAA,CAACP,QAAQ;MAACoB,SAAS,EAAEhB,GAAG,CAACiB,WAAY;MAACC,IAAI,EAAC,OAAO;MAAAR,QAAA,GAAC,GAAC,EAC/CT,EAAE,CAAC,kCAAkC,CAAC;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eAGXZ,OAAA;MAAKa,SAAS,EAAEhB,GAAG,CAACmB,OAAQ;MAAAT,QAAA,gBACxBP,OAAA,CAACP,QAAQ;QAACoB,SAAS,EAAEhB,GAAG,CAACoB,YAAa;QAACF,IAAI,EAAC,OAAO;QAAAR,QAAA,GAAC,GAAC,EAC/CT,EAAE,CAAC,SAAS,CAAC;MAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACXZ,OAAA;QAAKa,SAAS,EAAEhB,GAAG,CAACqB,SAAU;QAAAX,QAAA,EACzBH,cAAc,CAACe,GAAG,CAACC,KAAK,iBACrBpB,OAAA;UAAoBa,SAAS,EAAEhB,GAAG,CAACwB,SAAU;UAAAd,QAAA,gBACzCP,OAAA;YAAKsB,GAAG,EAAEF,KAAK,CAACG,SAAU;YAACC,GAAG,EAAEJ,KAAK,CAACZ,KAAM;YAACK,SAAS,EAAEhB,GAAG,CAAC0B;UAAU;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACzEZ,OAAA,CAACP,QAAQ;YAACoB,SAAS,EAAEhB,GAAG,CAAC4B,UAAW;YAACV,IAAI,EAAC,QAAQ;YAAAR,QAAA,GAAC,GAAC,EAC/Ca,KAAK,CAACZ,KAAK;UAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA,GAJLQ,KAAK,CAACM,EAAE;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKb,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAGNZ,OAAA;MAAKa,SAAS,EAAEhB,GAAG,CAACmB,OAAQ;MAAAT,QAAA,gBACxBP,OAAA,CAACP,QAAQ;QAACoB,SAAS,EAAEhB,GAAG,CAACoB,YAAa;QAACF,IAAI,EAAC,OAAO;QAAAR,QAAA,GAAC,GAAC,EAC/CT,EAAE,CAAC,OAAO,CAAC;MAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC,eACXZ,OAAA;QAAKa,SAAS,EAAEhB,GAAG,CAACqB,SAAU;QAAAX,QAAA,EACzBD,iBAAiB,CAACa,GAAG,CAACC,KAAK,iBACxBpB,OAAA;UAAoBa,SAAS,EAAEhB,GAAG,CAACwB,SAAU;UAAAd,QAAA,gBACzCP,OAAA;YAAKsB,GAAG,EAAEF,KAAK,CAACG,SAAU;YAACC,GAAG,EAAEJ,KAAK,CAACZ,KAAM;YAACK,SAAS,EAAEhB,GAAG,CAAC0B;UAAU;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACzEZ,OAAA,CAACP,QAAQ;YAACoB,SAAS,EAAEhB,GAAG,CAAC4B,UAAW;YAACV,IAAI,EAAC,QAAQ;YAAAR,QAAA,GAAC,GAAC,EAC/Ca,KAAK,CAACZ,KAAK;UAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA,GAJLQ,KAAK,CAACM,EAAE;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKb,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEhB,CAAC;AAED,eAAeX,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}