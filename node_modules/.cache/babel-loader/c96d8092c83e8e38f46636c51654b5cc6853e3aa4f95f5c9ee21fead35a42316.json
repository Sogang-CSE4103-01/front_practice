{"ast":null,"code":"var _jsxFileName = \"/Users/meogyu/connected_front/src/views/Login.js\";\n// src/views/Login.js\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { BodyText, Button, Input } from '@enact/sandstone';\nimport css from './Login.module.less'; // 스타일을 위한 CSS 모듈\nimport { useLoginHandlers } from '../App/AppState'; // 핸들러 가져오기\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  const history = useHistory();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // 핸들러 가져오기\n  const {\n    handleUsernameChange,\n    handlePasswordChange\n  } = useLoginHandlers(setUsername, setPassword);\n  const handleLogin = () => {\n    setLoading(true);\n    setError('');\n\n    // 로그인 로직 (여기서는 단순히 성공적으로 넘어가도록 설정)\n    if (username && password) {\n      history.push('/main');\n    } else {\n      setError('사용자 이름과 비밀번호를 입력하세요.');\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.loginContainer,\n    children: [/*#__PURE__*/_jsxDEV(BodyText, {\n      children: \"\\uB85C\\uADF8\\uC778 \\uD654\\uBA74\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      placeholder: \"\\uC0AC\\uC6A9\\uC790 \\uC774\\uB984\",\n      value: username,\n      onChange: handleUsernameChange // 이제 화살표 함수 없음\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"password\",\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n      value: password,\n      onChange: handlePasswordChange // 이제 화살표 함수 없음\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(BodyText, {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleLogin,\n      disabled: loading,\n      children: loading ? '로딩 중...' : '로그인'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\nexport default Login;","map":{"version":3,"names":["React","useState","useHistory","BodyText","Button","Input","css","useLoginHandlers","jsxDEV","_jsxDEV","Login","history","username","setUsername","password","setPassword","loading","setLoading","error","setError","handleUsernameChange","handlePasswordChange","handleLogin","push","className","loginContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","type","style","color","onClick","disabled"],"sources":["/Users/meogyu/connected_front/src/views/Login.js"],"sourcesContent":["// src/views/Login.js\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { BodyText, Button, Input } from '@enact/sandstone';\nimport css from './Login.module.less'; // 스타일을 위한 CSS 모듈\nimport { useLoginHandlers } from '../App/AppState'; // 핸들러 가져오기\n\nconst Login = () => {\n    const history = useHistory();\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState('');\n\n    // 핸들러 가져오기\n    const { handleUsernameChange, handlePasswordChange } = useLoginHandlers(setUsername, setPassword);\n\n    const handleLogin = () => {\n        setLoading(true);\n        setError('');\n\n        // 로그인 로직 (여기서는 단순히 성공적으로 넘어가도록 설정)\n        if (username && password) {\n            history.push('/main');\n        } else {\n            setError('사용자 이름과 비밀번호를 입력하세요.');\n        }\n\n        setLoading(false);\n    };\n\n    return (\n        <div className={css.loginContainer}>\n            <BodyText>로그인 화면</BodyText>\n            <Input \n                placeholder=\"사용자 이름\" \n                value={username} \n                onChange={handleUsernameChange} // 이제 화살표 함수 없음\n            />\n            <Input \n                type=\"password\" \n                placeholder=\"비밀번호\" \n                value={password} \n                onChange={handlePasswordChange} // 이제 화살표 함수 없음\n            />\n            {error && <BodyText style={{ color: 'red' }}>{error}</BodyText>}\n            <Button onClick={handleLogin} disabled={loading}>\n                {loading ? '로딩 중...' : '로그인'}\n            </Button>\n        </div>\n    );\n};\n\nexport default Login;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,QAAQ,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAC1D,OAAOC,GAAG,MAAM,qBAAqB,CAAC,CAAC;AACvC,SAASC,gBAAgB,QAAQ,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAChB,MAAMC,OAAO,GAAGT,UAAU,CAAC,CAAC;EAC5B,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAM;IAAEmB,oBAAoB;IAAEC;EAAqB,CAAC,GAAGd,gBAAgB,CAACM,WAAW,EAAEE,WAAW,CAAC;EAEjG,MAAMO,WAAW,GAAGA,CAAA,KAAM;IACtBL,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,EAAE,CAAC;;IAEZ;IACA,IAAIP,QAAQ,IAAIE,QAAQ,EAAE;MACtBH,OAAO,CAACY,IAAI,CAAC,OAAO,CAAC;IACzB,CAAC,MAAM;MACHJ,QAAQ,CAAC,sBAAsB,CAAC;IACpC;IAEAF,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,oBACIR,OAAA;IAAKe,SAAS,EAAElB,GAAG,CAACmB,cAAe;IAAAC,QAAA,gBAC/BjB,OAAA,CAACN,QAAQ;MAAAuB,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC,eAC3BrB,OAAA,CAACJ,KAAK;MACF0B,WAAW,EAAC,iCAAQ;MACpBC,KAAK,EAAEpB,QAAS;MAChBqB,QAAQ,EAAEb,oBAAqB,CAAC;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACFrB,OAAA,CAACJ,KAAK;MACF6B,IAAI,EAAC,UAAU;MACfH,WAAW,EAAC,0BAAM;MAClBC,KAAK,EAAElB,QAAS;MAChBmB,QAAQ,EAAEZ,oBAAqB,CAAC;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,EACDZ,KAAK,iBAAIT,OAAA,CAACN,QAAQ;MAACgC,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAV,QAAA,EAAER;IAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC,eAC/DrB,OAAA,CAACL,MAAM;MAACiC,OAAO,EAAEf,WAAY;MAACgB,QAAQ,EAAEtB,OAAQ;MAAAU,QAAA,EAC3CV,OAAO,GAAG,SAAS,GAAG;IAAK;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAED,eAAepB,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}