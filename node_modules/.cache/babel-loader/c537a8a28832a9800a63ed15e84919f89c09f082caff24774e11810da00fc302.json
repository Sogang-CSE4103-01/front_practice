{"ast":null,"code":"var _jsxFileName = \"/Users/meogyu/connected_front/src/views/Main.js\";\nimport React, { useState } from 'react'; // React 임포트 추가\nimport Alert from '@enact/sandstone/Alert';\nimport BodyText from '@enact/sandstone/BodyText';\nimport Button from '@enact/sandstone/Button';\nimport Input from '@enact/sandstone/Input';\nimport { Header, Panel } from '@enact/sandstone/Panels';\nimport { usePopup } from './MainState';\nimport css from './Main.module.less';\nimport $L from '@enact/i18n/$L';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = props => {\n  const {\n    isPopupOpen,\n    handlePopupOpen,\n    handlePopupClose\n  } = usePopup();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const handleLogin = () => {\n    if (username && password) {\n      console.log('Logging in with', username, password);\n      handlePopupClose(); // 로그인 후 팝업 닫기\n    } else {\n      // alert 대신 Enact Alert 컴포넌트 사용\n      //alert('Please enter both username and password.'); // 필요 시 수정\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Panel, {\n    ...props,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: $L('Login')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BodyText, {\n      children: $L('Please enter your credentials below:')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      placeholder: $L('Username'),\n      value: username,\n      onChange: e => setUsername(e.value),\n      className: css.inputField\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"password\",\n      placeholder: $L('Password'),\n      value: password,\n      onChange: e => setPassword(e.value),\n      className: css.inputField\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handlePopupOpen,\n      size: \"small\",\n      className: css.buttonCell,\n      children: $L('Login')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      type: \"overlay\",\n      open: isPopupOpen,\n      onClose: handlePopupClose,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: $L('This is an alert message.')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"buttons\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          className: css.buttonCell,\n          onClick: handleLogin,\n          children: $L('Confirm')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          className: css.buttonCell,\n          onClick: handlePopupClose,\n          children: $L('Cancel')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\nexport default Main;","map":{"version":3,"names":["React","useState","Alert","BodyText","Button","Input","Header","Panel","usePopup","css","$L","jsxDEV","_jsxDEV","Main","props","isPopupOpen","handlePopupOpen","handlePopupClose","username","setUsername","password","setPassword","handleLogin","console","log","children","title","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","className","inputField","type","onClick","size","buttonCell","open","onClose"],"sources":["/Users/meogyu/connected_front/src/views/Main.js"],"sourcesContent":["import React, { useState } from 'react'; // React 임포트 추가\nimport Alert from '@enact/sandstone/Alert';\nimport BodyText from '@enact/sandstone/BodyText';\nimport Button from '@enact/sandstone/Button';\nimport Input from '@enact/sandstone/Input';\nimport { Header, Panel } from '@enact/sandstone/Panels';\nimport { usePopup } from './MainState';\n\nimport css from './Main.module.less';\nimport $L from '@enact/i18n/$L';\n\nconst Main = (props) => {\n    const { isPopupOpen, handlePopupOpen, handlePopupClose } = usePopup();\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleLogin = () => {\n        if (username && password) {\n            console.log('Logging in with', username, password);\n            handlePopupClose(); // 로그인 후 팝업 닫기\n        } else {\n            // alert 대신 Enact Alert 컴포넌트 사용\n            //alert('Please enter both username and password.'); // 필요 시 수정\n        }\n    };\n\n    return (\n        <Panel {...props}>\n            <Header title={$L('Login')} />\n            <BodyText>{$L('Please enter your credentials below:')}</BodyText>\n            <Input\n                placeholder={$L('Username')}\n                value={username}\n                onChange={e => setUsername(e.value)}\n                className={css.inputField}\n            />\n            <Input\n                type=\"password\"\n                placeholder={$L('Password')}\n                value={password}\n                onChange={e => setPassword(e.value)}\n                className={css.inputField}\n            />\n            <Button onClick={handlePopupOpen} size=\"small\" className={css.buttonCell}>\n                {$L('Login')}\n            </Button>\n            <Alert type=\"overlay\" open={isPopupOpen} onClose={handlePopupClose}>\n                <span>{$L('This is an alert message.')}</span>\n                <buttons>\n                    <Button\n                        size=\"small\"\n                        className={css.buttonCell}\n                        onClick={handleLogin}\n                    >\n                        {$L('Confirm')}\n                    </Button>\n                    <Button\n                        size=\"small\"\n                        className={css.buttonCell}\n                        onClick={handlePopupClose}\n                    >\n                        {$L('Cancel')}\n                    </Button>\n                </buttons>\n            </Alert>\n        </Panel>\n    );\n};\n\nexport default Main;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO,CAAC,CAAC;AACzC,OAAOC,KAAK,MAAM,wBAAwB;AAC1C,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,KAAK,MAAM,wBAAwB;AAC1C,SAASC,MAAM,EAAEC,KAAK,QAAQ,yBAAyB;AACvD,SAASC,QAAQ,QAAQ,aAAa;AAEtC,OAAOC,GAAG,MAAM,oBAAoB;AACpC,OAAOC,EAAE,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,IAAI,GAAIC,KAAK,IAAK;EACpB,MAAM;IAAEC,WAAW;IAAEC,eAAe;IAAEC;EAAiB,CAAC,GAAGT,QAAQ,CAAC,CAAC;EACrE,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMqB,WAAW,GAAGA,CAAA,KAAM;IACtB,IAAIJ,QAAQ,IAAIE,QAAQ,EAAE;MACtBG,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEN,QAAQ,EAAEE,QAAQ,CAAC;MAClDH,gBAAgB,CAAC,CAAC,CAAC,CAAC;IACxB,CAAC,MAAM;MACH;MACA;IAAA;EAER,CAAC;EAED,oBACIL,OAAA,CAACL,KAAK;IAAA,GAAKO,KAAK;IAAAW,QAAA,gBACZb,OAAA,CAACN,MAAM;MAACoB,KAAK,EAAEhB,EAAE,CAAC,OAAO;IAAE;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9BlB,OAAA,CAACT,QAAQ;MAAAsB,QAAA,EAAEf,EAAE,CAAC,sCAAsC;IAAC;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC,eACjElB,OAAA,CAACP,KAAK;MACF0B,WAAW,EAAErB,EAAE,CAAC,UAAU,CAAE;MAC5BsB,KAAK,EAAEd,QAAS;MAChBe,QAAQ,EAAEC,CAAC,IAAIf,WAAW,CAACe,CAAC,CAACF,KAAK,CAAE;MACpCG,SAAS,EAAE1B,GAAG,CAAC2B;IAAW;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACFlB,OAAA,CAACP,KAAK;MACFgC,IAAI,EAAC,UAAU;MACfN,WAAW,EAAErB,EAAE,CAAC,UAAU,CAAE;MAC5BsB,KAAK,EAAEZ,QAAS;MAChBa,QAAQ,EAAEC,CAAC,IAAIb,WAAW,CAACa,CAAC,CAACF,KAAK,CAAE;MACpCG,SAAS,EAAE1B,GAAG,CAAC2B;IAAW;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACFlB,OAAA,CAACR,MAAM;MAACkC,OAAO,EAAEtB,eAAgB;MAACuB,IAAI,EAAC,OAAO;MAACJ,SAAS,EAAE1B,GAAG,CAAC+B,UAAW;MAAAf,QAAA,EACpEf,EAAE,CAAC,OAAO;IAAC;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eACTlB,OAAA,CAACV,KAAK;MAACmC,IAAI,EAAC,SAAS;MAACI,IAAI,EAAE1B,WAAY;MAAC2B,OAAO,EAAEzB,gBAAiB;MAAAQ,QAAA,gBAC/Db,OAAA;QAAAa,QAAA,EAAOf,EAAE,CAAC,2BAA2B;MAAC;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC9ClB,OAAA;QAAAa,QAAA,gBACIb,OAAA,CAACR,MAAM;UACHmC,IAAI,EAAC,OAAO;UACZJ,SAAS,EAAE1B,GAAG,CAAC+B,UAAW;UAC1BF,OAAO,EAAEhB,WAAY;UAAAG,QAAA,EAEpBf,EAAE,CAAC,SAAS;QAAC;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC,eACTlB,OAAA,CAACR,MAAM;UACHmC,IAAI,EAAC,OAAO;UACZJ,SAAS,EAAE1B,GAAG,CAAC+B,UAAW;UAC1BF,OAAO,EAAErB,gBAAiB;UAAAQ,QAAA,EAEzBf,EAAE,CAAC,QAAQ;QAAC;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEhB,CAAC;AAED,eAAejB,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}