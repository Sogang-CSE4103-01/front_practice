{"ast":null,"code":"var _jsxFileName = \"/Users/meogyu/connected_front/src/views/Main.js\";\n// src/views/Main.js\nimport BodyText from '@enact/sandstone/BodyText';\nimport { Header, Panel } from '@enact/sandstone/Panels';\nimport { useMainState } from './MainState';\nimport { useState, useCallback, useRef } from 'react';\nimport Button from '@enact/sandstone/Button';\nimport { MediaControls } from '@enact/sandstone/MediaPlayer';\nimport VideoPlayer from '@enact/sandstone/VideoPlayer';\nimport css from './Main.module.less';\nimport $L from '@enact/i18n/$L';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SelectableVideoPlayer = _ref => {\n  let {\n    video,\n    onClose\n  } = _ref;\n  const videoRef = useRef(null);\n  const [selection, setSelection] = useState([]);\n  const handleToggleSelection = useCallback(() => {\n    const {\n      currentTime\n    } = videoRef.current.getMediaState();\n    if (selection.length !== 1) {\n      setSelection([currentTime]);\n    } else {\n      setSelection([selection[0], currentTime].sort((a, b) => a - b));\n    }\n  }, [selection]);\n  const handleTimeUpdate = useCallback(() => {\n    if (selection.length === 2) {\n      const [selectionStart, selectionEnd] = selection;\n      const {\n        currentTime\n      } = videoRef.current.getMediaState();\n      if (currentTime > selectionEnd || currentTime < selectionStart) {\n        videoRef.current.seek(selectionStart);\n      }\n    }\n  }, [selection]);\n  const handleSeekOutsideSelection = useCallback(ev => {\n    ev.preventDefault();\n    if (selection.length === 2) {\n      const [selectionStart, selectionEnd] = selection;\n      const {\n        time: currentTime\n      } = ev;\n      if (currentTime < selectionStart) {\n        videoRef.current.seek(selectionStart);\n      } else if (currentTime > selectionEnd) {\n        videoRef.current.seek(selectionEnd);\n      }\n    }\n  }, [selection]);\n  const setVideo = video => {\n    videoRef.current = video;\n  };\n  const selecting = selection.length === 1;\n  return /*#__PURE__*/_jsxDEV(VideoPlayer, {\n    loop: true,\n    onSeekOutsideSelection: handleSeekOutsideSelection,\n    onTimeUpdate: handleTimeUpdate,\n    selection: selection,\n    ref: setVideo,\n    children: [/*#__PURE__*/_jsxDEV(MediaControls, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleToggleSelection,\n        selected: selecting,\n        children: selecting ? 'Play Loop' : 'Set End Time'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClose,\n        children: \"\\uB2EB\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"source\", {\n      src: video.src\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\nconst Main = props => {\n  const {\n    videoData\n  } = useMainState();\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const watchingVideos = videoData.slice(0, 3);\n  const recommendedVideos = videoData.slice(3, 9);\n  const handleVideoClick = video => {\n    setSelectedVideo(video);\n  };\n  const handleClosePlayer = () => {\n    setSelectedVideo(null);\n  };\n  const renderVideoCard = video => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.videoCard,\n    onClick: () => handleVideoClick(video),\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: video.thumbnail,\n      alt: video.title,\n      className: css.thumbnail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BodyText, {\n      className: css.videoTitle,\n      size: \"medium\",\n      children: video.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, video.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Panel, {\n    ...props,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: $L('YouTube Clone')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BodyText, {\n      className: css.description,\n      size: \"large\",\n      children: $L('이곳은 유튜브 메인 화면을 모방한 샘플 애플리케이션입니다.')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), selectedVideo && /*#__PURE__*/_jsxDEV(SelectableVideoPlayer, {\n      video: selectedVideo,\n      onClose: handleClosePlayer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.section,\n      children: [/*#__PURE__*/_jsxDEV(BodyText, {\n        className: css.sectionTitle,\n        size: \"large\",\n        children: $L('시청중인 영상')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: css.videoGrid,\n        children: watchingVideos.map(renderVideoCard)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.section,\n      children: [/*#__PURE__*/_jsxDEV(BodyText, {\n        className: css.sectionTitle,\n        size: \"large\",\n        children: $L('추천 영상')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: css.videoGrid,\n        children: recommendedVideos.map(renderVideoCard)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\nexport default Main;","map":{"version":3,"names":["BodyText","Header","Panel","useMainState","useState","useCallback","useRef","Button","MediaControls","VideoPlayer","css","$L","jsxDEV","_jsxDEV","SelectableVideoPlayer","_ref","video","onClose","videoRef","selection","setSelection","handleToggleSelection","currentTime","current","getMediaState","length","sort","a","b","handleTimeUpdate","selectionStart","selectionEnd","seek","handleSeekOutsideSelection","ev","preventDefault","time","setVideo","selecting","loop","onSeekOutsideSelection","onTimeUpdate","ref","children","onClick","selected","fileName","_jsxFileName","lineNumber","columnNumber","src","Main","props","videoData","selectedVideo","setSelectedVideo","watchingVideos","slice","recommendedVideos","handleVideoClick","handleClosePlayer","renderVideoCard","className","videoCard","thumbnail","alt","title","videoTitle","size","id","description","section","sectionTitle","videoGrid","map"],"sources":["/Users/meogyu/connected_front/src/views/Main.js"],"sourcesContent":["// src/views/Main.js\nimport BodyText from '@enact/sandstone/BodyText';\nimport { Header, Panel } from '@enact/sandstone/Panels';\nimport { useMainState } from './MainState';\nimport { useState, useCallback, useRef } from 'react';\nimport Button from '@enact/sandstone/Button';\nimport { MediaControls } from '@enact/sandstone/MediaPlayer';\nimport VideoPlayer from '@enact/sandstone/VideoPlayer';\nimport css from './Main.module.less';\nimport $L from '@enact/i18n/$L';\n\nconst SelectableVideoPlayer = ({ video, onClose }) => {\n    const videoRef = useRef(null);\n    const [selection, setSelection] = useState([]);\n\n    const handleToggleSelection = useCallback(() => {\n        const { currentTime } = videoRef.current.getMediaState();\n\n        if (selection.length !== 1) {\n            setSelection([currentTime]);\n        } else {\n            setSelection([selection[0], currentTime].sort((a, b) => a - b));\n        }\n    }, [selection]);\n\n    const handleTimeUpdate = useCallback(() => {\n        if (selection.length === 2) {\n            const [selectionStart, selectionEnd] = selection;\n            const { currentTime } = videoRef.current.getMediaState();\n\n            if (currentTime > selectionEnd || currentTime < selectionStart) {\n                videoRef.current.seek(selectionStart);\n            }\n        }\n    }, [selection]);\n\n    const handleSeekOutsideSelection = useCallback((ev) => {\n        ev.preventDefault();\n\n        if (selection.length === 2) {\n            const [selectionStart, selectionEnd] = selection;\n            const { time: currentTime } = ev;\n\n            if (currentTime < selectionStart) {\n                videoRef.current.seek(selectionStart);\n            } else if (currentTime > selectionEnd) {\n                videoRef.current.seek(selectionEnd);\n            }\n        }\n    }, [selection]);\n\n    const setVideo = (video) => {\n        videoRef.current = video;\n    };\n\n    const selecting = selection.length === 1;\n\n    return (\n        <VideoPlayer\n            loop\n            onSeekOutsideSelection={handleSeekOutsideSelection}\n            onTimeUpdate={handleTimeUpdate}\n            selection={selection}\n            ref={setVideo}\n        >\n            <MediaControls>\n                <Button onClick={handleToggleSelection} selected={selecting}>\n                    {selecting ? 'Play Loop' : 'Set End Time'}\n                </Button>\n                <Button onClick={onClose}>닫기</Button>\n            </MediaControls>\n            <source src={video.src} />\n        </VideoPlayer>\n    );\n};\n\nconst Main = (props) => {\n    const { videoData } = useMainState();\n    const [selectedVideo, setSelectedVideo] = useState(null);\n\n    const watchingVideos = videoData.slice(0, 3);\n    const recommendedVideos = videoData.slice(3, 9);\n\n    const handleVideoClick = (video) => {\n        setSelectedVideo(video);\n    };\n\n    const handleClosePlayer = () => {\n        setSelectedVideo(null);\n    };\n\n    const renderVideoCard = (video) => (\n        <div key={video.id} className={css.videoCard} onClick={() => handleVideoClick(video)}>\n            <img src={video.thumbnail} alt={video.title} className={css.thumbnail} />\n            <BodyText className={css.videoTitle} size=\"medium\">\n                {video.title}\n            </BodyText>\n        </div>\n    );\n\n    return (\n        <Panel {...props}>\n            <Header title={$L('YouTube Clone')} />\n            <BodyText className={css.description} size=\"large\">\n                {$L('이곳은 유튜브 메인 화면을 모방한 샘플 애플리케이션입니다.')}\n            </BodyText>\n\n            {selectedVideo && (\n                <SelectableVideoPlayer video={selectedVideo} onClose={handleClosePlayer} />\n            )}\n\n            <div className={css.section}>\n                <BodyText className={css.sectionTitle} size=\"large\">\n                    {$L('시청중인 영상')}\n                </BodyText>\n                <div className={css.videoGrid}>\n                    {watchingVideos.map(renderVideoCard)}\n                </div>\n            </div>\n\n            <div className={css.section}>\n                <BodyText className={css.sectionTitle} size=\"large\">\n                    {$L('추천 영상')}\n                </BodyText>\n                <div className={css.videoGrid}>\n                    {recommendedVideos.map(renderVideoCard)}\n                </div>\n            </div>\n        </Panel>\n    );\n};\n\nexport default Main;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}