{"ast":null,"code":"var _jsxFileName = \"/Users/meogyu/connected_front/src/App/App.js\";\nimport { useState } from 'react';\nimport ThemeDecorator from '@enact/sandstone/ThemeDecorator';\nimport Panels from '@enact/sandstone/Panels';\n//import Main from '../views/Main';\nimport { useBackHandler, useCloseHandler, useDocumentEvent } from './AppState';\nimport { isDevServe } from '../libs/utils';\nimport Login from '../views/Login';\n\n/* istanbul ignore next*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nif (isDevServe()) {\n  window.webOSSystem = {\n    highContrast: 'off',\n    close: () => {},\n    platformBack: () => {},\n    PmLogString: () => {},\n    screenOrientation: 'landscape',\n    setWindowOrientation: () => {}\n  };\n}\nconst App = props => {\n  const [skinVariants, setSkinVariants] = useState({\n    highContrast: false\n  });\n  const handleBack = useBackHandler();\n  const handleClose = useCloseHandler();\n  useDocumentEvent(setSkinVariants);\n  return /*#__PURE__*/_jsxDEV(Panel, {\n    ...props,\n    children: isLoginOpen ?\n    /*#__PURE__*/\n    // 로그인 창이 열리면 로그인 컴포넌트만 렌더링\n    _jsxDEV(Login, {\n      isOpen: isLoginOpen,\n      onClose: handleLoginClose,\n      onSubmit: handleLogin,\n      handleUsernameChange: handleUsernameChange,\n      handlePasswordChange: handlePasswordChange,\n      username: username,\n      password: password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this) :\n    /*#__PURE__*/\n    // 로그인 창이 닫힌 경우 메인 화면 표시\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        title: $L('Enact Template')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(BodyText, {\n        children: $L('This is a main page of sample application.')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onOpenAlert,\n        size: \"small\",\n        className: css.buttonCell,\n        children: $L('Open Alert')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        type: \"overlay\",\n        open: isPopupOpen,\n        onClose: onCloseAlert,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: $L('This is an alert message.')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"buttons\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            className: css.buttonCell,\n            onClick: onLaunchApp,\n            children: \"Launch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            className: css.buttonCell,\n            onClick: onCloseAlert,\n            children: $L('Close')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleLoginOpen,\n        size: \"small\",\n        className: css.buttonCell,\n        children: $L('Login')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 3\n  }, this);\n};\nexport default ThemeDecorator(App);","map":{"version":3,"names":["useState","ThemeDecorator","Panels","useBackHandler","useCloseHandler","useDocumentEvent","isDevServe","Login","jsxDEV","_jsxDEV","Fragment","_Fragment","window","webOSSystem","highContrast","close","platformBack","PmLogString","screenOrientation","setWindowOrientation","App","props","skinVariants","setSkinVariants","handleBack","handleClose","Panel","children","isLoginOpen","isOpen","onClose","handleLoginClose","onSubmit","handleLogin","handleUsernameChange","handlePasswordChange","username","password","fileName","_jsxFileName","lineNumber","columnNumber","Header","title","$L","BodyText","Button","onClick","onOpenAlert","size","className","css","buttonCell","Alert","type","open","isPopupOpen","onCloseAlert","onLaunchApp","handleLoginOpen"],"sources":["/Users/meogyu/connected_front/src/App/App.js"],"sourcesContent":["import {useState} from 'react';\nimport ThemeDecorator from '@enact/sandstone/ThemeDecorator';\nimport Panels from '@enact/sandstone/Panels';\n//import Main from '../views/Main';\nimport {useBackHandler, useCloseHandler, useDocumentEvent} from './AppState';\nimport {isDevServe} from '../libs/utils';\nimport Login from '../views/Login';\n\n/* istanbul ignore next*/\nif (isDevServe()) {\n\twindow.webOSSystem = {\n\t\thighContrast: 'off',\n\t\tclose: () => {},\n\t\tplatformBack: () => {},\n\t\tPmLogString: () => {},\n\t\tscreenOrientation: 'landscape',\n\t\tsetWindowOrientation: () => {}\n\t};\n}\n\nconst App = props => {\n\tconst [skinVariants, setSkinVariants] = useState({highContrast: false});\n\tconst handleBack = useBackHandler();\n\tconst handleClose = useCloseHandler();\n\tuseDocumentEvent(setSkinVariants);\n\n\treturn (\n\t\t<Panel {...props}>\n\t\t\t{isLoginOpen ? (\n\t\t\t\t// 로그인 창이 열리면 로그인 컴포넌트만 렌더링\n\t\t\t\t<Login\n\t\t\t\t\tisOpen={isLoginOpen}\n\t\t\t\t\tonClose={handleLoginClose}\n\t\t\t\t\tonSubmit={handleLogin}\n\t\t\t\t\thandleUsernameChange={handleUsernameChange}\n\t\t\t\t\thandlePasswordChange={handlePasswordChange}\n\t\t\t\t\tusername={username}\n\t\t\t\t\tpassword={password}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t// 로그인 창이 닫힌 경우 메인 화면 표시\n\t\t\t\t<>\n\t\t\t\t\t<Header title={$L('Enact Template')} />\n\t\t\t\t\t<BodyText>{$L('This is a main page of sample application.')}</BodyText>\n\n\t\t\t\t\t{/* Alert Popup */}\n\t\t\t\t\t<Button onClick={onOpenAlert} size=\"small\" className={css.buttonCell}>\n\t\t\t\t\t\t{$L('Open Alert')}\n\t\t\t\t\t</Button>\n\t\t\t\t\t{/*<BodyText>{`procStat : ${JSON.stringify(procStat)}`}</BodyText>*/}\n\t\t\t\t\t<Alert type=\"overlay\" open={isPopupOpen} onClose={onCloseAlert}>\n\t\t\t\t\t\t<span>{$L('This is an alert message.')}</span>\n\t\t\t\t\t\t<buttons>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\tclassName={css.buttonCell}\n\t\t\t\t\t\t\t\tonClick={onLaunchApp}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tLaunch\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\tclassName={css.buttonCell}\n\t\t\t\t\t\t\t\tonClick={onCloseAlert}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{$L('Close')}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</buttons>\n\t\t\t\t\t</Alert>\n\n\t\t\t\t\t{/* Login Button */}\n\t\t\t\t\t<Button onClick={handleLoginOpen} size=\"small\" className={css.buttonCell}>\n\t\t\t\t\t\t{$L('Login')}\n\t\t\t\t\t</Button>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</Panel>\n\t);\n};\n\nexport default ThemeDecorator(App);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}