{"ast":null,"code":"var _jsxFileName = \"/Users/meogyu/connected_front/src/views/Login.js\";\nimport { useState } from 'react';\nimport BodyText from '@enact/sandstone/BodyText';\nimport { Header, Panel } from '@enact/sandstone/Panels';\nimport { Input } from '@enact/sandstone/Input'; // Enact Input 컴포넌트\nimport { Button } from '@enact/sandstone/Button'; // Enact Button 컴포넌트\nimport css from './Login.module.less';\nimport $L from '@enact/i18n/$L';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = _ref => {\n  let {\n    handleLogin\n  } = _ref;\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    if (name === 'username') {\n      setUsername(value);\n    } else if (name === 'password') {\n      setPassword(value);\n    }\n  };\n  const login = () => {\n    if (username && password) {\n      handleLogin(); // 로그인 성공 처리\n    } else {\n      setErrorMessage('사용자 이름과 비밀번호를 입력하세요.'); // 에러 메시지 설정\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Panel, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: $L('로그인')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.loginContainer,\n      children: [/*#__PURE__*/_jsxDEV(BodyText, {\n        children: $L('로그인하여 계속 진행하세요.')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(BodyText, {\n        className: css.errorMessage,\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 34\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        name: \"username\",\n        placeholder: $L('사용자 이름'),\n        value: username,\n        onChange: handleInputChange,\n        className: css.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        name: \"password\",\n        placeholder: $L('비밀번호'),\n        value: password,\n        onChange: handleInputChange,\n        className: css.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: login,\n        className: css.loginButton,\n        children: $L('로그인')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\nexport default Login;","map":{"version":3,"names":["useState","BodyText","Header","Panel","Input","Button","css","$L","jsxDEV","_jsxDEV","Login","_ref","handleLogin","username","setUsername","password","setPassword","errorMessage","setErrorMessage","handleInputChange","event","name","value","target","login","children","title","fileName","_jsxFileName","lineNumber","columnNumber","className","loginContainer","type","placeholder","onChange","input","onClick","loginButton"],"sources":["/Users/meogyu/connected_front/src/views/Login.js"],"sourcesContent":["import { useState } from 'react';\nimport BodyText from '@enact/sandstone/BodyText';\nimport { Header, Panel } from '@enact/sandstone/Panels';\nimport { Input } from '@enact/sandstone/Input'; // Enact Input 컴포넌트\nimport { Button } from '@enact/sandstone/Button'; // Enact Button 컴포넌트\nimport css from './Login.module.less';\nimport $L from '@enact/i18n/$L';\n\nconst Login = ({ handleLogin }) => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const handleInputChange = (event) => {\n        const { name, value } = event.target;\n        if (name === 'username') {\n            setUsername(value);\n        } else if (name === 'password') {\n            setPassword(value);\n        }\n    };\n\n    const login = () => {\n        if (username && password) {\n            handleLogin(); // 로그인 성공 처리\n        } else {\n            setErrorMessage('사용자 이름과 비밀번호를 입력하세요.'); // 에러 메시지 설정\n        }\n    };\n\n    return (\n        <Panel>\n            <Header title={$L('로그인')} />\n            <div className={css.loginContainer}>\n                <BodyText>{$L('로그인하여 계속 진행하세요.')}</BodyText>\n                {errorMessage && <BodyText className={css.errorMessage}>{errorMessage}</BodyText>} {/* 에러 메시지 표시 */}\n                <Input\n                    type=\"text\"\n                    name=\"username\"\n                    placeholder={$L('사용자 이름')}\n                    value={username}\n                    onChange={handleInputChange}\n                    className={css.input}\n                />\n                <Input\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder={$L('비밀번호')}\n                    value={password}\n                    onChange={handleInputChange}\n                    className={css.input}\n                />\n                <Button onClick={login} className={css.loginButton}>\n                    {$L('로그인')}\n                </Button>\n            </div>\n        </Panel>\n    );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}