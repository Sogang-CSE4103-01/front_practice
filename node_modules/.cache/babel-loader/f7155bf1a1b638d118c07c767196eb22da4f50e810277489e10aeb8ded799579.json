{"ast":null,"code":"var _jsxFileName = \"/Users/meogyu/connected_front/src/views/Main.js\";\nimport { useHistory } from 'react-router-dom';\n\n// ... 기존 코드 ...\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = props => {\n  const {\n    videoData\n  } = useMainState();\n  const history = useHistory();\n  const watchingVideos = videoData.slice(0, 3);\n  const recommendedVideos = videoData.slice(3, 9);\n  const handleVideoClick = videoId => {\n    history.push(`/video/${videoId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(Panel, {\n    ...props,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: $L('YouTube Clone')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BodyText, {\n      className: css.description,\n      size: \"large\",\n      children: $L('이곳은 유튜브 메인 화면을 모방한 샘플 애플리케이션입니다.')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.section,\n      children: [/*#__PURE__*/_jsxDEV(BodyText, {\n        className: css.sectionTitle,\n        size: \"large\",\n        children: $L('시청중인 영상')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: css.videoGrid,\n        children: watchingVideos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: css.videoCard,\n          onClick: () => handleVideoClick(video.id),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: video.thumbnail,\n            alt: video.title,\n            className: css.thumbnail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(BodyText, {\n            className: css.videoTitle,\n            size: \"medium\",\n            children: video.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }, this)]\n        }, video.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.section,\n      children: [/*#__PURE__*/_jsxDEV(BodyText, {\n        className: css.sectionTitle,\n        size: \"large\",\n        children: $L('추천 영상')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: css.videoGrid,\n        children: recommendedVideos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: css.videoCard,\n          onClick: () => handleVideoClick(video.id),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: video.thumbnail,\n            alt: video.title,\n            className: css.thumbnail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(BodyText, {\n            className: css.videoTitle,\n            size: \"medium\",\n            children: video.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this)]\n        }, video.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"names":["useHistory","jsxDEV","_jsxDEV","Main","props","videoData","useMainState","history","watchingVideos","slice","recommendedVideos","handleVideoClick","videoId","push","Panel","children","Header","title","$L","fileName","_jsxFileName","lineNumber","columnNumber","BodyText","className","css","description","size","section","sectionTitle","videoGrid","map","video","videoCard","onClick","id","src","thumbnail","alt","videoTitle"],"sources":["/Users/meogyu/connected_front/src/views/Main.js"],"sourcesContent":["import { useHistory } from 'react-router-dom';\n\n// ... 기존 코드 ...\n\nconst Main = (props) => {\n    const { videoData } = useMainState();\n    const history = useHistory();\n\n    const watchingVideos = videoData.slice(0, 3);\n    const recommendedVideos = videoData.slice(3, 9);\n\n    const handleVideoClick = (videoId) => {\n        history.push(`/video/${videoId}`);\n    };\n\n    return (\n        <Panel {...props}>\n            <Header title={$L('YouTube Clone')} />\n            <BodyText className={css.description} size=\"large\">\n                {$L('이곳은 유튜브 메인 화면을 모방한 샘플 애플리케이션입니다.')}\n            </BodyText>\n\n            {/* 시청중인 영상 섹션 */}\n            <div className={css.section}>\n                <BodyText className={css.sectionTitle} size=\"large\">\n                    {$L('시청중인 영상')}\n                </BodyText>\n                <div className={css.videoGrid}>\n                    {watchingVideos.map(video => (\n                        <div key={video.id} className={css.videoCard} onClick={() => handleVideoClick(video.id)}>\n                            <img src={video.thumbnail} alt={video.title} className={css.thumbnail} />\n                            <BodyText className={css.videoTitle} size=\"medium\">\n                                {video.title}\n                            </BodyText>\n                        </div>\n                    ))}\n                </div>\n            </div>\n\n            {/* 추천 영상 섹션 */}\n            <div className={css.section}>\n                <BodyText className={css.sectionTitle} size=\"large\">\n                    {$L('추천 영상')}\n                </BodyText>\n                <div className={css.videoGrid}>\n                    {recommendedVideos.map(video => (\n                        <div key={video.id} className={css.videoCard} onClick={() => handleVideoClick(video.id)}>\n                            <img src={video.thumbnail} alt={video.title} className={css.thumbnail} />\n                            <BodyText className={css.videoTitle} size=\"medium\">\n                                {video.title}\n                            </BodyText>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </Panel>\n    );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}