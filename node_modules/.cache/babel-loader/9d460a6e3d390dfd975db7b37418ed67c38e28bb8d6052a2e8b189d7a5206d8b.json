{"ast":null,"code":"// src/views/SignupState.js\n/*\nimport { useState, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom'; // useHistory를 useNavigate로 변경\nimport debugLog from '../libs/log';\n\nexport const useSignupState = () => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const navigate = useNavigate(); // 페이지 이동을 위한 navigate 객체\n\n    const handleInputChange = useCallback((event) => {\n        const { name, value } = event.target;\n        if (name === 'username') {\n            setUsername(value); // 사용자 이름 상태 업데이트\n        } else if (name === 'password') {\n            setPassword(value); // 비밀번호 상태 업데이트\n        }\n    }, []);\n\n    const handleSignup = useCallback(() => {\n        debugLog('회원가입 버튼 클릭'); // 디버그 로그 출력\n        navigate('/login'); // 회원가입 후 로그인 화면으로 이동 (필요에 따라 변경 가능)\n    }, [navigate]);\n\n    return { username, password, handleInputChange, handleSignup };\n};*/\n\nimport { useState, useCallback } from 'react';\nimport debugLog from '../libs/log';\nexport const useSignupState = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const handleUsernameChange = useCallback(e => {\n    if (e && e.value !== undefined) {\n      setUsername(e.value);\n    } else {\n      console.warn('handleUsernameChange: Invalid event object', e);\n    }\n  }, []);\n  const handlePasswordChange = useCallback(e => {\n    if (e && e.value !== undefined) {\n      setPassword(e.value);\n    } else {\n      console.warn('handlePasswordChange: Invalid event object', e);\n    }\n  }, []);\n  const handleSignUp = useCallback(async () => {\n    debugLog('Attempting login', {\n      username,\n      password\n    });\n    try {\n      const response = await fetch(`http://localhost:8080/api/login?username=${username}&password=${password}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        throw new Error('Login failed');\n      }\n      const data = await response.json();\n      debugLog('Login successful', data);\n      handleLoginClose();\n    } catch (error) {\n      debugLog('Login failed', error.message);\n    }\n  }, [username, password, handleLoginClose]);\n};","map":{"version":3,"names":["useState","useCallback","debugLog","useSignupState","username","setUsername","password","setPassword","handleUsernameChange","e","value","undefined","console","warn","handlePasswordChange","handleSignUp","response","fetch","method","headers","credentials","ok","Error","data","json","handleLoginClose","error","message"],"sources":["/home/connected/enact-template/src/views/SignupState.js"],"sourcesContent":["// src/views/SignupState.js\n/*\nimport { useState, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom'; // useHistory를 useNavigate로 변경\nimport debugLog from '../libs/log';\n\nexport const useSignupState = () => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const navigate = useNavigate(); // 페이지 이동을 위한 navigate 객체\n\n    const handleInputChange = useCallback((event) => {\n        const { name, value } = event.target;\n        if (name === 'username') {\n            setUsername(value); // 사용자 이름 상태 업데이트\n        } else if (name === 'password') {\n            setPassword(value); // 비밀번호 상태 업데이트\n        }\n    }, []);\n\n    const handleSignup = useCallback(() => {\n        debugLog('회원가입 버튼 클릭'); // 디버그 로그 출력\n        navigate('/login'); // 회원가입 후 로그인 화면으로 이동 (필요에 따라 변경 가능)\n    }, [navigate]);\n\n    return { username, password, handleInputChange, handleSignup };\n};*/\n\nimport { useState, useCallback } from 'react';\nimport debugLog from '../libs/log';\n\n\nexport const useSignupState = () => {\n    const [username, setUsername] = useState('');\n\tconst [password, setPassword] = useState('');\n\n    const handleUsernameChange = useCallback((e) => {\n\t\tif (e && e.value !== undefined) {\n\t\t\tsetUsername(e.value);\n\t\t} else {\n\t\t\tconsole.warn('handleUsernameChange: Invalid event object', e);\n\t\t}\n\t}, []);\n\n    const handlePasswordChange = useCallback((e) => {\n\t\tif (e && e.value !== undefined) {\n\t\t\tsetPassword(e.value);\n\t\t} else {\n\t\t\tconsole.warn('handlePasswordChange: Invalid event object', e);\n\t\t}\n\t}, []);\n\n    const handleSignUp = useCallback(async () => {\n\t\tdebugLog('Attempting login', { username, password });\n\t\ttry {\n\t\t\tconst response = await fetch(`http://localhost:8080/api/login?username=${username}&password=${password}`, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t\tcredentials: 'include',\n\t\t\t});\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error('Login failed');\n\t\t\t}\n\t\t\tconst data = await response.json();\n\t\t\tdebugLog('Login successful', data);\n\t\t\thandleLoginClose();\n\t\t} catch (error) {\n\t\t\tdebugLog('Login failed', error.message);\n\t\t}\n\t}, [username, password, handleLoginClose]);\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7C,OAAOC,QAAQ,MAAM,aAAa;AAGlC,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAChC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC/C,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEzC,MAAMQ,oBAAoB,GAAGP,WAAW,CAAEQ,CAAC,IAAK;IAClD,IAAIA,CAAC,IAAIA,CAAC,CAACC,KAAK,KAAKC,SAAS,EAAE;MAC/BN,WAAW,CAACI,CAAC,CAACC,KAAK,CAAC;IACrB,CAAC,MAAM;MACNE,OAAO,CAACC,IAAI,CAAC,4CAA4C,EAAEJ,CAAC,CAAC;IAC9D;EACD,CAAC,EAAE,EAAE,CAAC;EAEH,MAAMK,oBAAoB,GAAGb,WAAW,CAAEQ,CAAC,IAAK;IAClD,IAAIA,CAAC,IAAIA,CAAC,CAACC,KAAK,KAAKC,SAAS,EAAE;MAC/BJ,WAAW,CAACE,CAAC,CAACC,KAAK,CAAC;IACrB,CAAC,MAAM;MACNE,OAAO,CAACC,IAAI,CAAC,4CAA4C,EAAEJ,CAAC,CAAC;IAC9D;EACD,CAAC,EAAE,EAAE,CAAC;EAEH,MAAMM,YAAY,GAAGd,WAAW,CAAC,YAAY;IAC/CC,QAAQ,CAAC,kBAAkB,EAAE;MAAEE,QAAQ;MAAEE;IAAS,CAAC,CAAC;IACpD,IAAI;MACH,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAE,4CAA2Cb,QAAS,aAAYE,QAAS,EAAC,EAAE;QACzGY,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACR,cAAc,EAAE;QACjB,CAAC;QACDC,WAAW,EAAE;MACd,CAAC,CAAC;MACF,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;QACjB,MAAM,IAAIC,KAAK,CAAC,cAAc,CAAC;MAChC;MACA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClCtB,QAAQ,CAAC,kBAAkB,EAAEqB,IAAI,CAAC;MAClCE,gBAAgB,CAAC,CAAC;IACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACfxB,QAAQ,CAAC,cAAc,EAAEwB,KAAK,CAACC,OAAO,CAAC;IACxC;EACD,CAAC,EAAE,CAACvB,QAAQ,EAAEE,QAAQ,EAAEmB,gBAAgB,CAAC,CAAC;AAC3C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}