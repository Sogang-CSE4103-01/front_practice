{"ast":null,"code":"import { useCallback, useEffect, useState } from 'react';\nimport { sam } from '../libs/services';\nimport debugLog from '../libs/log';\n\n// 비디오 정보를 관리하기 위한 데이터 타입\nexport const useMainState = () => {\n  const [isPopupOpen, openPopup] = useState(false);\n  const [videoData, setVideoData] = useState([]);\n  const [loading, setLoading] = useState(true); // 로딩 상태 추가\n\n  // 서버에서 비디오 데이터를 가져오는 함수\n  const fetchVideoData = async () => {\n    try {\n      const response = await fetch('https://your-api-endpoint.com/videos'); // API 엔드포인트\n      const data = await response.json();\n      setVideoData(data); // 받아온 데이터 설정\n    } catch (error) {\n      console.error('Error fetching video data:', error);\n    } finally {\n      setLoading(false); // 데이터 로딩 완료\n    }\n  };\n  useEffect(() => {\n    fetchVideoData(); // 컴포넌트 마운트 시 데이터 가져오기\n  }, []);\n  const handleLaunchApp = useCallback(async () => {\n    const result = await sam({\n      method: 'launch',\n      parameters: {\n        id: 'com.webos.app.self-diagnosis'\n      }\n    });\n    debugLog('SAM', result);\n    openPopup(false);\n  }, []);\n  const handlePopupOpen = useCallback(() => {\n    openPopup(true);\n  }, []);\n  const handlePopupClose = useCallback(() => {\n    openPopup(false);\n  }, []);\n  return {\n    isPopupOpen,\n    handlePopupOpen,\n    handlePopupClose,\n    handleLaunchApp,\n    videoData,\n    loading,\n    // 로딩 상태 반환\n    setVideoData\n  };\n};","map":{"version":3,"names":["useCallback","useEffect","useState","sam","debugLog","useMainState","isPopupOpen","openPopup","videoData","setVideoData","loading","setLoading","fetchVideoData","response","fetch","data","json","error","console","handleLaunchApp","result","method","parameters","id","handlePopupOpen","handlePopupClose"],"sources":["/Users/meogyu/connected_front/src/views/MainState.js"],"sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport { sam } from '../libs/services';\nimport debugLog from '../libs/log';\n\n// 비디오 정보를 관리하기 위한 데이터 타입\nexport const useMainState = () => {\n\tconst [isPopupOpen, openPopup] = useState(false);\n\tconst [videoData, setVideoData] = useState([]);\n\tconst [loading, setLoading] = useState(true); // 로딩 상태 추가\n\n\t// 서버에서 비디오 데이터를 가져오는 함수\n\tconst fetchVideoData = async () => {\n\t\ttry {\n\t\t\tconst response = await fetch('https://your-api-endpoint.com/videos'); // API 엔드포인트\n\t\t\tconst data = await response.json();\n\t\t\tsetVideoData(data); // 받아온 데이터 설정\n\t\t} catch (error) {\n\t\t\tconsole.error('Error fetching video data:', error);\n\t\t} finally {\n\t\t\tsetLoading(false); // 데이터 로딩 완료\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tfetchVideoData(); // 컴포넌트 마운트 시 데이터 가져오기\n\t}, []);\n\n\tconst handleLaunchApp = useCallback(async () => {\n\t\tconst result = await sam({\n\t\t\tmethod: 'launch',\n\t\t\tparameters: { id: 'com.webos.app.self-diagnosis' }\n\t\t});\n\t\tdebugLog('SAM', result);\n\t\topenPopup(false);\n\t}, []);\n\n\tconst handlePopupOpen = useCallback(() => {\n\t\topenPopup(true);\n\t}, []);\n\n\tconst handlePopupClose = useCallback(() => {\n\t\topenPopup(false);\n\t}, []);\n\n\treturn {\n\t\tisPopupOpen,\n\t\thandlePopupOpen,\n\t\thandlePopupClose,\n\t\thandleLaunchApp,\n\t\tvideoData,\n\t\tloading, // 로딩 상태 반환\n\t\tsetVideoData\n\t};\n};\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACxD,SAASC,GAAG,QAAQ,kBAAkB;AACtC,OAAOC,QAAQ,MAAM,aAAa;;AAElC;AACA,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACjC,MAAM,CAACC,WAAW,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAChD,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE9C;EACA,MAAMU,cAAc,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACH,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,CAAC,CAAC,CAAC;MACtE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCP,YAAY,CAACM,IAAI,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACfC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACnD,CAAC,SAAS;MACTN,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACpB;EACD,CAAC;EAEDV,SAAS,CAAC,MAAM;IACfW,cAAc,CAAC,CAAC,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,eAAe,GAAGnB,WAAW,CAAC,YAAY;IAC/C,MAAMoB,MAAM,GAAG,MAAMjB,GAAG,CAAC;MACxBkB,MAAM,EAAE,QAAQ;MAChBC,UAAU,EAAE;QAAEC,EAAE,EAAE;MAA+B;IAClD,CAAC,CAAC;IACFnB,QAAQ,CAAC,KAAK,EAAEgB,MAAM,CAAC;IACvBb,SAAS,CAAC,KAAK,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMiB,eAAe,GAAGxB,WAAW,CAAC,MAAM;IACzCO,SAAS,CAAC,IAAI,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMkB,gBAAgB,GAAGzB,WAAW,CAAC,MAAM;IAC1CO,SAAS,CAAC,KAAK,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IACND,WAAW;IACXkB,eAAe;IACfC,gBAAgB;IAChBN,eAAe;IACfX,SAAS;IACTE,OAAO;IAAE;IACTD;EACD,CAAC;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}