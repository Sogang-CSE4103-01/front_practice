{"ast":null,"code":"var _jsxFileName = \"/Users/meogyu/connected_front/src/views/Login.js\";\n// src/views/Login.js\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { BodyText, Button, Input } from '@enact/sandstone';\nimport css from './Login.module.less'; // 스타일을 위한 CSS 모듈\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  const history = useHistory();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const handleLogin = () => {\n    setLoading(true);\n    setError('');\n\n    // 로그인 로직 (여기서는 단순히 성공적으로 넘어가도록 설정)\n    if (username && password) {\n      history.push('/main');\n    } else {\n      setError('사용자 이름과 비밀번호를 입력하세요.');\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.loginContainer,\n    children: [/*#__PURE__*/_jsxDEV(BodyText, {\n      children: \"\\uB85C\\uADF8\\uC778 \\uD654\\uBA74\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      placeholder: \"\\uC0AC\\uC6A9\\uC790 \\uC774\\uB984\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"password\",\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(BodyText, {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleLogin,\n      disabled: loading,\n      children: loading ? '로딩 중...' : '로그인'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\nexport default Login;","map":{"version":3,"names":["React","useState","useHistory","BodyText","Button","Input","css","jsxDEV","_jsxDEV","Login","history","username","setUsername","password","setPassword","loading","setLoading","error","setError","handleLogin","push","className","loginContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","type","style","color","onClick","disabled"],"sources":["/Users/meogyu/connected_front/src/views/Login.js"],"sourcesContent":["// src/views/Login.js\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { BodyText, Button, Input } from '@enact/sandstone';\nimport css from './Login.module.less'; // 스타일을 위한 CSS 모듈\n\nconst Login = () => {\n    const history = useHistory();\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState('');\n\n    const handleLogin = () => {\n        setLoading(true);\n        setError('');\n\n        // 로그인 로직 (여기서는 단순히 성공적으로 넘어가도록 설정)\n        if (username && password) {\n            history.push('/main');\n        } else {\n            setError('사용자 이름과 비밀번호를 입력하세요.');\n        }\n\n        setLoading(false);\n    };\n\n    return (\n        <div className={css.loginContainer}>\n            <BodyText>로그인 화면</BodyText>\n            <Input \n                placeholder=\"사용자 이름\" \n                value={username} \n                onChange={(e) => setUsername(e.target.value)} \n            />\n            <Input \n                type=\"password\" \n                placeholder=\"비밀번호\" \n                value={password} \n                onChange={(e) => setPassword(e.target.value)} \n            />\n            {error && <BodyText style={{ color: 'red' }}>{error}</BodyText>}\n            <Button onClick={handleLogin} disabled={loading}>\n                {loading ? '로딩 중...' : '로그인'}\n            </Button>\n        </div>\n    );\n};\n\nexport default Login;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,QAAQ,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAC1D,OAAOC,GAAG,MAAM,qBAAqB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAChB,MAAMC,OAAO,GAAGR,UAAU,CAAC,CAAC;EAC5B,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMkB,WAAW,GAAGA,CAAA,KAAM;IACtBH,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,EAAE,CAAC;;IAEZ;IACA,IAAIP,QAAQ,IAAIE,QAAQ,EAAE;MACtBH,OAAO,CAACU,IAAI,CAAC,OAAO,CAAC;IACzB,CAAC,MAAM;MACHF,QAAQ,CAAC,sBAAsB,CAAC;IACpC;IAEAF,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,oBACIR,OAAA;IAAKa,SAAS,EAAEf,GAAG,CAACgB,cAAe;IAAAC,QAAA,gBAC/Bf,OAAA,CAACL,QAAQ;MAAAoB,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC,eAC3BnB,OAAA,CAACH,KAAK;MACFuB,WAAW,EAAC,iCAAQ;MACpBC,KAAK,EAAElB,QAAS;MAChBmB,QAAQ,EAAGC,CAAC,IAAKnB,WAAW,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACFnB,OAAA,CAACH,KAAK;MACF4B,IAAI,EAAC,UAAU;MACfL,WAAW,EAAC,0BAAM;MAClBC,KAAK,EAAEhB,QAAS;MAChBiB,QAAQ,EAAGC,CAAC,IAAKjB,WAAW,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,EACDV,KAAK,iBAAIT,OAAA,CAACL,QAAQ;MAAC+B,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAZ,QAAA,EAAEN;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC,eAC/DnB,OAAA,CAACJ,MAAM;MAACgC,OAAO,EAAEjB,WAAY;MAACkB,QAAQ,EAAEtB,OAAQ;MAAAQ,QAAA,EAC3CR,OAAO,GAAG,SAAS,GAAG;IAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAED,eAAelB,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}