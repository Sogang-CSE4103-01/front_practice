{"ast":null,"code":"var _jsxFileName = \"/Users/meogyu/connected_front/src/views/Main.js\";\n// src/views/Main.js\nimport BodyText from '@enact/sandstone/BodyText';\nimport { Header, Panel } from '@enact/sandstone/Panels';\nimport { useMainState } from './MainState'; // 비디오 데이터 import\nimport SelectableVideoPlayer from './VideoPlayer'; // SelectableVideoPlayer 컴포넌트 import\nimport Scroller from '@enact/sandstone/Scroller'; // Scroller import\nimport css from './Main.module.less';\nimport $L from '@enact/i18n/$L';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = props => {\n  const {\n    videoData\n  } = useMainState(); // 비디오 데이터 가져오기\n  const [selectedVideo, setSelectedVideo] = useState(null); // 선택된 비디오 상태\n\n  const watchingVideos = videoData.slice(0, 3);\n  const recommendedVideos = videoData.slice(3, 9);\n  const handleVideoClick = video => {\n    setSelectedVideo(video);\n  };\n  const handleClosePlayer = () => {\n    setSelectedVideo(null);\n  };\n  const renderVideoCard = video => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.videoCard,\n    onClick: () => handleVideoClick(video),\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: video.thumbnail,\n      alt: video.title,\n      className: css.thumbnail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BodyText, {\n      className: css.videoTitle,\n      size: \"medium\",\n      children: video.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, video.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Panel, {\n    ...props,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: $L('YouTube Clone')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BodyText, {\n      className: css.description,\n      size: \"large\",\n      children: $L('이곳은 유튜브 메인 화면을 모방한 샘플 애플리케이션입니다.')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), selectedVideo && /*#__PURE__*/_jsxDEV(SelectableVideoPlayer, {\n      video: selectedVideo,\n      onClose: handleClosePlayer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.section,\n      children: [/*#__PURE__*/_jsxDEV(BodyText, {\n        className: css.sectionTitle,\n        size: \"large\",\n        children: $L('시청중인 영상')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Scroller, {\n        direction: \"vertical\" // 수직 스크롤\n        ,\n        style: {\n          height: '200px'\n        } // 각 구간의 높이 설정\n        ,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: css.videoGrid,\n          children: watchingVideos.map(renderVideoCard)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.section,\n      children: [/*#__PURE__*/_jsxDEV(BodyText, {\n        className: css.sectionTitle,\n        size: \"large\",\n        children: $L('추천 영상')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Scroller, {\n        direction: \"vertical\" // 수직 스크롤\n        ,\n        style: {\n          height: '200px'\n        } // 각 구간의 높이 설정\n        ,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: css.videoGrid,\n          children: recommendedVideos.map(renderVideoCard)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\nexport default Main;","map":{"version":3,"names":["BodyText","Header","Panel","useMainState","SelectableVideoPlayer","Scroller","css","$L","useState","jsxDEV","_jsxDEV","Main","props","videoData","selectedVideo","setSelectedVideo","watchingVideos","slice","recommendedVideos","handleVideoClick","video","handleClosePlayer","renderVideoCard","className","videoCard","onClick","children","src","thumbnail","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","videoTitle","size","id","description","onClose","section","sectionTitle","direction","style","height","videoGrid","map"],"sources":["/Users/meogyu/connected_front/src/views/Main.js"],"sourcesContent":["// src/views/Main.js\nimport BodyText from '@enact/sandstone/BodyText';\nimport { Header, Panel } from '@enact/sandstone/Panels';\nimport { useMainState } from './MainState'; // 비디오 데이터 import\nimport SelectableVideoPlayer from './VideoPlayer'; // SelectableVideoPlayer 컴포넌트 import\nimport Scroller from '@enact/sandstone/Scroller'; // Scroller import\nimport css from './Main.module.less';\nimport $L from '@enact/i18n/$L';\nimport { useState } from 'react';\n\nconst Main = (props) => {\n    const { videoData } = useMainState(); // 비디오 데이터 가져오기\n    const [selectedVideo, setSelectedVideo] = useState(null); // 선택된 비디오 상태\n\n    const watchingVideos = videoData.slice(0, 3);\n    const recommendedVideos = videoData.slice(3, 9);\n\n    const handleVideoClick = (video) => {\n        setSelectedVideo(video);\n    };\n\n    const handleClosePlayer = () => {\n        setSelectedVideo(null);\n    };\n\n    const renderVideoCard = (video) => (\n        <div key={video.id} className={css.videoCard} onClick={() => handleVideoClick(video)}>\n            <img src={video.thumbnail} alt={video.title} className={css.thumbnail} />\n            <BodyText className={css.videoTitle} size=\"medium\">\n                {video.title}\n            </BodyText>\n        </div>\n    );\n\n    return (\n        <Panel {...props}>\n            <Header title={$L('YouTube Clone')} />\n            <BodyText className={css.description} size=\"large\">\n                {$L('이곳은 유튜브 메인 화면을 모방한 샘플 애플리케이션입니다.')}\n            </BodyText>\n\n            {selectedVideo && (\n                <SelectableVideoPlayer video={selectedVideo} onClose={handleClosePlayer} />\n            )}\n\n            <div className={css.section}>\n                <BodyText className={css.sectionTitle} size=\"large\">\n                    {$L('시청중인 영상')}\n                </BodyText>\n                <Scroller\n                    direction=\"vertical\" // 수직 스크롤\n                    style={{ height: '200px' }} // 각 구간의 높이 설정\n                >\n                    <div className={css.videoGrid}>\n                        {watchingVideos.map(renderVideoCard)}\n                    </div>\n                </Scroller>\n            </div>\n\n            <div className={css.section}>\n                <BodyText className={css.sectionTitle} size=\"large\">\n                    {$L('추천 영상')}\n                </BodyText>\n                <Scroller\n                    direction=\"vertical\" // 수직 스크롤\n                    style={{ height: '200px' }} // 각 구간의 높이 설정\n                >\n                    <div className={css.videoGrid}>\n                        {recommendedVideos.map(renderVideoCard)}\n                    </div>\n                </Scroller>\n            </div>\n        </Panel>\n    );\n};\n\nexport default Main;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}