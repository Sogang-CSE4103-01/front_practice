{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getDirection = exports[\"default\"] = exports.Spotlight = void 0;\nvar _keymap = require(\"@enact/core/keymap\");\nvar _snapshot = require(\"@enact/core/snapshot\");\nvar _platform = _interopRequireDefault(require(\"@enact/core/platform\"));\nvar _last = _interopRequireDefault(require(\"ramda/src/last\"));\nvar _Accelerator = _interopRequireDefault(require(\"../Accelerator\"));\nvar _Spottable = require(\"../Spottable\");\nvar _Pause = require(\"../Pause\");\nvar _inputType = require(\"./inputType\");\nvar _utils = require(\"./utils\");\nvar _container = require(\"./container\");\nvar _pointer = require(\"./pointer\");\nvar _target = require(\"./target\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n/*\n * A javascript-based implementation of Spatial Navigation.\n *\n * Copyright (c) 2016 Luke Chang.\n * https://github.com/luke-chang/js-spatial-navigation\n *\n * Licensed under the MPL license.\n */\n\n/**\n * Exports the {@link spotlight.Spotlight} object used for controlling spotlight behavior and the\n * {@link spotlight.Spotlight.getDirection} function for mapping a keycode to a spotlight direction.\n *\n * The default export is {@link spotlight.Spotlight}.\n *\n * @module spotlight\n * @exports default Spotlight\n * @exports getDirection\n */\n\nvar isDown = (0, _keymap.is)('down');\nvar isEnter = (0, _keymap.is)('enter');\nvar isLeft = (0, _keymap.is)('left');\nvar isRight = (0, _keymap.is)('right');\nvar isUp = (0, _keymap.is)('up');\n\n/**\n * Translates keyCodes into 5-way direction descriptions (e.g. `'down'`)\n *\n * @function\n * @memberof spotlight\n * @param {Number} keyCode - Key code to analyze\n * @returns {String|false} - One of `'up'`, `'down'`, `'left'`, `'right'` or `false` if not a direction key\n * @public\n */\nvar getDirection = exports.getDirection = function getDirection(keyCode) {\n  return isDown(keyCode) && 'down' || isLeft(keyCode) && 'left' || isRight(keyCode) && 'right' || isUp(keyCode) && 'up';\n};\nvar SpotlightAccelerator = new _Accelerator[\"default\"]();\n\n/**\n * Provides 5-way navigation and focus support\n *\n * ```\n * import Spotlight from '@enact/Spotlight';\n *\n * // get the currently focused component\n * const current = Spotlight.getCurrent();\n *\n * // focus an element by CSS selector\n * Spotlight.focus('.my-custom-class');\n *\n * // is `current` focusable?\n * const isFocused = Spotlight.isSpottable(current);\n * ```\n *\n * @type {Object}\n * @memberof spotlight\n * @public\n */\nvar Spotlight = exports.Spotlight = function () {\n  'use strict';\n\n  /*\n  /* private vars\n  */\n  var _initialized = false;\n  var _duringFocusChange = false;\n  var _focusRingElement = null;\n\n  /*\n   * Whether a 5-way directional key is being held.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n  var _5WayKeyHold = false;\n\n  /*\n   * Whether to set focus during the next window focus event\n   *\n   * @type {Boolean}\n   * @default false\n   */\n  var _spotOnWindowFocus = false;\n\n  /*\n   * `true` when a pointer move event occurs during a keypress. Used to short circuit key down\n   * handling until the next keyup occurs.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n  var _pointerMoveDuringKeyPress = false;\n\n  /*\n  * protected methods\n  */\n\n  function preventDefault(evt) {\n    evt.preventDefault();\n    evt.stopPropagation();\n    return false;\n  }\n  function shouldPreventNavigation() {\n    return (0, _Pause.isPaused)() || (0, _container.getAllContainerIds)().length === 0;\n  }\n  function _getCurrent() {\n    if (!(0, _snapshot.isWindowReady)()) return;\n    var activeElement = document.activeElement;\n    if (activeElement && activeElement !== document.body) {\n      return activeElement;\n    }\n  }\n\n  // An extension point for updating pointer mode based on the current platform.\n  // Currently only webOS\n  function setPlatformPointerMode() {\n    var _window$webOSSystem;\n    var webOSSystem = (_window$webOSSystem = window.webOSSystem) !== null && _window$webOSSystem !== void 0 ? _window$webOSSystem : window.PalmSystem;\n    if (webOSSystem && webOSSystem.cursor) {\n      (0, _pointer.setPointerMode)(webOSSystem.cursor.visibility);\n    }\n  }\n  function focusElement(elem, containerIds, fromPointer) {\n    var _window$webOSSystem2, _webOSSystem$cursor;\n    if (!elem) {\n      return false;\n    }\n    var webOSSystem = (_window$webOSSystem2 = window.webOSSystem) !== null && _window$webOSSystem2 !== void 0 ? _window$webOSSystem2 : window.PalmSystem;\n    if ((0, _pointer.getPointerMode)() && !fromPointer && ((0, _inputType.getInputType)() === 'touch' || typeof window !== 'undefined' && (!webOSSystem || (_webOSSystem$cursor = webOSSystem.cursor) !== null && _webOSSystem$cursor !== void 0 && _webOSSystem$cursor.visibility))) {\n      (0, _container.setContainerLastFocusedElement)(elem, containerIds);\n      return false;\n    }\n    var currentFocusedElement = _getCurrent();\n    if (elem === currentFocusedElement) {\n      return true;\n    }\n    var focusOptions = (0, _container.isWithinOverflowContainer)(elem, containerIds) ? {\n      preventScroll: true\n    } : null;\n    var silentFocus = function silentFocus() {\n      elem.focus(focusOptions);\n      focusChanged(elem, containerIds);\n    };\n    if (_duringFocusChange) {\n      silentFocus();\n      return true;\n    }\n    _duringFocusChange = true;\n    if ((0, _Pause.isPaused)()) {\n      silentFocus();\n      _duringFocusChange = false;\n      return true;\n    }\n    elem.focus(focusOptions);\n\n    /* istanbul ignore next */\n    if (_focusRingElement) {\n      var elemRect = elem.getBoundingClientRect();\n      _focusRingElement.style.left = \"\".concat(elemRect.x + window.scrollX, \"px\");\n      _focusRingElement.style.top = \"\".concat(elemRect.y + window.scrollY, \"px\");\n      _focusRingElement.style.width = \"\".concat(elemRect.width, \"px\");\n      _focusRingElement.style.height = \"\".concat(elemRect.height, \"px\");\n    }\n    _duringFocusChange = false;\n    focusChanged(elem, containerIds);\n    return true;\n  }\n  function focusChanged(elem, containerIds) {\n    if (!containerIds || !containerIds.length) {\n      containerIds = (0, _container.getContainersForNode)(elem);\n    }\n    var containerId = (0, _last[\"default\"])(containerIds);\n    if (containerId) {\n      (0, _container.setContainerLastFocusedElement)(elem, containerIds);\n      (0, _container.setLastContainer)(containerId);\n    }\n    if (process.env.NODE_ENV !== \"production\") {\n      assignFocusPreview(elem);\n    }\n  }\n  function restoreFocus() {\n    var lastContainerId = (0, _container.getLastContainer)();\n    var next;\n    if (lastContainerId) {\n      var position = (0, _pointer.getLastPointerPosition)();\n\n      // walk up the chain of containers from the last to attempt to find a target\n      next = (0, _container.getContainersForNode)((0, _container.getContainerNode)(lastContainerId)).reverse();\n\n      // only prepend last focused if it exists so that Spotlight.focus() doesn't receive\n      // a falsy target\n      var lastFocusedElement = (0, _container.getContainerLastFocusedElement)(lastContainerId);\n      while ((0, _container.isContainer)(lastFocusedElement)) {\n        var _getContainerConfig = (0, _container.getContainerConfig)(lastFocusedElement);\n        lastFocusedElement = _getContainerConfig.lastFocusedElement;\n      }\n      var lastContainerNode = (0, _container.getContainerNode)(lastContainerId);\n      if (!lastFocusedElement || lastContainerNode.getBoundingClientRect && lastFocusedElement.getBoundingClientRect && !(0, _utils.contains)(lastContainerNode.getBoundingClientRect(), lastFocusedElement.getBoundingClientRect())) {\n        lastFocusedElement = (0, _container.getContainerConfig)(lastContainerId).overflow && (0, _target.getNearestTargetFromPosition)(position, lastContainerId);\n      }\n      if (lastFocusedElement) {\n        next.unshift(lastFocusedElement);\n      }\n    } else {\n      next = [_container.rootContainerId];\n    }\n\n    // attempt to find a target starting with the last focused element in the last\n    // container, followed by the last container, and finally the root container\n    return next.reduce(function (focused, target) {\n      return focused || Spotlight.focus(target);\n    }, false);\n  }\n\n  // The below should be gated on non-production environment only.\n  function assignFocusPreview(elem) {\n    var directions = ['up', 'right', 'down', 'left'],\n      nextClassBase = _Spottable.spottableClass + '-next-';\n\n    // Remove all previous targets\n    directions.forEach(function (dir) {\n      var nextClass = nextClassBase + dir,\n        prevElems = (0, _utils.parseSelector)('.' + nextClass);\n      if (prevElems && prevElems.length !== 0) {\n        prevElems.forEach(function (prevElem) {\n          return prevElem.classList.remove(nextClass);\n        });\n      }\n    });\n\n    // Find all next targets and identify them\n    directions.forEach(function (dir) {\n      var nextElem = (0, _target.getTargetByDirectionFromElement)(dir, elem);\n      if (nextElem) {\n        nextElem.classList.add(nextClassBase + dir);\n      }\n    });\n  }\n  function spotNextFromPoint(direction, position) {\n    var containerId = Spotlight.getActiveContainer();\n    var next = (0, _target.getTargetByDirectionFromPosition)(direction, position, containerId);\n    if (next) {\n      (0, _container.setContainerPreviousTarget)(containerId, direction, next, (0, _container.getContainerLastFocusedElement)(containerId));\n      return focusElement(next, (0, _container.getContainersForNode)(next));\n    }\n    return false;\n  }\n  function spotNext(direction, currentFocusedElement, currentContainerIds) {\n    var next = (0, _target.getTargetByDirectionFromElement)(direction, currentFocusedElement);\n    if (next) {\n      var currentContainerId = (0, _last[\"default\"])(currentContainerIds);\n      var nextContainerIds = (0, _container.getContainersForNode)(next);\n\n      // prevent focus if 5-way is being held and the next element isn't wrapped by\n      // the current element's immediate container\n      if (_5WayKeyHold && nextContainerIds.indexOf(currentContainerId) < 0 && !(0, _container.isContainer5WayHoldable)(currentContainerId)) {\n        return false;\n      }\n      (0, _container.notifyLeaveContainer)(direction, currentFocusedElement, currentContainerIds, next, nextContainerIds);\n      (0, _container.setContainerPreviousTarget)(currentContainerId, direction, next, currentFocusedElement);\n      var focused = focusElement(next, nextContainerIds);\n      (0, _container.notifyEnterContainer)(direction, currentFocusedElement, currentContainerIds, next, nextContainerIds);\n      return focused;\n    }\n    (0, _container.notifyLeaveContainerFail)(direction, currentFocusedElement, currentContainerIds);\n    return false;\n  }\n  function onAcceleratedKeyDown(evt) {\n    var direction = getDirection(evt.keyCode);\n    if (!direction) return;\n    var currentFocusedElement = _getCurrent();\n    var currentContainerIds = (0, _container.getContainersForNode)(currentFocusedElement);\n    spotNext(direction, currentFocusedElement, currentContainerIds);\n  }\n  function onBlur() {\n    var current = _getCurrent();\n    if (current) {\n      current.blur();\n    }\n    Spotlight.setPointerMode(false);\n    _spotOnWindowFocus = true;\n    _pointerMoveDuringKeyPress = false;\n  }\n  function handleWebOSMouseEvent(ev) {\n    if (!(0, _Pause.isPaused)() && ev && ev.detail && ev.detail.type === 'Leave') {\n      onBlur();\n    }\n  }\n  function handleKeyboardStateChangeEvent(_ref) {\n    var visibility = _ref.visibility;\n    if (!visibility) {\n      setPlatformPointerMode();\n    }\n  }\n  function onFocus() {\n    // Normally, there isn't focus here unless the window has been blurred above. On webOS, the\n    // platform may focus the window after the app has already focused a component so we prevent\n    // trying to focus something else (potentially) unless the window was previously blurred\n    if (_spotOnWindowFocus) {\n      setPlatformPointerMode();\n\n      // If the window was previously blurred while in pointer mode, the last active containerId may\n      // not have yet set focus to its spottable elements. For this reason we can't rely on setting focus\n      // to the last focused element of the last active containerId, so we use rootContainerId instead\n      var lastFocusedElement = (0, _container.getContainerLastFocusedElement)(_container.rootContainerId);\n      while ((0, _container.isContainer)(lastFocusedElement)) {\n        var _getContainerConfig2 = (0, _container.getContainerConfig)(lastFocusedElement);\n        lastFocusedElement = _getContainerConfig2.lastFocusedElement;\n      }\n      if (!Spotlight.focus(lastFocusedElement)) {\n        // If the last focused element was previously also disabled (or no longer exists), we\n        // need to set focus somewhere\n        Spotlight.focus();\n      }\n      _spotOnWindowFocus = false;\n    }\n  }\n  function onKeyUp(evt) {\n    _pointerMoveDuringKeyPress = false;\n    var keyCode = evt.keyCode;\n    if (getDirection(keyCode) || isEnter(keyCode)) {\n      SpotlightAccelerator.reset();\n      _5WayKeyHold = false;\n    }\n  }\n  function handlePointerHide() {\n    if (!_getCurrent()) {\n      restoreFocus();\n    }\n  }\n  function onKeyDown(evt) {\n    if (shouldPreventNavigation()) {\n      (0, _pointer.notifyKeyDown)(evt.keyCode);\n      return;\n    }\n    var keyCode = evt.keyCode;\n    var direction = getDirection(keyCode);\n    var pointerHandled = (0, _pointer.notifyKeyDown)(keyCode, handlePointerHide);\n    if (pointerHandled || !(direction || isEnter(keyCode))) {\n      return;\n    }\n    if (!(0, _Pause.isPaused)() && !_pointerMoveDuringKeyPress) {\n      if (_getCurrent()) {\n        SpotlightAccelerator.processKey(evt, onAcceleratedKeyDown);\n      } else if (!spotNextFromPoint(direction, (0, _pointer.getLastPointerPosition)())) {\n        restoreFocus();\n      }\n      _5WayKeyHold = true;\n    }\n    if (direction) {\n      preventDefault(evt);\n    }\n  }\n  function onMouseMove(_ref2) {\n    var target = _ref2.target,\n      clientX = _ref2.clientX,\n      clientY = _ref2.clientY;\n    if (shouldPreventNavigation()) {\n      (0, _pointer.notifyPointerMove)(null, target, clientX, clientY);\n      return;\n    }\n    var current = _getCurrent();\n    var update = (0, _pointer.notifyPointerMove)(current, target, clientX, clientY);\n    if (update) {\n      if (_5WayKeyHold) {\n        _pointerMoveDuringKeyPress = true;\n      }\n      var next = (0, _target.getNavigableTarget)(target);\n\n      // TODO: Consider encapsulating this work within focusElement\n      if (next !== current) {\n        if (next) {\n          focusElement(next, (0, _container.getContainersForNode)(next), true);\n          return true;\n        } else if (current) {\n          current.blur();\n          (0, _container.setLastContainerFromTarget)(current, target);\n        }\n      }\n    }\n  }\n  function onMouseOver(evt) {\n    if (shouldPreventNavigation()) return;\n    var target = evt.target;\n    if ((0, _pointer.getPointerMode)() && (0, _pointer.hasPointerMoved)(evt.clientX, evt.clientY)) {\n      var next = (0, _target.getNavigableTarget)(target); // account for child controls\n\n      if (next && next !== _getCurrent()) {\n        focusElement(next, (0, _container.getContainersForNode)(next), true);\n        return true;\n      }\n      preventDefault(evt);\n    }\n  }\n  function onTouchEnd(evt) {\n    var current = _getCurrent();\n    if (current && !current.contains(evt.target)) {\n      current.blur();\n    }\n  }\n\n  /*\n   * public methods\n   */\n  var exports = /** @lends spotlight.Spotlight */{\n    // eslint-disable-line no-shadow\n    /**\n     * Initializes Spotlight. This is generally handled by\n     * {@link spotlight/SpotlightRootDecorator.SpotlightRootDecorator}.\n     *\n     * @param {Object} containerDefaults Default configuration for new spotlight containers\n     * @returns {undefined}\n     * @public\n     */\n    initialize: function initialize(containerDefaults) {\n      if (!_initialized) {\n        var _getContainerConfig3;\n        window.addEventListener('blur', onBlur);\n        window.addEventListener('focus', onFocus);\n        window.addEventListener('keydown', onKeyDown);\n        window.addEventListener('keyup', onKeyUp);\n        window.addEventListener('mouseover', onMouseOver);\n        window.addEventListener('mousemove', onMouseMove);\n        if (_platform[\"default\"].touchEvent) {\n          window.addEventListener('touchend', onTouchEnd);\n        }\n        if (_platform[\"default\"].type === 'webos') {\n          window.top.document.addEventListener('webOSMouse', handleWebOSMouseEvent);\n          window.top.document.addEventListener('keyboardStateChange', handleKeyboardStateChangeEvent);\n        }\n        (0, _container.setLastContainer)(_container.rootContainerId);\n        (0, _container.configureDefaults)(containerDefaults);\n        (0, _container.configureContainer)(_container.rootContainerId);\n        // by default, pointer mode is off but the platform's current state will override that\n        (0, _pointer.setPointerMode)(false);\n        setPlatformPointerMode();\n\n        /* istanbul ignore next */\n        if ((_getContainerConfig3 = (0, _container.getContainerConfig)('spotlightRootDecorator')) !== null && _getContainerConfig3 !== void 0 && _getContainerConfig3.isStandardFocusableMode) {\n          _focusRingElement = document.querySelector('#spotlightFocusRing');\n        }\n        _initialized = true;\n      }\n    },\n    /**\n     * Terminates Spotlight. This is generally handled by {@link spotlight.SpotlightRootDecorator}.\n     *\n     * @public\n     */\n    terminate: function terminate() {\n      window.removeEventListener('blur', onBlur);\n      window.removeEventListener('focus', onFocus);\n      window.removeEventListener('keydown', onKeyDown);\n      window.removeEventListener('keyup', onKeyUp);\n      window.removeEventListener('mouseover', onMouseOver);\n      window.removeEventListener('mousemove', onMouseMove);\n      if (_platform[\"default\"].touchEvent) {\n        window.removeEventListener('touchend', onTouchEnd);\n      }\n      if (_platform[\"default\"].type === 'webos') {\n        window.top.document.removeEventListener('webOSMouse', handleWebOSMouseEvent);\n        window.top.document.removeEventListener('keyboardStateChange', handleKeyboardStateChangeEvent);\n      }\n      Spotlight.clear();\n      _initialized = false;\n    },\n    /**\n     * Resets spotlight container information\n     *\n     * @private\n     */\n    clear: function clear() {\n      (0, _container.removeAllContainers)();\n      (0, _container.setDefaultContainer)();\n      (0, _container.setLastContainer)();\n      _duringFocusChange = false;\n    },\n    // set(<config>);\n    // set(<containerId>, <config>);\n    /**\n     * Sets the config for spotlight or the specified containerID\n     *\n     * @function\n     * @param {String|Object} containerIdOrConfig  Configuration object or container ID\n     * @param {Object}        [config]             Configuration object if container ID supplied\n     *                                             in `containerIdOrConfig`\n     * @returns {undefined}\n     * @public\n     */\n    set: _container.configureContainer,\n    // add(<config>);\n    // add(<containerId>, <config>);\n    /**\n     * Adds the config for a new container. The container ID may be passed in the configuration\n     * object. If no container ID is supplied, a new container ID will be generated.\n     *\n     * @function\n     * @param {String|Object} containerIdOrConfig  Configuration object or container ID\n     * @param {Object}        [config]             Configuration object if container ID supplied\n     *                                             in `containerIdOrConfig`\n     * @returns {String} The container ID of the container\n     * @public\n     */\n    add: _container.addContainer,\n    unmount: function unmount(containerId) {\n      if (!containerId || typeof containerId !== 'string') {\n        throw new Error('Please assign the \"containerId\"!');\n      }\n      (0, _container.unmountContainer)(containerId);\n    },\n    /**\n     * Removes a container from Spotlight\n     *\n     * @param {String} containerId Container ID to remove\n     * @returns {Boolean} `true` if container removed, `false` if container does not exist\n     * @public\n     */\n    remove: function remove(containerId) {\n      if (!containerId || typeof containerId !== 'string') {\n        throw new Error('Please assign the \"containerId\"!');\n      }\n      if ((0, _container.getContainerConfig)(containerId)) {\n        (0, _container.removeContainer)(containerId);\n        if ((0, _container.getLastContainer)() === containerId) {\n          Spotlight.setActiveContainer(null);\n        }\n        return true;\n      }\n      return false;\n    },\n    /**\n     * Disables the selector rules of the specified container\n     *\n     * @param {String} containerId Container ID selector rules to disable\n     * @returns {Boolean} `true` if container's selector rules are disabled, `false` if container does not exist\n     * @public\n     */\n    disableSelector: function disableSelector(containerId) {\n      if ((0, _container.isContainer)(containerId)) {\n        (0, _container.configureContainer)(containerId, {\n          selectorDisabled: true\n        });\n        return true;\n      }\n      return false;\n    },\n    /**\n     * Enables the selector rules of the specified container\n     *\n     * @param {String} containerId Container ID selector rules to enable\n     * @returns {Boolean} `true` if container's selector rules are enabled, `false` if container does not exist\n     * @public\n     */\n    enableSelector: function enableSelector(containerId) {\n      if ((0, _container.isContainer)(containerId)) {\n        (0, _container.configureContainer)(containerId, {\n          selectorDisabled: false\n        });\n        return true;\n      }\n      return false;\n    },\n    /**\n     * Pauses Spotlight\n     *\n     * @function\n     * @returns {undefined}\n     * @public\n     */\n    pause: _Pause.pause,\n    /**\n     * Resumes Spotlight\n     *\n     * @function\n     * @returns {undefined}\n     * @public\n     */\n    resume: _Pause.resume,\n    // focus()\n    // focus(<containerId>)\n    // focus(<extSelector>)\n    /**\n     * Focuses the specified component ID, container ID, element selector, or the default\n     * container.\n     *\n     * If Spotlight is in pointer mode, focus is not changed but `elem` will be set as the last\n     * focused element of its spotlight containers.\n     *\n     * @param {String|Node} [elem] The spotlight ID or selector for either a spottable\n     *  component or a spotlight container, or spottable node. If not supplied, the default\n     *  container will be focused.\n     * @param {Object} [containerOption] The object including `enterTo` and `toOuterContainer`.\n     *  It works when the first parameter `elem` is either a spotlight container ID or a spotlight container node.\n     * @param {('last-focused'|'default-element'|'topmost')} [containerOption.enterTo] Specifies preferred\n     *  `enterTo` configuration.\n     * @param {Boolean} [containerOption.toOuterContainer] If the proper target is not found, search one\n     *  recursively to outer container.\n     * @returns {Boolean} `true` if focus successful, `false` if not.\n     * @public\n     */\n    focus: function focus(elem) {\n      var containerOption = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var target = elem;\n      var wasContainerId = false;\n      var currentContainerNode = null;\n      if (!elem) {\n        target = (0, _target.getTargetByContainer)();\n      } else if (typeof elem === 'string') {\n        if ((0, _container.getContainerConfig)(elem)) {\n          target = (0, _target.getTargetByContainer)(elem, containerOption.enterTo);\n          wasContainerId = true;\n          currentContainerNode = (0, _container.getContainerNode)(elem);\n        } else if (/^[\\w\\d-]+$/.test(elem)) {\n          // support component IDs consisting of alphanumeric, dash, or underscore\n          target = (0, _target.getTargetBySelector)(\"[data-spotlight-id=\".concat(elem, \"]\"));\n        } else {\n          target = (0, _target.getTargetBySelector)(elem);\n        }\n      } else if ((0, _container.isContainer)(elem)) {\n        target = (0, _target.getTargetByContainer)((0, _container.getContainerId)(elem), containerOption.enterTo);\n        currentContainerNode = elem;\n      }\n      var nextContainerIds = (0, _container.getContainersForNode)(target);\n      var nextContainerId = (0, _last[\"default\"])(nextContainerIds);\n      if ((0, _container.isNavigable)(target, nextContainerId, true)) {\n        var focused = focusElement(target, nextContainerIds);\n        if (!focused && wasContainerId) {\n          (0, _container.setLastContainer)(elem);\n        }\n        return focused;\n      } else if (wasContainerId) {\n        // if we failed to find a spottable target within the provided container, we'll set\n        // it as the active container to allow it to focus itself if its contents change\n        (0, _container.setLastContainer)(elem);\n      }\n      if (containerOption.toOuterContainer && currentContainerNode) {\n        var outerContainer = (0, _container.getContainersForNode)(currentContainerNode.parentElement).pop();\n        if (outerContainer) {\n          return this.focus(outerContainer, containerOption);\n        }\n      }\n      return false;\n    },\n    // move(<direction>)\n    // move(<direction>, <selector>)\n    /**\n     * Moves focus to the next spottable control in the direction specified. Optionally, a source\n     * element selector may be supplied as the starting point.\n     *\n     * @param {String} direction Direction to move, one of `'left'`, `'right'`, `'up'` or `'down'`\n     * @param {String|undefined} selector If supplied, the element to move from. If not supplied,\n     *\tthe currently focused item will be used.\n     * @returns {Boolean} `true` if focus successful, `false` if not.\n     * @public\n     */\n    move: function move(direction, selector) {\n      direction = direction.toLowerCase();\n      if (direction !== 'up' && direction !== 'down' && direction !== 'left' && direction !== 'right') {\n        return false;\n      }\n      var elem = selector ? (0, _utils.parseSelector)(selector)[0] : _getCurrent();\n      if (!elem) {\n        return false;\n      }\n      var containerIds = (0, _container.getContainersForNode)(elem);\n      if (!containerIds.length) {\n        return false;\n      }\n      return spotNext(direction, elem, containerIds);\n    },\n    /**\n     * Sets or clears the default container that will receive focus.\n     *\n     * @function\n     * @param {String} [containerId] The container ID or a falsy value to clear default\n     *                               container\n     * @returns {undefined}\n     * @public\n     */\n    setDefaultContainer: _container.setDefaultContainer,\n    /**\n     * Gets the currently active container.\n     *\n     * @returns {String} The id of the currently active container\n     * @public\n     */\n    getActiveContainer: function getActiveContainer() {\n      return (0, _container.getLastContainer)() || _container.rootContainerId;\n    },\n    /**\n     * Sets the currently active container.\n     *\n     * Note: If the current container is restricted to 'self-only' and `containerId` is not\n     * contained within the current container then the active container will not be updated.\n     *\n     * @param {String} [containerId] The id of the currently active container. If this is not\n     *\tprovided, the root container is set as the currently active container.\n     * @public\n     */\n    setActiveContainer: function setActiveContainer(containerId) {\n      if ((0, _container.mayActivateContainer)(containerId)) {\n        (0, _container.setLastContainer)(containerId || _container.rootContainerId);\n      }\n    },\n    /**\n     * Gets the current pointer mode\n     *\n     * @function\n     * @returns {Boolean} `true` if spotlight is in pointer mode\n     * @public\n     */\n    getPointerMode: _pointer.getPointerMode,\n    /**\n     * Sets the current pointer mode\n     *\n     * @function\n     * @param {Boolean} pointerMode The value of the pointer mode. This determines how\n     *\tspotlight manages focus change behaviors.\n     * @public\n     */\n    setPointerMode: _pointer.setPointerMode,\n    /**\n     * Gets the muted mode value of a spottable element.\n     *\n     * @param {Object} elem The dom element used to determine the muted status.\n     * @returns {Boolean} `true` if the passed-in control is in muted mode.\n     * @public\n     */\n    isMuted: function isMuted(elem) {\n      if (!elem) {\n        return false;\n      }\n      return (0, _utils.matchSelector)('[data-spotlight-container-muted=\"true\"] .' + _Spottable.spottableClass, elem);\n    },\n    /**\n     * Determines whether Spotlight is currently paused.\n     *\n     * @function\n     * @returns {Boolean} `true` if Spotlight is currently paused.\n     * @public\n     */\n    isPaused: _Pause.isPaused,\n    /**\n     * Determines whether an element is spottable.\n     *\n     * @param {Object} elem The dom element used to determine the spottable status.\n     * @returns {Boolean} `true` if the element being evaluated is currently spottable.\n     * @public\n     */\n    isSpottable: function isSpottable(elem) {\n      if (!elem) {\n        return false;\n      }\n      return (0, _target.isFocusable)(elem);\n    },\n    /**\n     * Returns the currently spotted control.\n     *\n     * @returns {Node} The control that currently has focus, if available\n     * @public\n     */\n    getCurrent: function getCurrent() {\n      return _getCurrent();\n    },\n    /**\n     * Returns a list of spottable elements wrapped by the supplied container.\n     *\n     * @param {String} containerId The id of the container used to determine the list of spottable elements\n     * @returns {Node[]} The spottable elements that are wrapped by the supplied container\n     * @public\n     */\n    getSpottableDescendants: function getSpottableDescendants(containerId) {\n      if (!containerId || typeof containerId !== 'string') {\n        throw new Error('Please assign the \"containerId\"!');\n      }\n      return (0, _container.getSpottableDescendants)(containerId);\n    },\n    /**\n     * Focuses the next spottable control from the position specified in the direction specified.\n     *\n     * @param {String} direction Direction to move, one of `'left'`, `'right'`, `'up'`, or `'down'`\n     * @param {Object} position `x` and `y` coordinates for the pointer\n     * @private\n     */\n    focusNextFromPoint: spotNextFromPoint\n  };\n  return exports;\n}();\nvar _default = exports[\"default\"] = Spotlight;","map":{"version":3,"names":["Object","defineProperty","exports","value","getDirection","Spotlight","_keymap","require","_snapshot","_platform","_interopRequireDefault","_last","_Accelerator","_Spottable","_Pause","_inputType","_utils","_container","_pointer","_target","obj","__esModule","isDown","is","isEnter","isLeft","isRight","isUp","keyCode","SpotlightAccelerator","_initialized","_duringFocusChange","_focusRingElement","_5WayKeyHold","_spotOnWindowFocus","_pointerMoveDuringKeyPress","preventDefault","evt","stopPropagation","shouldPreventNavigation","isPaused","getAllContainerIds","length","_getCurrent","isWindowReady","activeElement","document","body","setPlatformPointerMode","_window$webOSSystem","webOSSystem","window","PalmSystem","cursor","setPointerMode","visibility","focusElement","elem","containerIds","fromPointer","_window$webOSSystem2","_webOSSystem$cursor","getPointerMode","getInputType","setContainerLastFocusedElement","currentFocusedElement","focusOptions","isWithinOverflowContainer","preventScroll","silentFocus","focus","focusChanged","elemRect","getBoundingClientRect","style","left","concat","x","scrollX","top","y","scrollY","width","height","getContainersForNode","containerId","setLastContainer","process","env","NODE_ENV","assignFocusPreview","restoreFocus","lastContainerId","getLastContainer","next","position","getLastPointerPosition","getContainerNode","reverse","lastFocusedElement","getContainerLastFocusedElement","isContainer","_getContainerConfig","getContainerConfig","lastContainerNode","contains","overflow","getNearestTargetFromPosition","unshift","rootContainerId","reduce","focused","target","directions","nextClassBase","spottableClass","forEach","dir","nextClass","prevElems","parseSelector","prevElem","classList","remove","nextElem","getTargetByDirectionFromElement","add","spotNextFromPoint","direction","getActiveContainer","getTargetByDirectionFromPosition","setContainerPreviousTarget","spotNext","currentContainerIds","currentContainerId","nextContainerIds","indexOf","isContainer5WayHoldable","notifyLeaveContainer","notifyEnterContainer","notifyLeaveContainerFail","onAcceleratedKeyDown","onBlur","current","blur","handleWebOSMouseEvent","ev","detail","type","handleKeyboardStateChangeEvent","_ref","onFocus","_getContainerConfig2","onKeyUp","reset","handlePointerHide","onKeyDown","notifyKeyDown","pointerHandled","processKey","onMouseMove","_ref2","clientX","clientY","notifyPointerMove","update","getNavigableTarget","setLastContainerFromTarget","onMouseOver","hasPointerMoved","onTouchEnd","initialize","containerDefaults","_getContainerConfig3","addEventListener","touchEvent","configureDefaults","configureContainer","isStandardFocusableMode","querySelector","terminate","removeEventListener","clear","removeAllContainers","setDefaultContainer","set","addContainer","unmount","Error","unmountContainer","removeContainer","setActiveContainer","disableSelector","selectorDisabled","enableSelector","pause","resume","containerOption","arguments","undefined","wasContainerId","currentContainerNode","getTargetByContainer","enterTo","test","getTargetBySelector","getContainerId","nextContainerId","isNavigable","toOuterContainer","outerContainer","parentElement","pop","move","selector","toLowerCase","mayActivateContainer","isMuted","matchSelector","isSpottable","isFocusable","getCurrent","getSpottableDescendants","focusNextFromPoint","_default"],"sources":["/home/connected/enact-template/node_modules/@enact/spotlight/src/spotlight.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getDirection = exports[\"default\"] = exports.Spotlight = void 0;\nvar _keymap = require(\"@enact/core/keymap\");\nvar _snapshot = require(\"@enact/core/snapshot\");\nvar _platform = _interopRequireDefault(require(\"@enact/core/platform\"));\nvar _last = _interopRequireDefault(require(\"ramda/src/last\"));\nvar _Accelerator = _interopRequireDefault(require(\"../Accelerator\"));\nvar _Spottable = require(\"../Spottable\");\nvar _Pause = require(\"../Pause\");\nvar _inputType = require(\"./inputType\");\nvar _utils = require(\"./utils\");\nvar _container = require(\"./container\");\nvar _pointer = require(\"./pointer\");\nvar _target = require(\"./target\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n/*\n * A javascript-based implementation of Spatial Navigation.\n *\n * Copyright (c) 2016 Luke Chang.\n * https://github.com/luke-chang/js-spatial-navigation\n *\n * Licensed under the MPL license.\n */\n\n/**\n * Exports the {@link spotlight.Spotlight} object used for controlling spotlight behavior and the\n * {@link spotlight.Spotlight.getDirection} function for mapping a keycode to a spotlight direction.\n *\n * The default export is {@link spotlight.Spotlight}.\n *\n * @module spotlight\n * @exports default Spotlight\n * @exports getDirection\n */\n\nvar isDown = (0, _keymap.is)('down');\nvar isEnter = (0, _keymap.is)('enter');\nvar isLeft = (0, _keymap.is)('left');\nvar isRight = (0, _keymap.is)('right');\nvar isUp = (0, _keymap.is)('up');\n\n/**\n * Translates keyCodes into 5-way direction descriptions (e.g. `'down'`)\n *\n * @function\n * @memberof spotlight\n * @param {Number} keyCode - Key code to analyze\n * @returns {String|false} - One of `'up'`, `'down'`, `'left'`, `'right'` or `false` if not a direction key\n * @public\n */\nvar getDirection = exports.getDirection = function getDirection(keyCode) {\n  return isDown(keyCode) && 'down' || isLeft(keyCode) && 'left' || isRight(keyCode) && 'right' || isUp(keyCode) && 'up';\n};\nvar SpotlightAccelerator = new _Accelerator[\"default\"]();\n\n/**\n * Provides 5-way navigation and focus support\n *\n * ```\n * import Spotlight from '@enact/Spotlight';\n *\n * // get the currently focused component\n * const current = Spotlight.getCurrent();\n *\n * // focus an element by CSS selector\n * Spotlight.focus('.my-custom-class');\n *\n * // is `current` focusable?\n * const isFocused = Spotlight.isSpottable(current);\n * ```\n *\n * @type {Object}\n * @memberof spotlight\n * @public\n */\nvar Spotlight = exports.Spotlight = function () {\n  'use strict';\n\n  /*\n  /* private vars\n  */\n  var _initialized = false;\n  var _duringFocusChange = false;\n  var _focusRingElement = null;\n\n  /*\n   * Whether a 5-way directional key is being held.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n  var _5WayKeyHold = false;\n\n  /*\n   * Whether to set focus during the next window focus event\n   *\n   * @type {Boolean}\n   * @default false\n   */\n  var _spotOnWindowFocus = false;\n\n  /*\n   * `true` when a pointer move event occurs during a keypress. Used to short circuit key down\n   * handling until the next keyup occurs.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n  var _pointerMoveDuringKeyPress = false;\n\n  /*\n  * protected methods\n  */\n\n  function preventDefault(evt) {\n    evt.preventDefault();\n    evt.stopPropagation();\n    return false;\n  }\n  function shouldPreventNavigation() {\n    return (0, _Pause.isPaused)() || (0, _container.getAllContainerIds)().length === 0;\n  }\n  function _getCurrent() {\n    if (!(0, _snapshot.isWindowReady)()) return;\n    var activeElement = document.activeElement;\n    if (activeElement && activeElement !== document.body) {\n      return activeElement;\n    }\n  }\n\n  // An extension point for updating pointer mode based on the current platform.\n  // Currently only webOS\n  function setPlatformPointerMode() {\n    var _window$webOSSystem;\n    var webOSSystem = (_window$webOSSystem = window.webOSSystem) !== null && _window$webOSSystem !== void 0 ? _window$webOSSystem : window.PalmSystem;\n    if (webOSSystem && webOSSystem.cursor) {\n      (0, _pointer.setPointerMode)(webOSSystem.cursor.visibility);\n    }\n  }\n  function focusElement(elem, containerIds, fromPointer) {\n    var _window$webOSSystem2, _webOSSystem$cursor;\n    if (!elem) {\n      return false;\n    }\n    var webOSSystem = (_window$webOSSystem2 = window.webOSSystem) !== null && _window$webOSSystem2 !== void 0 ? _window$webOSSystem2 : window.PalmSystem;\n    if ((0, _pointer.getPointerMode)() && !fromPointer && ((0, _inputType.getInputType)() === 'touch' || typeof window !== 'undefined' && (!webOSSystem || (_webOSSystem$cursor = webOSSystem.cursor) !== null && _webOSSystem$cursor !== void 0 && _webOSSystem$cursor.visibility))) {\n      (0, _container.setContainerLastFocusedElement)(elem, containerIds);\n      return false;\n    }\n    var currentFocusedElement = _getCurrent();\n    if (elem === currentFocusedElement) {\n      return true;\n    }\n    var focusOptions = (0, _container.isWithinOverflowContainer)(elem, containerIds) ? {\n      preventScroll: true\n    } : null;\n    var silentFocus = function silentFocus() {\n      elem.focus(focusOptions);\n      focusChanged(elem, containerIds);\n    };\n    if (_duringFocusChange) {\n      silentFocus();\n      return true;\n    }\n    _duringFocusChange = true;\n    if ((0, _Pause.isPaused)()) {\n      silentFocus();\n      _duringFocusChange = false;\n      return true;\n    }\n    elem.focus(focusOptions);\n\n    /* istanbul ignore next */\n    if (_focusRingElement) {\n      var elemRect = elem.getBoundingClientRect();\n      _focusRingElement.style.left = \"\".concat(elemRect.x + window.scrollX, \"px\");\n      _focusRingElement.style.top = \"\".concat(elemRect.y + window.scrollY, \"px\");\n      _focusRingElement.style.width = \"\".concat(elemRect.width, \"px\");\n      _focusRingElement.style.height = \"\".concat(elemRect.height, \"px\");\n    }\n    _duringFocusChange = false;\n    focusChanged(elem, containerIds);\n    return true;\n  }\n  function focusChanged(elem, containerIds) {\n    if (!containerIds || !containerIds.length) {\n      containerIds = (0, _container.getContainersForNode)(elem);\n    }\n    var containerId = (0, _last[\"default\"])(containerIds);\n    if (containerId) {\n      (0, _container.setContainerLastFocusedElement)(elem, containerIds);\n      (0, _container.setLastContainer)(containerId);\n    }\n    if (process.env.NODE_ENV !== \"production\") {\n      assignFocusPreview(elem);\n    }\n  }\n  function restoreFocus() {\n    var lastContainerId = (0, _container.getLastContainer)();\n    var next;\n    if (lastContainerId) {\n      var position = (0, _pointer.getLastPointerPosition)();\n\n      // walk up the chain of containers from the last to attempt to find a target\n      next = (0, _container.getContainersForNode)((0, _container.getContainerNode)(lastContainerId)).reverse();\n\n      // only prepend last focused if it exists so that Spotlight.focus() doesn't receive\n      // a falsy target\n      var lastFocusedElement = (0, _container.getContainerLastFocusedElement)(lastContainerId);\n      while ((0, _container.isContainer)(lastFocusedElement)) {\n        var _getContainerConfig = (0, _container.getContainerConfig)(lastFocusedElement);\n        lastFocusedElement = _getContainerConfig.lastFocusedElement;\n      }\n      var lastContainerNode = (0, _container.getContainerNode)(lastContainerId);\n      if (!lastFocusedElement || lastContainerNode.getBoundingClientRect && lastFocusedElement.getBoundingClientRect && !(0, _utils.contains)(lastContainerNode.getBoundingClientRect(), lastFocusedElement.getBoundingClientRect())) {\n        lastFocusedElement = (0, _container.getContainerConfig)(lastContainerId).overflow && (0, _target.getNearestTargetFromPosition)(position, lastContainerId);\n      }\n      if (lastFocusedElement) {\n        next.unshift(lastFocusedElement);\n      }\n    } else {\n      next = [_container.rootContainerId];\n    }\n\n    // attempt to find a target starting with the last focused element in the last\n    // container, followed by the last container, and finally the root container\n    return next.reduce(function (focused, target) {\n      return focused || Spotlight.focus(target);\n    }, false);\n  }\n\n  // The below should be gated on non-production environment only.\n  function assignFocusPreview(elem) {\n    var directions = ['up', 'right', 'down', 'left'],\n      nextClassBase = _Spottable.spottableClass + '-next-';\n\n    // Remove all previous targets\n    directions.forEach(function (dir) {\n      var nextClass = nextClassBase + dir,\n        prevElems = (0, _utils.parseSelector)('.' + nextClass);\n      if (prevElems && prevElems.length !== 0) {\n        prevElems.forEach(function (prevElem) {\n          return prevElem.classList.remove(nextClass);\n        });\n      }\n    });\n\n    // Find all next targets and identify them\n    directions.forEach(function (dir) {\n      var nextElem = (0, _target.getTargetByDirectionFromElement)(dir, elem);\n      if (nextElem) {\n        nextElem.classList.add(nextClassBase + dir);\n      }\n    });\n  }\n  function spotNextFromPoint(direction, position) {\n    var containerId = Spotlight.getActiveContainer();\n    var next = (0, _target.getTargetByDirectionFromPosition)(direction, position, containerId);\n    if (next) {\n      (0, _container.setContainerPreviousTarget)(containerId, direction, next, (0, _container.getContainerLastFocusedElement)(containerId));\n      return focusElement(next, (0, _container.getContainersForNode)(next));\n    }\n    return false;\n  }\n  function spotNext(direction, currentFocusedElement, currentContainerIds) {\n    var next = (0, _target.getTargetByDirectionFromElement)(direction, currentFocusedElement);\n    if (next) {\n      var currentContainerId = (0, _last[\"default\"])(currentContainerIds);\n      var nextContainerIds = (0, _container.getContainersForNode)(next);\n\n      // prevent focus if 5-way is being held and the next element isn't wrapped by\n      // the current element's immediate container\n      if (_5WayKeyHold && nextContainerIds.indexOf(currentContainerId) < 0 && !(0, _container.isContainer5WayHoldable)(currentContainerId)) {\n        return false;\n      }\n      (0, _container.notifyLeaveContainer)(direction, currentFocusedElement, currentContainerIds, next, nextContainerIds);\n      (0, _container.setContainerPreviousTarget)(currentContainerId, direction, next, currentFocusedElement);\n      var focused = focusElement(next, nextContainerIds);\n      (0, _container.notifyEnterContainer)(direction, currentFocusedElement, currentContainerIds, next, nextContainerIds);\n      return focused;\n    }\n    (0, _container.notifyLeaveContainerFail)(direction, currentFocusedElement, currentContainerIds);\n    return false;\n  }\n  function onAcceleratedKeyDown(evt) {\n    var direction = getDirection(evt.keyCode);\n    if (!direction) return;\n    var currentFocusedElement = _getCurrent();\n    var currentContainerIds = (0, _container.getContainersForNode)(currentFocusedElement);\n    spotNext(direction, currentFocusedElement, currentContainerIds);\n  }\n  function onBlur() {\n    var current = _getCurrent();\n    if (current) {\n      current.blur();\n    }\n    Spotlight.setPointerMode(false);\n    _spotOnWindowFocus = true;\n    _pointerMoveDuringKeyPress = false;\n  }\n  function handleWebOSMouseEvent(ev) {\n    if (!(0, _Pause.isPaused)() && ev && ev.detail && ev.detail.type === 'Leave') {\n      onBlur();\n    }\n  }\n  function handleKeyboardStateChangeEvent(_ref) {\n    var visibility = _ref.visibility;\n    if (!visibility) {\n      setPlatformPointerMode();\n    }\n  }\n  function onFocus() {\n    // Normally, there isn't focus here unless the window has been blurred above. On webOS, the\n    // platform may focus the window after the app has already focused a component so we prevent\n    // trying to focus something else (potentially) unless the window was previously blurred\n    if (_spotOnWindowFocus) {\n      setPlatformPointerMode();\n\n      // If the window was previously blurred while in pointer mode, the last active containerId may\n      // not have yet set focus to its spottable elements. For this reason we can't rely on setting focus\n      // to the last focused element of the last active containerId, so we use rootContainerId instead\n      var lastFocusedElement = (0, _container.getContainerLastFocusedElement)(_container.rootContainerId);\n      while ((0, _container.isContainer)(lastFocusedElement)) {\n        var _getContainerConfig2 = (0, _container.getContainerConfig)(lastFocusedElement);\n        lastFocusedElement = _getContainerConfig2.lastFocusedElement;\n      }\n      if (!Spotlight.focus(lastFocusedElement)) {\n        // If the last focused element was previously also disabled (or no longer exists), we\n        // need to set focus somewhere\n        Spotlight.focus();\n      }\n      _spotOnWindowFocus = false;\n    }\n  }\n  function onKeyUp(evt) {\n    _pointerMoveDuringKeyPress = false;\n    var keyCode = evt.keyCode;\n    if (getDirection(keyCode) || isEnter(keyCode)) {\n      SpotlightAccelerator.reset();\n      _5WayKeyHold = false;\n    }\n  }\n  function handlePointerHide() {\n    if (!_getCurrent()) {\n      restoreFocus();\n    }\n  }\n  function onKeyDown(evt) {\n    if (shouldPreventNavigation()) {\n      (0, _pointer.notifyKeyDown)(evt.keyCode);\n      return;\n    }\n    var keyCode = evt.keyCode;\n    var direction = getDirection(keyCode);\n    var pointerHandled = (0, _pointer.notifyKeyDown)(keyCode, handlePointerHide);\n    if (pointerHandled || !(direction || isEnter(keyCode))) {\n      return;\n    }\n    if (!(0, _Pause.isPaused)() && !_pointerMoveDuringKeyPress) {\n      if (_getCurrent()) {\n        SpotlightAccelerator.processKey(evt, onAcceleratedKeyDown);\n      } else if (!spotNextFromPoint(direction, (0, _pointer.getLastPointerPosition)())) {\n        restoreFocus();\n      }\n      _5WayKeyHold = true;\n    }\n    if (direction) {\n      preventDefault(evt);\n    }\n  }\n  function onMouseMove(_ref2) {\n    var target = _ref2.target,\n      clientX = _ref2.clientX,\n      clientY = _ref2.clientY;\n    if (shouldPreventNavigation()) {\n      (0, _pointer.notifyPointerMove)(null, target, clientX, clientY);\n      return;\n    }\n    var current = _getCurrent();\n    var update = (0, _pointer.notifyPointerMove)(current, target, clientX, clientY);\n    if (update) {\n      if (_5WayKeyHold) {\n        _pointerMoveDuringKeyPress = true;\n      }\n      var next = (0, _target.getNavigableTarget)(target);\n\n      // TODO: Consider encapsulating this work within focusElement\n      if (next !== current) {\n        if (next) {\n          focusElement(next, (0, _container.getContainersForNode)(next), true);\n          return true;\n        } else if (current) {\n          current.blur();\n          (0, _container.setLastContainerFromTarget)(current, target);\n        }\n      }\n    }\n  }\n  function onMouseOver(evt) {\n    if (shouldPreventNavigation()) return;\n    var target = evt.target;\n    if ((0, _pointer.getPointerMode)() && (0, _pointer.hasPointerMoved)(evt.clientX, evt.clientY)) {\n      var next = (0, _target.getNavigableTarget)(target); // account for child controls\n\n      if (next && next !== _getCurrent()) {\n        focusElement(next, (0, _container.getContainersForNode)(next), true);\n        return true;\n      }\n      preventDefault(evt);\n    }\n  }\n  function onTouchEnd(evt) {\n    var current = _getCurrent();\n    if (current && !current.contains(evt.target)) {\n      current.blur();\n    }\n  }\n\n  /*\n   * public methods\n   */\n  var exports = /** @lends spotlight.Spotlight */{\n    // eslint-disable-line no-shadow\n    /**\n     * Initializes Spotlight. This is generally handled by\n     * {@link spotlight/SpotlightRootDecorator.SpotlightRootDecorator}.\n     *\n     * @param {Object} containerDefaults Default configuration for new spotlight containers\n     * @returns {undefined}\n     * @public\n     */\n    initialize: function initialize(containerDefaults) {\n      if (!_initialized) {\n        var _getContainerConfig3;\n        window.addEventListener('blur', onBlur);\n        window.addEventListener('focus', onFocus);\n        window.addEventListener('keydown', onKeyDown);\n        window.addEventListener('keyup', onKeyUp);\n        window.addEventListener('mouseover', onMouseOver);\n        window.addEventListener('mousemove', onMouseMove);\n        if (_platform[\"default\"].touchEvent) {\n          window.addEventListener('touchend', onTouchEnd);\n        }\n        if (_platform[\"default\"].type === 'webos') {\n          window.top.document.addEventListener('webOSMouse', handleWebOSMouseEvent);\n          window.top.document.addEventListener('keyboardStateChange', handleKeyboardStateChangeEvent);\n        }\n        (0, _container.setLastContainer)(_container.rootContainerId);\n        (0, _container.configureDefaults)(containerDefaults);\n        (0, _container.configureContainer)(_container.rootContainerId);\n        // by default, pointer mode is off but the platform's current state will override that\n        (0, _pointer.setPointerMode)(false);\n        setPlatformPointerMode();\n\n        /* istanbul ignore next */\n        if ((_getContainerConfig3 = (0, _container.getContainerConfig)('spotlightRootDecorator')) !== null && _getContainerConfig3 !== void 0 && _getContainerConfig3.isStandardFocusableMode) {\n          _focusRingElement = document.querySelector('#spotlightFocusRing');\n        }\n        _initialized = true;\n      }\n    },\n    /**\n     * Terminates Spotlight. This is generally handled by {@link spotlight.SpotlightRootDecorator}.\n     *\n     * @public\n     */\n    terminate: function terminate() {\n      window.removeEventListener('blur', onBlur);\n      window.removeEventListener('focus', onFocus);\n      window.removeEventListener('keydown', onKeyDown);\n      window.removeEventListener('keyup', onKeyUp);\n      window.removeEventListener('mouseover', onMouseOver);\n      window.removeEventListener('mousemove', onMouseMove);\n      if (_platform[\"default\"].touchEvent) {\n        window.removeEventListener('touchend', onTouchEnd);\n      }\n      if (_platform[\"default\"].type === 'webos') {\n        window.top.document.removeEventListener('webOSMouse', handleWebOSMouseEvent);\n        window.top.document.removeEventListener('keyboardStateChange', handleKeyboardStateChangeEvent);\n      }\n      Spotlight.clear();\n      _initialized = false;\n    },\n    /**\n     * Resets spotlight container information\n     *\n     * @private\n     */\n    clear: function clear() {\n      (0, _container.removeAllContainers)();\n      (0, _container.setDefaultContainer)();\n      (0, _container.setLastContainer)();\n      _duringFocusChange = false;\n    },\n    // set(<config>);\n    // set(<containerId>, <config>);\n    /**\n     * Sets the config for spotlight or the specified containerID\n     *\n     * @function\n     * @param {String|Object} containerIdOrConfig  Configuration object or container ID\n     * @param {Object}        [config]             Configuration object if container ID supplied\n     *                                             in `containerIdOrConfig`\n     * @returns {undefined}\n     * @public\n     */\n    set: _container.configureContainer,\n    // add(<config>);\n    // add(<containerId>, <config>);\n    /**\n     * Adds the config for a new container. The container ID may be passed in the configuration\n     * object. If no container ID is supplied, a new container ID will be generated.\n     *\n     * @function\n     * @param {String|Object} containerIdOrConfig  Configuration object or container ID\n     * @param {Object}        [config]             Configuration object if container ID supplied\n     *                                             in `containerIdOrConfig`\n     * @returns {String} The container ID of the container\n     * @public\n     */\n    add: _container.addContainer,\n    unmount: function unmount(containerId) {\n      if (!containerId || typeof containerId !== 'string') {\n        throw new Error('Please assign the \"containerId\"!');\n      }\n      (0, _container.unmountContainer)(containerId);\n    },\n    /**\n     * Removes a container from Spotlight\n     *\n     * @param {String} containerId Container ID to remove\n     * @returns {Boolean} `true` if container removed, `false` if container does not exist\n     * @public\n     */\n    remove: function remove(containerId) {\n      if (!containerId || typeof containerId !== 'string') {\n        throw new Error('Please assign the \"containerId\"!');\n      }\n      if ((0, _container.getContainerConfig)(containerId)) {\n        (0, _container.removeContainer)(containerId);\n        if ((0, _container.getLastContainer)() === containerId) {\n          Spotlight.setActiveContainer(null);\n        }\n        return true;\n      }\n      return false;\n    },\n    /**\n     * Disables the selector rules of the specified container\n     *\n     * @param {String} containerId Container ID selector rules to disable\n     * @returns {Boolean} `true` if container's selector rules are disabled, `false` if container does not exist\n     * @public\n     */\n    disableSelector: function disableSelector(containerId) {\n      if ((0, _container.isContainer)(containerId)) {\n        (0, _container.configureContainer)(containerId, {\n          selectorDisabled: true\n        });\n        return true;\n      }\n      return false;\n    },\n    /**\n     * Enables the selector rules of the specified container\n     *\n     * @param {String} containerId Container ID selector rules to enable\n     * @returns {Boolean} `true` if container's selector rules are enabled, `false` if container does not exist\n     * @public\n     */\n    enableSelector: function enableSelector(containerId) {\n      if ((0, _container.isContainer)(containerId)) {\n        (0, _container.configureContainer)(containerId, {\n          selectorDisabled: false\n        });\n        return true;\n      }\n      return false;\n    },\n    /**\n     * Pauses Spotlight\n     *\n     * @function\n     * @returns {undefined}\n     * @public\n     */\n    pause: _Pause.pause,\n    /**\n     * Resumes Spotlight\n     *\n     * @function\n     * @returns {undefined}\n     * @public\n     */\n    resume: _Pause.resume,\n    // focus()\n    // focus(<containerId>)\n    // focus(<extSelector>)\n    /**\n     * Focuses the specified component ID, container ID, element selector, or the default\n     * container.\n     *\n     * If Spotlight is in pointer mode, focus is not changed but `elem` will be set as the last\n     * focused element of its spotlight containers.\n     *\n     * @param {String|Node} [elem] The spotlight ID or selector for either a spottable\n     *  component or a spotlight container, or spottable node. If not supplied, the default\n     *  container will be focused.\n     * @param {Object} [containerOption] The object including `enterTo` and `toOuterContainer`.\n     *  It works when the first parameter `elem` is either a spotlight container ID or a spotlight container node.\n     * @param {('last-focused'|'default-element'|'topmost')} [containerOption.enterTo] Specifies preferred\n     *  `enterTo` configuration.\n     * @param {Boolean} [containerOption.toOuterContainer] If the proper target is not found, search one\n     *  recursively to outer container.\n     * @returns {Boolean} `true` if focus successful, `false` if not.\n     * @public\n     */\n    focus: function focus(elem) {\n      var containerOption = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var target = elem;\n      var wasContainerId = false;\n      var currentContainerNode = null;\n      if (!elem) {\n        target = (0, _target.getTargetByContainer)();\n      } else if (typeof elem === 'string') {\n        if ((0, _container.getContainerConfig)(elem)) {\n          target = (0, _target.getTargetByContainer)(elem, containerOption.enterTo);\n          wasContainerId = true;\n          currentContainerNode = (0, _container.getContainerNode)(elem);\n        } else if (/^[\\w\\d-]+$/.test(elem)) {\n          // support component IDs consisting of alphanumeric, dash, or underscore\n          target = (0, _target.getTargetBySelector)(\"[data-spotlight-id=\".concat(elem, \"]\"));\n        } else {\n          target = (0, _target.getTargetBySelector)(elem);\n        }\n      } else if ((0, _container.isContainer)(elem)) {\n        target = (0, _target.getTargetByContainer)((0, _container.getContainerId)(elem), containerOption.enterTo);\n        currentContainerNode = elem;\n      }\n      var nextContainerIds = (0, _container.getContainersForNode)(target);\n      var nextContainerId = (0, _last[\"default\"])(nextContainerIds);\n      if ((0, _container.isNavigable)(target, nextContainerId, true)) {\n        var focused = focusElement(target, nextContainerIds);\n        if (!focused && wasContainerId) {\n          (0, _container.setLastContainer)(elem);\n        }\n        return focused;\n      } else if (wasContainerId) {\n        // if we failed to find a spottable target within the provided container, we'll set\n        // it as the active container to allow it to focus itself if its contents change\n        (0, _container.setLastContainer)(elem);\n      }\n      if (containerOption.toOuterContainer && currentContainerNode) {\n        var outerContainer = (0, _container.getContainersForNode)(currentContainerNode.parentElement).pop();\n        if (outerContainer) {\n          return this.focus(outerContainer, containerOption);\n        }\n      }\n      return false;\n    },\n    // move(<direction>)\n    // move(<direction>, <selector>)\n    /**\n     * Moves focus to the next spottable control in the direction specified. Optionally, a source\n     * element selector may be supplied as the starting point.\n     *\n     * @param {String} direction Direction to move, one of `'left'`, `'right'`, `'up'` or `'down'`\n     * @param {String|undefined} selector If supplied, the element to move from. If not supplied,\n     *\tthe currently focused item will be used.\n     * @returns {Boolean} `true` if focus successful, `false` if not.\n     * @public\n     */\n    move: function move(direction, selector) {\n      direction = direction.toLowerCase();\n      if (direction !== 'up' && direction !== 'down' && direction !== 'left' && direction !== 'right') {\n        return false;\n      }\n      var elem = selector ? (0, _utils.parseSelector)(selector)[0] : _getCurrent();\n      if (!elem) {\n        return false;\n      }\n      var containerIds = (0, _container.getContainersForNode)(elem);\n      if (!containerIds.length) {\n        return false;\n      }\n      return spotNext(direction, elem, containerIds);\n    },\n    /**\n     * Sets or clears the default container that will receive focus.\n     *\n     * @function\n     * @param {String} [containerId] The container ID or a falsy value to clear default\n     *                               container\n     * @returns {undefined}\n     * @public\n     */\n    setDefaultContainer: _container.setDefaultContainer,\n    /**\n     * Gets the currently active container.\n     *\n     * @returns {String} The id of the currently active container\n     * @public\n     */\n    getActiveContainer: function getActiveContainer() {\n      return (0, _container.getLastContainer)() || _container.rootContainerId;\n    },\n    /**\n     * Sets the currently active container.\n     *\n     * Note: If the current container is restricted to 'self-only' and `containerId` is not\n     * contained within the current container then the active container will not be updated.\n     *\n     * @param {String} [containerId] The id of the currently active container. If this is not\n     *\tprovided, the root container is set as the currently active container.\n     * @public\n     */\n    setActiveContainer: function setActiveContainer(containerId) {\n      if ((0, _container.mayActivateContainer)(containerId)) {\n        (0, _container.setLastContainer)(containerId || _container.rootContainerId);\n      }\n    },\n    /**\n     * Gets the current pointer mode\n     *\n     * @function\n     * @returns {Boolean} `true` if spotlight is in pointer mode\n     * @public\n     */\n    getPointerMode: _pointer.getPointerMode,\n    /**\n     * Sets the current pointer mode\n     *\n     * @function\n     * @param {Boolean} pointerMode The value of the pointer mode. This determines how\n     *\tspotlight manages focus change behaviors.\n     * @public\n     */\n    setPointerMode: _pointer.setPointerMode,\n    /**\n     * Gets the muted mode value of a spottable element.\n     *\n     * @param {Object} elem The dom element used to determine the muted status.\n     * @returns {Boolean} `true` if the passed-in control is in muted mode.\n     * @public\n     */\n    isMuted: function isMuted(elem) {\n      if (!elem) {\n        return false;\n      }\n      return (0, _utils.matchSelector)('[data-spotlight-container-muted=\"true\"] .' + _Spottable.spottableClass, elem);\n    },\n    /**\n     * Determines whether Spotlight is currently paused.\n     *\n     * @function\n     * @returns {Boolean} `true` if Spotlight is currently paused.\n     * @public\n     */\n    isPaused: _Pause.isPaused,\n    /**\n     * Determines whether an element is spottable.\n     *\n     * @param {Object} elem The dom element used to determine the spottable status.\n     * @returns {Boolean} `true` if the element being evaluated is currently spottable.\n     * @public\n     */\n    isSpottable: function isSpottable(elem) {\n      if (!elem) {\n        return false;\n      }\n      return (0, _target.isFocusable)(elem);\n    },\n    /**\n     * Returns the currently spotted control.\n     *\n     * @returns {Node} The control that currently has focus, if available\n     * @public\n     */\n    getCurrent: function getCurrent() {\n      return _getCurrent();\n    },\n    /**\n     * Returns a list of spottable elements wrapped by the supplied container.\n     *\n     * @param {String} containerId The id of the container used to determine the list of spottable elements\n     * @returns {Node[]} The spottable elements that are wrapped by the supplied container\n     * @public\n     */\n    getSpottableDescendants: function getSpottableDescendants(containerId) {\n      if (!containerId || typeof containerId !== 'string') {\n        throw new Error('Please assign the \"containerId\"!');\n      }\n      return (0, _container.getSpottableDescendants)(containerId);\n    },\n    /**\n     * Focuses the next spottable control from the position specified in the direction specified.\n     *\n     * @param {String} direction Direction to move, one of `'left'`, `'right'`, `'up'`, or `'down'`\n     * @param {Object} position `x` and `y` coordinates for the pointer\n     * @private\n     */\n    focusNextFromPoint: spotNextFromPoint\n  };\n  return exports;\n}();\nvar _default = exports[\"default\"] = Spotlight;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}