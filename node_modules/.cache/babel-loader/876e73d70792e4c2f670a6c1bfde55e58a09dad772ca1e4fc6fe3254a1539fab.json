{"ast":null,"code":"var _jsxFileName = \"/Users/meogyu/connected_front/src/views/Main.js\";\n// src/views/Main.js\nimport BodyText from '@enact/sandstone/BodyText';\nimport { Header, Panel } from '@enact/sandstone/Panels';\nimport TabLayout, { Tab } from '@enact/sandstone/TabLayout';\nimport { useMainState } from './MainState';\nimport SelectableVideoPlayer from './VideoPlayer';\nimport Scroller from '@enact/sandstone/Scroller';\nimport ImageItem from '@enact/sandstone/ImageItem';\nimport { useState, useEffect } from 'react';\nimport css from './Main.module.less';\nimport $L from '@enact/i18n/$L';\nimport { scaleToRem } from '@enact/ui/resolution';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tabsWithIcons = [{\n  title: 'Home',\n  icon: 'home'\n}, {\n  title: 'Button',\n  icon: 'gear'\n}, {\n  title: 'Item',\n  icon: 'trash'\n}];\nconst Main = props => {\n  const {\n    videoData\n  } = useMainState();\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const [currentPanel, setCurrentPanel] = useState('main'); // 현재 패널 상태\n\n  useEffect(() => {\n    console.log(videoData);\n  }, [videoData]);\n  const handleVideoClick = video => {\n    setSelectedVideo(video);\n    setCurrentPanel('videoPlayer'); // 비디오 플레이어 패널로 전환\n  };\n  const handleClosePlayer = () => {\n    setSelectedVideo(null);\n    setCurrentPanel('main'); // 메인 패널로 돌아감\n  };\n  const renderImageItem = video => /*#__PURE__*/_jsxDEV(ImageItem, {\n    inline: true,\n    label: video.title // 비디오 제목을 레이블로 사용\n    ,\n    src: video.thumbnail // 썸네일 소스\n    ,\n    style: {\n      width: scaleToRem(900),\n      height: scaleToRem(588)\n    },\n    onClick: () => handleVideoClick(video) // 클릭 시 비디오 선택\n    ,\n    children: [video.title, \" \"]\n  }, video.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Panel, {\n    ...props,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: $L('LG')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), currentPanel === 'main' && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        height: '100vh',\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(TabLayout, {\n        selected: \"videoTab\" // 기본 탭 설정\n        ,\n        onSelect: tabId => {\n          console.log('Selected Tab:', tabId);\n        },\n        orientation: \"vertical\",\n        style: {\n          width: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(Tab, {\n          title: tabsWithIcons[0].title,\n          icon: tabsWithIcons[0].icon,\n          children: /*#__PURE__*/_jsxDEV(Scroller, {\n            direction: \"vertical\",\n            style: {\n              height: 'calc(100vh - 120px)',\n              overflowY: 'auto'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: css.videoGrid,\n              children: videoData.length > 0 ? videoData.map(renderImageItem) : /*#__PURE__*/_jsxDEV(BodyText, {\n                children: '비디오가 없습니다.'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 94\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this), currentPanel === 'videoPlayer' && /*#__PURE__*/_jsxDEV(SelectableVideoPlayer, {\n      video: selectedVideo,\n      onClose: handleClosePlayer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\nexport default Main;","map":{"version":3,"names":["BodyText","Header","Panel","TabLayout","Tab","useMainState","SelectableVideoPlayer","Scroller","ImageItem","useState","useEffect","css","$L","scaleToRem","jsxDEV","_jsxDEV","tabsWithIcons","title","icon","Main","props","videoData","selectedVideo","setSelectedVideo","currentPanel","setCurrentPanel","console","log","handleVideoClick","video","handleClosePlayer","renderImageItem","inline","label","src","thumbnail","style","width","height","onClick","children","id","fileName","_jsxFileName","lineNumber","columnNumber","display","selected","onSelect","tabId","orientation","direction","overflowY","className","videoGrid","length","map","onClose"],"sources":["/Users/meogyu/connected_front/src/views/Main.js"],"sourcesContent":["// src/views/Main.js\nimport BodyText from '@enact/sandstone/BodyText';\nimport { Header, Panel } from '@enact/sandstone/Panels';\nimport TabLayout, { Tab } from '@enact/sandstone/TabLayout';\nimport { useMainState } from './MainState';\nimport SelectableVideoPlayer from './VideoPlayer';\nimport Scroller from '@enact/sandstone/Scroller';\nimport ImageItem from '@enact/sandstone/ImageItem'; \nimport { useState, useEffect } from 'react';\nimport css from './Main.module.less';\nimport $L from '@enact/i18n/$L';\nimport { scaleToRem } from '@enact/ui/resolution';\n\nconst tabsWithIcons = [\n    { title: 'Home', icon: 'home' },\n    { title: 'Button', icon: 'gear' },\n    { title: 'Item', icon: 'trash' }\n];\n\nconst Main = (props) => {\n    const { videoData } = useMainState();\n    const [selectedVideo, setSelectedVideo] = useState(null);\n    const [currentPanel, setCurrentPanel] = useState('main'); // 현재 패널 상태\n\n    useEffect(() => {\n        console.log(videoData);\n    }, [videoData]);\n\n    const handleVideoClick = (video) => {\n        setSelectedVideo(video);\n        setCurrentPanel('videoPlayer'); // 비디오 플레이어 패널로 전환\n    };\n\n    const handleClosePlayer = () => {\n        setSelectedVideo(null);\n        setCurrentPanel('main'); // 메인 패널로 돌아감\n    };\n\n    const renderImageItem = (video) => (\n        <ImageItem\n            inline\n            key={video.id}\n            label={video.title} // 비디오 제목을 레이블로 사용\n            src={video.thumbnail} // 썸네일 소스\n            style={{\n                width: scaleToRem(900),\n                height: scaleToRem(588)\n            }}\n            onClick={() => handleVideoClick(video)} // 클릭 시 비디오 선택\n        >\n            {video.title} {/* 비디오 제목을 표시 */}\n        </ImageItem>\n    );\n\n    return (\n        <Panel {...props}>\n            <Header title={$L('LG')} />\n\n            {currentPanel === 'main' && (\n                <div style={{ display: 'flex', height: '100vh', width: '100%' }}>\n                    <TabLayout\n                        selected=\"videoTab\" // 기본 탭 설정\n                        onSelect={(tabId) => {\n                            console.log('Selected Tab:', tabId);\n                        }}\n                        orientation=\"vertical\"\n                        style={{ width: '100%' }}\n                    >\n                        <Tab title={tabsWithIcons[0].title} icon={tabsWithIcons[0].icon}>\n                            <Scroller\n                                direction=\"vertical\"\n                                style={{ height: 'calc(100vh - 120px)', overflowY: 'auto' }}\n                            >\n                                <div className={css.videoGrid}>\n                                    {videoData.length > 0 ? videoData.map(renderImageItem) : <BodyText>{'비디오가 없습니다.'}</BodyText>}\n                                </div>\n                            </Scroller>\n                        </Tab>\n                        {/* 다른 탭들... */}\n                    </TabLayout>\n                </div>\n            )}\n\n            {currentPanel === 'videoPlayer' && (\n                <SelectableVideoPlayer video={selectedVideo} onClose={handleClosePlayer} />\n            )}\n        </Panel>\n    );\n};\n\nexport default Main;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}