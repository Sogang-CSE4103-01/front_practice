{"ast":null,"code":"var _jsxFileName = \"/Users/meogyu/connected_front/src/App/App.js\";\nimport { useState } from 'react';\nimport ThemeDecorator from '@enact/sandstone/ThemeDecorator';\nimport Panels from '@enact/sandstone/Panels';\nimport Main from '../views/Main';\nimport Login from '../views/Login';\nimport { useBackHandler, useCloseHandler, useDocumentEvent } from './AppState';\nimport { isDevServe } from '../libs/utils';\n\n/* istanbul ignore next */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nif (isDevServe()) {\n  window.webOSSystem = {\n    highContrast: 'off',\n    close: function () {},\n    platformBack: function () {},\n    PmLogString: function () {},\n    screenOrientation: 'landscape',\n    setWindowOrientation: function () {}\n  };\n}\nconst App = function (props) {\n  const [skinVariants, setSkinVariants] = useState({\n    highContrast: false\n  });\n  const [isLoginOpen, setIsLoginOpen] = useState(false); // 로그인 상태 관리\n  const handleBack = useBackHandler();\n  const handleClose = useCloseHandler();\n  useDocumentEvent(setSkinVariants);\n  function handleLoginOpen() {\n    setIsLoginOpen(true);\n  }\n  function handleLoginClose() {\n    setIsLoginOpen(false);\n  }\n  return /*#__PURE__*/_jsxDEV(Panels, {\n    ...props,\n    skinVariants: skinVariants,\n    onBack: handleBack,\n    onClose: handleClose,\n    children: isLoginOpen ? /*#__PURE__*/_jsxDEV(Login, {\n      onClose: handleLoginClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Main, {\n      onLoginOpen: handleLoginOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\nexport default ThemeDecorator(App);","map":{"version":3,"names":["useState","ThemeDecorator","Panels","Main","Login","useBackHandler","useCloseHandler","useDocumentEvent","isDevServe","jsxDEV","_jsxDEV","window","webOSSystem","highContrast","close","platformBack","PmLogString","screenOrientation","setWindowOrientation","App","props","skinVariants","setSkinVariants","isLoginOpen","setIsLoginOpen","handleBack","handleClose","handleLoginOpen","handleLoginClose","onBack","onClose","children","fileName","_jsxFileName","lineNumber","columnNumber","onLoginOpen"],"sources":["/Users/meogyu/connected_front/src/App/App.js"],"sourcesContent":["import { useState } from 'react';\nimport ThemeDecorator from '@enact/sandstone/ThemeDecorator';\nimport Panels from '@enact/sandstone/Panels';\nimport Main from '../views/Main';\nimport Login from '../views/Login';\nimport { useBackHandler, useCloseHandler, useDocumentEvent } from './AppState';\nimport { isDevServe } from '../libs/utils';\n\n/* istanbul ignore next */\nif (isDevServe()) {\n    window.webOSSystem = {\n        highContrast: 'off',\n        close: function() {},\n        platformBack: function() {},\n        PmLogString: function() {},\n        screenOrientation: 'landscape',\n        setWindowOrientation: function() {}\n    };\n}\n\nconst App = function(props) {\n    const [skinVariants, setSkinVariants] = useState({ highContrast: false });\n    const [isLoginOpen, setIsLoginOpen] = useState(false); // 로그인 상태 관리\n    const handleBack = useBackHandler();\n    const handleClose = useCloseHandler();\n    useDocumentEvent(setSkinVariants);\n\n    function handleLoginOpen() {\n        setIsLoginOpen(true);\n    }\n\n    function handleLoginClose() {\n        setIsLoginOpen(false);\n    }\n\n    return (\n        <Panels\n            {...props}\n            skinVariants={skinVariants}\n            onBack={handleBack}\n            onClose={handleClose}\n        >\n            {isLoginOpen ? (\n                <Login onClose={handleLoginClose} />\n            ) : (\n                <Main onLoginOpen={handleLoginOpen} />\n            )}\n        </Panels>\n    );\n};\n\nexport default ThemeDecorator(App);\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,cAAc,MAAM,iCAAiC;AAC5D,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,IAAI,MAAM,eAAe;AAChC,OAAOC,KAAK,MAAM,gBAAgB;AAClC,SAASC,cAAc,EAAEC,eAAe,EAAEC,gBAAgB,QAAQ,YAAY;AAC9E,SAASC,UAAU,QAAQ,eAAe;;AAE1C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,IAAIF,UAAU,CAAC,CAAC,EAAE;EACdG,MAAM,CAACC,WAAW,GAAG;IACjBC,YAAY,EAAE,KAAK;IACnBC,KAAK,EAAE,SAAAA,CAAA,EAAW,CAAC,CAAC;IACpBC,YAAY,EAAE,SAAAA,CAAA,EAAW,CAAC,CAAC;IAC3BC,WAAW,EAAE,SAAAA,CAAA,EAAW,CAAC,CAAC;IAC1BC,iBAAiB,EAAE,WAAW;IAC9BC,oBAAoB,EAAE,SAAAA,CAAA,EAAW,CAAC;EACtC,CAAC;AACL;AAEA,MAAMC,GAAG,GAAG,SAAAA,CAASC,KAAK,EAAE;EACxB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGtB,QAAQ,CAAC;IAAEa,YAAY,EAAE;EAAM,CAAC,CAAC;EACzE,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACvD,MAAMyB,UAAU,GAAGpB,cAAc,CAAC,CAAC;EACnC,MAAMqB,WAAW,GAAGpB,eAAe,CAAC,CAAC;EACrCC,gBAAgB,CAACe,eAAe,CAAC;EAEjC,SAASK,eAAeA,CAAA,EAAG;IACvBH,cAAc,CAAC,IAAI,CAAC;EACxB;EAEA,SAASI,gBAAgBA,CAAA,EAAG;IACxBJ,cAAc,CAAC,KAAK,CAAC;EACzB;EAEA,oBACId,OAAA,CAACR,MAAM;IAAA,GACCkB,KAAK;IACTC,YAAY,EAAEA,YAAa;IAC3BQ,MAAM,EAAEJ,UAAW;IACnBK,OAAO,EAAEJ,WAAY;IAAAK,QAAA,EAEpBR,WAAW,gBACRb,OAAA,CAACN,KAAK;MAAC0B,OAAO,EAAEF;IAAiB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEpCzB,OAAA,CAACP,IAAI;MAACiC,WAAW,EAAET;IAAgB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EACxC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEjB,CAAC;AAED,eAAelC,cAAc,CAACkB,GAAG,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}