{"ast":null,"code":"var _jsxFileName = \"/Users/meogyu/connected_front/src/App/App.js\";\nimport React, { useState } from 'react';\nimport { Route, Switch, BrowserRouter as Router } from 'react-router-dom';\nimport ThemeDecorator from '@enact/sandstone/ThemeDecorator';\nimport Panels from '@enact/sandstone/Panels';\nimport Login from '../views/Login';\nimport Main from '../views/Main';\nimport { useBackHandler, useCloseHandler, useDocumentEvent } from './AppState';\nimport { isDevServe } from '../libs/utils';\n\n/* istanbul ignore next */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nif (isDevServe()) {\n  window.webOSSystem = {\n    highContrast: 'off',\n    close: () => {},\n    platformBack: () => {},\n    PmLogString: () => {},\n    screenOrientation: 'landscape',\n    setWindowOrientation: () => {}\n  };\n}\nconst App = props => {\n  const [skinVariants, setSkinVariants] = useState({\n    highContrast: false\n  });\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // 로그인 상태 관리\n  const handleBack = useBackHandler();\n  const handleClose = useCloseHandler();\n  useDocumentEvent(setSkinVariants);\n  const handleLogin = () => {\n    setIsLoggedIn(true); // 로그인 상태 업데이트\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Panels, {\n      ...props,\n      skinVariants: skinVariants,\n      onBack: handleBack,\n      onClose: handleClose,\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(Login, {\n            handleLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 32\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this);\n};\nexport default ThemeDecorator(App);","map":{"version":3,"names":["React","useState","Route","Switch","BrowserRouter","Router","ThemeDecorator","Panels","Login","Main","useBackHandler","useCloseHandler","useDocumentEvent","isDevServe","jsxDEV","_jsxDEV","window","webOSSystem","highContrast","close","platformBack","PmLogString","screenOrientation","setWindowOrientation","App","props","skinVariants","setSkinVariants","isLoggedIn","setIsLoggedIn","handleBack","handleClose","handleLogin","children","onBack","onClose","path","exact","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/meogyu/connected_front/src/App/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Route, Switch, BrowserRouter as Router } from 'react-router-dom';\nimport ThemeDecorator from '@enact/sandstone/ThemeDecorator';\nimport Panels from '@enact/sandstone/Panels';\nimport Login from '../views/Login';\nimport Main from '../views/Main';\nimport { useBackHandler, useCloseHandler, useDocumentEvent } from './AppState';\nimport { isDevServe } from '../libs/utils';\n\n/* istanbul ignore next */\nif (isDevServe()) {\n\twindow.webOSSystem = {\n\t\thighContrast: 'off',\n\t\tclose: () => {},\n\t\tplatformBack: () => {},\n\t\tPmLogString: () => {},\n\t\tscreenOrientation: 'landscape',\n\t\tsetWindowOrientation: () => {}\n\t};\n}\n\nconst App = (props) => {\n\tconst [skinVariants, setSkinVariants] = useState({ highContrast: false });\n\tconst [isLoggedIn, setIsLoggedIn] = useState(false); // 로그인 상태 관리\n\tconst handleBack = useBackHandler();\n\tconst handleClose = useCloseHandler();\n\tuseDocumentEvent(setSkinVariants);\n\n\tconst handleLogin = () => {\n\t\tsetIsLoggedIn(true); // 로그인 상태 업데이트\n\t};\n\n\treturn (\n\t\t<Router>\n\t\t\t<Panels\n\t\t\t\t{...props}\n\t\t\t\tskinVariants={skinVariants}\n\t\t\t\tonBack={handleBack}\n\t\t\t\tonClose={handleClose}\n\t\t\t>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/\" exact>\n\t\t\t\t\t\t{isLoggedIn ? <Main /> : <Login handleLogin={handleLogin} />}\n\t\t\t\t\t</Route>\n\t\t\t\t\t{/* 다른 라우트를 추가할 수 있습니다 */}\n\t\t\t\t</Switch>\n\t\t\t</Panels>\n\t\t</Router>\n\t);\n};\n\nexport default ThemeDecorator(App);\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,KAAK,EAAEC,MAAM,EAAEC,aAAa,IAAIC,MAAM,QAAQ,kBAAkB;AACzE,OAAOC,cAAc,MAAM,iCAAiC;AAC5D,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,IAAI,MAAM,eAAe;AAChC,SAASC,cAAc,EAAEC,eAAe,EAAEC,gBAAgB,QAAQ,YAAY;AAC9E,SAASC,UAAU,QAAQ,eAAe;;AAE1C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,IAAIF,UAAU,CAAC,CAAC,EAAE;EACjBG,MAAM,CAACC,WAAW,GAAG;IACpBC,YAAY,EAAE,KAAK;IACnBC,KAAK,EAAEA,CAAA,KAAM,CAAC,CAAC;IACfC,YAAY,EAAEA,CAAA,KAAM,CAAC,CAAC;IACtBC,WAAW,EAAEA,CAAA,KAAM,CAAC,CAAC;IACrBC,iBAAiB,EAAE,WAAW;IAC9BC,oBAAoB,EAAEA,CAAA,KAAM,CAAC;EAC9B,CAAC;AACF;AAEA,MAAMC,GAAG,GAAIC,KAAK,IAAK;EACtB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAG1B,QAAQ,CAAC;IAAEiB,YAAY,EAAE;EAAM,CAAC,CAAC;EACzE,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACrD,MAAM6B,UAAU,GAAGpB,cAAc,CAAC,CAAC;EACnC,MAAMqB,WAAW,GAAGpB,eAAe,CAAC,CAAC;EACrCC,gBAAgB,CAACe,eAAe,CAAC;EAEjC,MAAMK,WAAW,GAAGA,CAAA,KAAM;IACzBH,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;EACtB,CAAC;;EAED,oBACCd,OAAA,CAACV,MAAM;IAAA4B,QAAA,eACNlB,OAAA,CAACR,MAAM;MAAA,GACFkB,KAAK;MACTC,YAAY,EAAEA,YAAa;MAC3BQ,MAAM,EAAEJ,UAAW;MACnBK,OAAO,EAAEJ,WAAY;MAAAE,QAAA,eAErBlB,OAAA,CAACZ,MAAM;QAAA8B,QAAA,eACNlB,OAAA,CAACb,KAAK;UAACkC,IAAI,EAAC,GAAG;UAACC,KAAK;UAAAJ,QAAA,EACnBL,UAAU,gBAAGb,OAAA,CAACN,IAAI;YAAA6B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAAG1B,OAAA,CAACP,KAAK;YAACwB,WAAW,EAAEA;UAAY;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAED;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX,CAAC;AAED,eAAenC,cAAc,CAACkB,GAAG,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}