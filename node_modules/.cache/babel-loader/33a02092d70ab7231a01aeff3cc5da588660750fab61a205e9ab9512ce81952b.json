{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.limitNumberLength = exports.extractInputProps = exports.extractInputFieldProps = exports.convertToPasswordFormat = exports.calcAriaLabel = exports.SEPARATE_DIGITS_LIMIT = exports.OVERLAY_JOINED_DIGITS_LIMIT = exports.FULLSCREEN_JOINED_DIGITS_LIMIT = exports.DEFAULT_LENGTH = void 0;\nvar _$L = _interopRequireDefault(require(\"../internal/$L\"));\nvar _warning = _interopRequireDefault(require(\"warning\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n// A default value for the numeric field length. Used by maxLength and minLength.\nvar DEFAULT_LENGTH = exports.DEFAULT_LENGTH = 4;\n\n// The cutoff length, at which point the numeric field switches from separated boxes to one box\nvar SEPARATE_DIGITS_LIMIT = exports.SEPARATE_DIGITS_LIMIT = 6;\nvar OVERLAY_JOINED_DIGITS_LIMIT = exports.OVERLAY_JOINED_DIGITS_LIMIT = 10;\nvar FULLSCREEN_JOINED_DIGITS_LIMIT = exports.FULLSCREEN_JOINED_DIGITS_LIMIT = 25;\n\n/**\n * Determines the `aria-label` for an Input\n *\n * @method\n * @memberof sandstone/Input\n * @param   {String}  prefix   Text to precede the value in the aria-label\n * @param   {String}  type     `type` of the Input\n * @param   {String}  [value]  Current value of the input\n * @returns {String}           `aria-label` value\n * @private\n */\nvar calcAriaLabel = exports.calcAriaLabel = function calcAriaLabel(prefix, type) {\n  var value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  var hint = (0, _$L[\"default\"])('Input field');\n  if ((type === 'password' || type === 'passwordtel') && value) {\n    var character = value.length > 1 ? (0, _$L[\"default\"])('characters') : (0, _$L[\"default\"])('character');\n    value = \"\".concat(value.length, \" \").concat(character);\n  }\n  return \"\".concat(prefix, \" \").concat(value, \" \").concat(hint);\n};\nvar convertToPasswordFormat = exports.convertToPasswordFormat = function convertToPasswordFormat(value) {\n  return '*'.repeat(value && value.length);\n};\n\n/**\n * Removes `<InputField>` related props from `props` and returns them in a new object.\n *\n * Useful when redirecting `<InputField>` related props from a non-input root element to the\n * `<InputField>` component.\n *\n * @method\n * @memberof sandstone/Input\n * @param   {Object} props  Props object\n * @returns {Object}        input related props\n * @private\n */\nvar extractInputFieldProps = exports.extractInputFieldProps = function extractInputFieldProps(props) {\n  var inputProps = {};\n  Object.keys(props).forEach(function (key) {\n    switch (key) {\n      case 'autoComplete':\n      case 'data-webos-voice-group-label':\n      case 'data-webos-voice-intent':\n      case 'data-webos-voice-label':\n      case 'disabled':\n      case 'dismissOnEnter':\n      case 'iconAfter':\n      case 'iconBefore':\n      case 'invalid':\n      case 'invalidMessage':\n      case 'list':\n      case 'maxLength':\n      case 'minLength':\n      case 'onActivate':\n      case 'onChange':\n      case 'onBlur':\n      case 'onDeactivate':\n      case 'pattern':\n      case 'required':\n      case 'size':\n        inputProps[key] = props[key];\n        delete props[key];\n    }\n  });\n  return inputProps;\n};\n\n/**\n * Removes `<input>` related props from `props` and returns them in a new object.\n *\n * Useful when redirecting `<input>` related props from a non-input root element to the `<input>`\n * element.\n *\n * @method\n * @memberof sandstone/Input\n * @param   {Object} props  Props object\n * @returns {Object}        input related props\n * @private\n */\nvar extractInputProps = exports.extractInputProps = function extractInputProps(props) {\n  var inputProps = {};\n  Object.keys(props).forEach(function (key) {\n    switch (key) {\n      case 'autoComplete':\n      case 'list':\n      case 'maxLength':\n      case 'minLength':\n      case 'pattern':\n      case 'required':\n      case 'size':\n        inputProps[key] = props[key];\n        delete props[key];\n    }\n  });\n  return inputProps;\n};\nvar limitNumberLength = exports.limitNumberLength = function limitNumberLength(popupType, length) {\n  var limitedLength = length;\n  if (popupType === 'fullscreen') {\n    if (length > FULLSCREEN_JOINED_DIGITS_LIMIT) {\n      limitedLength = FULLSCREEN_JOINED_DIGITS_LIMIT;\n      process.env.NODE_ENV !== \"production\" ? (0, _warning[\"default\"])(false, \"Max length of fullscreen type input must not exceed \".concat(FULLSCREEN_JOINED_DIGITS_LIMIT, \" digits.\")) : void 0;\n    }\n  } else if (popupType === 'overlay') {\n    if (length > OVERLAY_JOINED_DIGITS_LIMIT) {\n      limitedLength = OVERLAY_JOINED_DIGITS_LIMIT;\n      process.env.NODE_ENV !== \"production\" ? (0, _warning[\"default\"])(false, \"Max length of overlay type input must not exceed \".concat(OVERLAY_JOINED_DIGITS_LIMIT, \" digits.\")) : void 0;\n    }\n  }\n  return limitedLength;\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","limitNumberLength","extractInputProps","extractInputFieldProps","convertToPasswordFormat","calcAriaLabel","SEPARATE_DIGITS_LIMIT","OVERLAY_JOINED_DIGITS_LIMIT","FULLSCREEN_JOINED_DIGITS_LIMIT","DEFAULT_LENGTH","_$L","_interopRequireDefault","require","_warning","obj","__esModule","prefix","type","arguments","length","undefined","hint","character","concat","repeat","props","inputProps","keys","forEach","key","popupType","limitedLength","process","env","NODE_ENV"],"sources":["/Users/meogyu/connected_front/node_modules/@enact/sandstone/Input/util.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.limitNumberLength = exports.extractInputProps = exports.extractInputFieldProps = exports.convertToPasswordFormat = exports.calcAriaLabel = exports.SEPARATE_DIGITS_LIMIT = exports.OVERLAY_JOINED_DIGITS_LIMIT = exports.FULLSCREEN_JOINED_DIGITS_LIMIT = exports.DEFAULT_LENGTH = void 0;\nvar _$L = _interopRequireDefault(require(\"../internal/$L\"));\nvar _warning = _interopRequireDefault(require(\"warning\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n// A default value for the numeric field length. Used by maxLength and minLength.\nvar DEFAULT_LENGTH = exports.DEFAULT_LENGTH = 4;\n\n// The cutoff length, at which point the numeric field switches from separated boxes to one box\nvar SEPARATE_DIGITS_LIMIT = exports.SEPARATE_DIGITS_LIMIT = 6;\nvar OVERLAY_JOINED_DIGITS_LIMIT = exports.OVERLAY_JOINED_DIGITS_LIMIT = 10;\nvar FULLSCREEN_JOINED_DIGITS_LIMIT = exports.FULLSCREEN_JOINED_DIGITS_LIMIT = 25;\n\n/**\n * Determines the `aria-label` for an Input\n *\n * @method\n * @memberof sandstone/Input\n * @param   {String}  prefix   Text to precede the value in the aria-label\n * @param   {String}  type     `type` of the Input\n * @param   {String}  [value]  Current value of the input\n * @returns {String}           `aria-label` value\n * @private\n */\nvar calcAriaLabel = exports.calcAriaLabel = function calcAriaLabel(prefix, type) {\n  var value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  var hint = (0, _$L[\"default\"])('Input field');\n  if ((type === 'password' || type === 'passwordtel') && value) {\n    var character = value.length > 1 ? (0, _$L[\"default\"])('characters') : (0, _$L[\"default\"])('character');\n    value = \"\".concat(value.length, \" \").concat(character);\n  }\n  return \"\".concat(prefix, \" \").concat(value, \" \").concat(hint);\n};\nvar convertToPasswordFormat = exports.convertToPasswordFormat = function convertToPasswordFormat(value) {\n  return '*'.repeat(value && value.length);\n};\n\n/**\n * Removes `<InputField>` related props from `props` and returns them in a new object.\n *\n * Useful when redirecting `<InputField>` related props from a non-input root element to the\n * `<InputField>` component.\n *\n * @method\n * @memberof sandstone/Input\n * @param   {Object} props  Props object\n * @returns {Object}        input related props\n * @private\n */\nvar extractInputFieldProps = exports.extractInputFieldProps = function extractInputFieldProps(props) {\n  var inputProps = {};\n  Object.keys(props).forEach(function (key) {\n    switch (key) {\n      case 'autoComplete':\n      case 'data-webos-voice-group-label':\n      case 'data-webos-voice-intent':\n      case 'data-webos-voice-label':\n      case 'disabled':\n      case 'dismissOnEnter':\n      case 'iconAfter':\n      case 'iconBefore':\n      case 'invalid':\n      case 'invalidMessage':\n      case 'list':\n      case 'maxLength':\n      case 'minLength':\n      case 'onActivate':\n      case 'onChange':\n      case 'onBlur':\n      case 'onDeactivate':\n      case 'pattern':\n      case 'required':\n      case 'size':\n        inputProps[key] = props[key];\n        delete props[key];\n    }\n  });\n  return inputProps;\n};\n\n/**\n * Removes `<input>` related props from `props` and returns them in a new object.\n *\n * Useful when redirecting `<input>` related props from a non-input root element to the `<input>`\n * element.\n *\n * @method\n * @memberof sandstone/Input\n * @param   {Object} props  Props object\n * @returns {Object}        input related props\n * @private\n */\nvar extractInputProps = exports.extractInputProps = function extractInputProps(props) {\n  var inputProps = {};\n  Object.keys(props).forEach(function (key) {\n    switch (key) {\n      case 'autoComplete':\n      case 'list':\n      case 'maxLength':\n      case 'minLength':\n      case 'pattern':\n      case 'required':\n      case 'size':\n        inputProps[key] = props[key];\n        delete props[key];\n    }\n  });\n  return inputProps;\n};\nvar limitNumberLength = exports.limitNumberLength = function limitNumberLength(popupType, length) {\n  var limitedLength = length;\n  if (popupType === 'fullscreen') {\n    if (length > FULLSCREEN_JOINED_DIGITS_LIMIT) {\n      limitedLength = FULLSCREEN_JOINED_DIGITS_LIMIT;\n      process.env.NODE_ENV !== \"production\" ? (0, _warning[\"default\"])(false, \"Max length of fullscreen type input must not exceed \".concat(FULLSCREEN_JOINED_DIGITS_LIMIT, \" digits.\")) : void 0;\n    }\n  } else if (popupType === 'overlay') {\n    if (length > OVERLAY_JOINED_DIGITS_LIMIT) {\n      limitedLength = OVERLAY_JOINED_DIGITS_LIMIT;\n      process.env.NODE_ENV !== \"production\" ? (0, _warning[\"default\"])(false, \"Max length of overlay type input must not exceed \".concat(OVERLAY_JOINED_DIGITS_LIMIT, \" digits.\")) : void 0;\n    }\n  }\n  return limitedLength;\n};"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,iBAAiB,GAAGF,OAAO,CAACG,iBAAiB,GAAGH,OAAO,CAACI,sBAAsB,GAAGJ,OAAO,CAACK,uBAAuB,GAAGL,OAAO,CAACM,aAAa,GAAGN,OAAO,CAACO,qBAAqB,GAAGP,OAAO,CAACQ,2BAA2B,GAAGR,OAAO,CAACS,8BAA8B,GAAGT,OAAO,CAACU,cAAc,GAAG,KAAK,CAAC;AACjS,IAAIC,GAAG,GAAGC,sBAAsB,CAACC,OAAO,CAAC,gBAAgB,CAAC,CAAC;AAC3D,IAAIC,QAAQ,GAAGF,sBAAsB,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC;AACzD,SAASD,sBAAsBA,CAACG,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IAAE,SAAS,EAAEA;EAAI,CAAC;AAAE;AAChG;AACA,IAAIL,cAAc,GAAGV,OAAO,CAACU,cAAc,GAAG,CAAC;;AAE/C;AACA,IAAIH,qBAAqB,GAAGP,OAAO,CAACO,qBAAqB,GAAG,CAAC;AAC7D,IAAIC,2BAA2B,GAAGR,OAAO,CAACQ,2BAA2B,GAAG,EAAE;AAC1E,IAAIC,8BAA8B,GAAGT,OAAO,CAACS,8BAA8B,GAAG,EAAE;;AAEhF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIH,aAAa,GAAGN,OAAO,CAACM,aAAa,GAAG,SAASA,aAAaA,CAACW,MAAM,EAAEC,IAAI,EAAE;EAC/E,IAAIjB,KAAK,GAAGkB,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE;EAClF,IAAIG,IAAI,GAAG,CAAC,CAAC,EAAEX,GAAG,CAAC,SAAS,CAAC,EAAE,aAAa,CAAC;EAC7C,IAAI,CAACO,IAAI,KAAK,UAAU,IAAIA,IAAI,KAAK,aAAa,KAAKjB,KAAK,EAAE;IAC5D,IAAIsB,SAAS,GAAGtB,KAAK,CAACmB,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,EAAET,GAAG,CAAC,SAAS,CAAC,EAAE,YAAY,CAAC,GAAG,CAAC,CAAC,EAAEA,GAAG,CAAC,SAAS,CAAC,EAAE,WAAW,CAAC;IACvGV,KAAK,GAAG,EAAE,CAACuB,MAAM,CAACvB,KAAK,CAACmB,MAAM,EAAE,GAAG,CAAC,CAACI,MAAM,CAACD,SAAS,CAAC;EACxD;EACA,OAAO,EAAE,CAACC,MAAM,CAACP,MAAM,EAAE,GAAG,CAAC,CAACO,MAAM,CAACvB,KAAK,EAAE,GAAG,CAAC,CAACuB,MAAM,CAACF,IAAI,CAAC;AAC/D,CAAC;AACD,IAAIjB,uBAAuB,GAAGL,OAAO,CAACK,uBAAuB,GAAG,SAASA,uBAAuBA,CAACJ,KAAK,EAAE;EACtG,OAAO,GAAG,CAACwB,MAAM,CAACxB,KAAK,IAAIA,KAAK,CAACmB,MAAM,CAAC;AAC1C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIhB,sBAAsB,GAAGJ,OAAO,CAACI,sBAAsB,GAAG,SAASA,sBAAsBA,CAACsB,KAAK,EAAE;EACnG,IAAIC,UAAU,GAAG,CAAC,CAAC;EACnB7B,MAAM,CAAC8B,IAAI,CAACF,KAAK,CAAC,CAACG,OAAO,CAAC,UAAUC,GAAG,EAAE;IACxC,QAAQA,GAAG;MACT,KAAK,cAAc;MACnB,KAAK,8BAA8B;MACnC,KAAK,yBAAyB;MAC9B,KAAK,wBAAwB;MAC7B,KAAK,UAAU;MACf,KAAK,gBAAgB;MACrB,KAAK,WAAW;MAChB,KAAK,YAAY;MACjB,KAAK,SAAS;MACd,KAAK,gBAAgB;MACrB,KAAK,MAAM;MACX,KAAK,WAAW;MAChB,KAAK,WAAW;MAChB,KAAK,YAAY;MACjB,KAAK,UAAU;MACf,KAAK,QAAQ;MACb,KAAK,cAAc;MACnB,KAAK,SAAS;MACd,KAAK,UAAU;MACf,KAAK,MAAM;QACTH,UAAU,CAACG,GAAG,CAAC,GAAGJ,KAAK,CAACI,GAAG,CAAC;QAC5B,OAAOJ,KAAK,CAACI,GAAG,CAAC;IACrB;EACF,CAAC,CAAC;EACF,OAAOH,UAAU;AACnB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIxB,iBAAiB,GAAGH,OAAO,CAACG,iBAAiB,GAAG,SAASA,iBAAiBA,CAACuB,KAAK,EAAE;EACpF,IAAIC,UAAU,GAAG,CAAC,CAAC;EACnB7B,MAAM,CAAC8B,IAAI,CAACF,KAAK,CAAC,CAACG,OAAO,CAAC,UAAUC,GAAG,EAAE;IACxC,QAAQA,GAAG;MACT,KAAK,cAAc;MACnB,KAAK,MAAM;MACX,KAAK,WAAW;MAChB,KAAK,WAAW;MAChB,KAAK,SAAS;MACd,KAAK,UAAU;MACf,KAAK,MAAM;QACTH,UAAU,CAACG,GAAG,CAAC,GAAGJ,KAAK,CAACI,GAAG,CAAC;QAC5B,OAAOJ,KAAK,CAACI,GAAG,CAAC;IACrB;EACF,CAAC,CAAC;EACF,OAAOH,UAAU;AACnB,CAAC;AACD,IAAIzB,iBAAiB,GAAGF,OAAO,CAACE,iBAAiB,GAAG,SAASA,iBAAiBA,CAAC6B,SAAS,EAAEX,MAAM,EAAE;EAChG,IAAIY,aAAa,GAAGZ,MAAM;EAC1B,IAAIW,SAAS,KAAK,YAAY,EAAE;IAC9B,IAAIX,MAAM,GAAGX,8BAA8B,EAAE;MAC3CuB,aAAa,GAAGvB,8BAA8B;MAC9CwB,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG,CAAC,CAAC,EAAErB,QAAQ,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,sDAAsD,CAACU,MAAM,CAACf,8BAA8B,EAAE,UAAU,CAAC,CAAC,GAAG,KAAK,CAAC;IAC7L;EACF,CAAC,MAAM,IAAIsB,SAAS,KAAK,SAAS,EAAE;IAClC,IAAIX,MAAM,GAAGZ,2BAA2B,EAAE;MACxCwB,aAAa,GAAGxB,2BAA2B;MAC3CyB,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG,CAAC,CAAC,EAAErB,QAAQ,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,mDAAmD,CAACU,MAAM,CAAChB,2BAA2B,EAAE,UAAU,CAAC,CAAC,GAAG,KAAK,CAAC;IACvL;EACF;EACA,OAAOwB,aAAa;AACtB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}