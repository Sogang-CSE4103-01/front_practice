{"ast":null,"code":"var _jsxFileName = \"/home/connected/enact-template/src/App/App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// src/App.js\n/*\nimport { useState } from 'react';\nimport ThemeDecorator from '@enact/sandstone/ThemeDecorator';\nimport Panels from '@enact/sandstone/Panels';\nimport Main from '../views/Main';\nimport { useBackHandler, useCloseHandler, useDocumentEvent } from './AppState';\nimport { isDevServe } from '../libs/utils';\nimport Login from '../views/Login';\nimport { useLogin } from '../views/LoginState';\n\nif (isDevServe()) {\n\twindow.webOSSystem = {\n\t\thighContrast: 'off',\n\t\tclose: () => {},\n\t\tplatformBack: () => {},\n\t\tPmLogString: () => {},\n\t\tscreenOrientation: 'landscape',\n\t\tsetWindowOrientation: () => {}\n\t};\n}\n\nconst App = (props) => {\n\tconst [skinVariants, setSkinVariants] = useState({ highContrast: false });\n\tconst handleBack = useBackHandler();\n\tconst handleClose = useCloseHandler();\n\tconst { isLoginOpen, handleLoginClose, isSignupOpen, handleBackToLogin, handleSignUp } = useLogin();\n\tuseDocumentEvent(setSkinVariants);\n\n\treturn (\n\t\t<Panels\n\t\t\t{...props}\n\t\t\tskinVariants={skinVariants}\n\t\t\tonBack={handleBack}\n\t\t\tonClose={handleClose}\n\t\t>\n\t\t\t{isLoginOpen ? (\n\t\t\t\t<Login onClose={handleLoginClose} />\n\t\t\t) : (\n\t\t\t\t<Main />\n\t\t\t) : (\n\t\t\t\t<Signup onLoginClick={handleGoToLogin} onSignup={handleSignup} />\n\t\t\t)}\n\n\t\t</Panels>\n\t);\n};\n\nexport default ThemeDecorator(App); */\n\nconst App = () => {\n  const [currentPage, setCurrentPage] = useState('login'); // 현재 페이지 상태\n  const [userInfo, setUserInfo] = useState({\n    username: '',\n    password: ''\n  }); // 회원 정보 저장\n\n  const goToSignup = () => setCurrentPage('signup'); // 회원가입 화면으로 이동\n  const goToLogin = () => setCurrentPage('login'); // 로그인 화면으로 이동\n  const goToMain = () => setCurrentPage('main'); // 메인 화면으로 이동\n  const handleSignup = (username, password) => {\n    setUserInfo({\n      username,\n      password\n    });\n    setCurrentPage('login'); // 회원가입 완료 후 로그인 화면으로 이동\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [currentPage === 'login' && /*#__PURE__*/_jsxDEV(Login, {\n      onClose: goToMain,\n      onSignupClick: goToSignup // 미리 정의된 함수 사용\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this), currentPage === 'signup' && /*#__PURE__*/_jsxDEV(Signup, {\n      onLoginClick: goToLogin // 미리 정의된 함수 사용\n      ,\n      onSignup: handleSignup // 미리 정의된 함수 사용\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this), currentPage === 'main' && /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 40\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"names":["App","currentPage","setCurrentPage","useState","userInfo","setUserInfo","username","password","goToSignup","goToLogin","goToMain","handleSignup","_jsxDEV","children","Login","onClose","onSignupClick","fileName","_jsxFileName","lineNumber","columnNumber","Signup","onLoginClick","onSignup","Main"],"sources":["/home/connected/enact-template/src/App/App.js"],"sourcesContent":["// src/App.js\n/*\nimport { useState } from 'react';\nimport ThemeDecorator from '@enact/sandstone/ThemeDecorator';\nimport Panels from '@enact/sandstone/Panels';\nimport Main from '../views/Main';\nimport { useBackHandler, useCloseHandler, useDocumentEvent } from './AppState';\nimport { isDevServe } from '../libs/utils';\nimport Login from '../views/Login';\nimport { useLogin } from '../views/LoginState';\n\nif (isDevServe()) {\n\twindow.webOSSystem = {\n\t\thighContrast: 'off',\n\t\tclose: () => {},\n\t\tplatformBack: () => {},\n\t\tPmLogString: () => {},\n\t\tscreenOrientation: 'landscape',\n\t\tsetWindowOrientation: () => {}\n\t};\n}\n\nconst App = (props) => {\n\tconst [skinVariants, setSkinVariants] = useState({ highContrast: false });\n\tconst handleBack = useBackHandler();\n\tconst handleClose = useCloseHandler();\n\tconst { isLoginOpen, handleLoginClose, isSignupOpen, handleBackToLogin, handleSignUp } = useLogin();\n\tuseDocumentEvent(setSkinVariants);\n\n\treturn (\n\t\t<Panels\n\t\t\t{...props}\n\t\t\tskinVariants={skinVariants}\n\t\t\tonBack={handleBack}\n\t\t\tonClose={handleClose}\n\t\t>\n\t\t\t{isLoginOpen ? (\n\t\t\t\t<Login onClose={handleLoginClose} />\n\t\t\t) : (\n\t\t\t\t<Main />\n\t\t\t) : (\n\t\t\t\t<Signup onLoginClick={handleGoToLogin} onSignup={handleSignup} />\n\t\t\t)}\n\n\t\t</Panels>\n\t);\n};\n\nexport default ThemeDecorator(App); */\n\n\nconst App = () => {\n    const [currentPage, setCurrentPage] = useState('login'); // 현재 페이지 상태\n    const [userInfo, setUserInfo] = useState({ username: '', password: '' }); // 회원 정보 저장\n\n    const goToSignup = () => setCurrentPage('signup'); // 회원가입 화면으로 이동\n    const goToLogin = () => setCurrentPage('login');   // 로그인 화면으로 이동\n    const goToMain = () => setCurrentPage('main');     // 메인 화면으로 이동\n    const handleSignup = (username, password) => {\n        setUserInfo({ username, password });\n        setCurrentPage('login'); // 회원가입 완료 후 로그인 화면으로 이동\n    };\n\n    return (\n        <div>\n            {currentPage === 'login' && (\n                <Login\n                    onClose={goToMain}\n                    onSignupClick={goToSignup} // 미리 정의된 함수 사용\n                />\n            )}\n            {currentPage === 'signup' && (\n                <Signup\n                    onLoginClick={goToLogin} // 미리 정의된 함수 사용\n                    onSignup={handleSignup} // 미리 정의된 함수 사용\n                />\n            )}\n            {currentPage === 'main' && <Main />}\n        </div>\n    );\n};\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,MAAMA,GAAG,GAAGA,CAAA,KAAM;EACd,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;EACzD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGF,QAAQ,CAAC;IAAEG,QAAQ,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC,CAAC,CAAC;;EAE1E,MAAMC,UAAU,GAAGA,CAAA,KAAMN,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAMO,SAAS,GAAGA,CAAA,KAAMP,cAAc,CAAC,OAAO,CAAC,CAAC,CAAG;EACnD,MAAMQ,QAAQ,GAAGA,CAAA,KAAMR,cAAc,CAAC,MAAM,CAAC,CAAC,CAAK;EACnD,MAAMS,YAAY,GAAGA,CAACL,QAAQ,EAAEC,QAAQ,KAAK;IACzCF,WAAW,CAAC;MAAEC,QAAQ;MAAEC;IAAS,CAAC,CAAC;IACnCL,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC;EAC7B,CAAC;;EAED,oBACIU,OAAA;IAAAC,QAAA,GACKZ,WAAW,KAAK,OAAO,iBACpBW,OAAA,CAACE,KAAK;MACFC,OAAO,EAAEL,QAAS;MAClBM,aAAa,EAAER,UAAW,CAAC;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CACJ,EACAnB,WAAW,KAAK,QAAQ,iBACrBW,OAAA,CAACS,MAAM;MACHC,YAAY,EAAEb,SAAU,CAAC;MAAA;MACzBc,QAAQ,EAAEZ,YAAa,CAAC;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CACJ,EACAnB,WAAW,KAAK,MAAM,iBAAIW,OAAA,CAACY,IAAI;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEd,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}