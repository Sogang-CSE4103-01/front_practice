{"ast":null,"code":"var _jsxFileName = \"/Users/meogyu/connected_front/src/views/Main.js\";\nimport BodyText from '@enact/sandstone/BodyText';\nimport { Header, Panel } from '@enact/sandstone/Panels';\nimport TabLayout, { Tab } from '@enact/sandstone/TabLayout';\nimport { useMainState } from './MainState';\nimport SelectableVideoPlayer from './VideoPlayer';\nimport Scroller from '@enact/sandstone/Scroller';\nimport ImageItem from '@enact/sandstone/ImageItem'; // ImageItem import\nimport css from './Main.module.less';\nimport $L from '@enact/i18n/$L';\nimport { scaleToRem } from '@enact/ui/resolution';\nimport { useState, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = props => {\n  const {\n    videoData\n  } = useMainState();\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const [activeTab, setActiveTab] = useState('watching');\n  useEffect(() => {\n    console.log(videoData);\n  }, [videoData]);\n  const handleVideoClick = video => {\n    setSelectedVideo(video);\n  };\n  const handleClosePlayer = () => {\n    setSelectedVideo(null);\n  };\n  const renderImageItem = video => /*#__PURE__*/_jsxDEV(ImageItem, {\n    inline: true,\n    label: video.title // 비디오 제목을 레이블로 사용\n    ,\n    src: video.thumbnail // 썸네일 소스\n    ,\n    style: {\n      width: scaleToRem(900),\n      height: scaleToRem(588)\n    },\n    onClick: () => handleVideoClick(video) // 클릭 시 비디오 선택\n    ,\n    children: [video.title, \" \"]\n  }, video.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Panel, {\n    ...props,\n    children: [selectedVideo && /*#__PURE__*/_jsxDEV(SelectableVideoPlayer, {\n      video: selectedVideo,\n      onClose: handleClosePlayer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Scroller, {\n      direction: \"vertical\",\n      style: {\n        height: '100vh',\n        overflowY: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        title: $L('LG')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TabLayout, {\n        selected: activeTab,\n        onSelect: tabId => {\n          console.log('Selected Tab:', tabId);\n          const selectedTabKey = ['watching', 'recommended', 'additional'][tabId.index];\n          setActiveTab(selectedTabKey);\n        },\n        orientation: \"horizontal\",\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          title: $L('시청 중인 영상'),\n          children: /*#__PURE__*/_jsxDEV(Scroller, {\n            direction: \"vertical\",\n            style: {\n              height: '1000px',\n              overflowY: 'auto'\n            } // 각 탭의 스크롤 설정\n            ,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: css.videoGrid,\n              children: videoData.length > 0 ? videoData.slice(0, 5).map(renderImageItem) : /*#__PURE__*/_jsxDEV(BodyText, {\n                children: '비디오가 없습니다.'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 102\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          title: $L('추천 영상'),\n          children: /*#__PURE__*/_jsxDEV(Scroller, {\n            direction: \"vertical\",\n            style: {\n              height: '400px',\n              overflowY: 'auto'\n            } // 각 탭의 스크롤 설정\n            ,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: css.videoGrid,\n              children: videoData.length > 5 ? videoData.slice(5, 10).map(renderImageItem) : /*#__PURE__*/_jsxDEV(BodyText, {\n                children: '비디오가 없습니다.'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 103\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          title: $L('추가 섹션'),\n          children: /*#__PURE__*/_jsxDEV(Scroller, {\n            direction: \"vertical\",\n            style: {\n              height: '400px',\n              overflowY: 'auto'\n            } // 각 탭의 스크롤 설정\n            ,\n            children: /*#__PURE__*/_jsxDEV(BodyText, {\n              className: css.description,\n              children: Array(20).fill('이곳은 추가 섹션입니다. 더 많은 내용을 추가해 주세요.').map((text, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: text\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\nexport default Main;","map":{"version":3,"names":["BodyText","Header","Panel","TabLayout","Tab","useMainState","SelectableVideoPlayer","Scroller","ImageItem","css","$L","scaleToRem","useState","useEffect","useCallback","jsxDEV","_jsxDEV","Main","props","videoData","selectedVideo","setSelectedVideo","activeTab","setActiveTab","console","log","handleVideoClick","video","handleClosePlayer","renderImageItem","inline","label","title","src","thumbnail","style","width","height","onClick","children","id","fileName","_jsxFileName","lineNumber","columnNumber","onClose","direction","overflowY","selected","onSelect","tabId","selectedTabKey","index","orientation","className","videoGrid","length","slice","map","description","Array","fill","text"],"sources":["/Users/meogyu/connected_front/src/views/Main.js"],"sourcesContent":["import BodyText from '@enact/sandstone/BodyText';\nimport { Header, Panel } from '@enact/sandstone/Panels';\nimport TabLayout, { Tab } from '@enact/sandstone/TabLayout';\nimport { useMainState } from './MainState';\nimport SelectableVideoPlayer from './VideoPlayer';\nimport Scroller from '@enact/sandstone/Scroller';\nimport ImageItem from '@enact/sandstone/ImageItem'; // ImageItem import\nimport css from './Main.module.less';\nimport $L from '@enact/i18n/$L';\nimport {scaleToRem} from '@enact/ui/resolution';\nimport { useState, useEffect, useCallback } from 'react';\n\nconst Main = (props) => {\n    const { videoData } = useMainState();\n    const [selectedVideo, setSelectedVideo] = useState(null);\n    const [activeTab, setActiveTab] = useState('watching');\n\n    useEffect(() => {\n        console.log(videoData);\n    }, [videoData]);\n\n    const handleVideoClick = (video) => {\n        setSelectedVideo(video);\n    };\n\n    const handleClosePlayer = () => {\n        setSelectedVideo(null);\n    };\n\n    const renderImageItem = (video) => (\n        <ImageItem\n            inline\n            key={video.id}\n            label={video.title} // 비디오 제목을 레이블로 사용\n            src={video.thumbnail} // 썸네일 소스\n            style={{\n                width: scaleToRem(900),\n\t\t\t\theight: scaleToRem(588)\n            }}\n            onClick={() => handleVideoClick(video)} // 클릭 시 비디오 선택\n        >\n            \n            {video.title} {/* 비디오 제목을 표시 */}\n        </ImageItem>\n    );\n\n\n\n    return (\n        <Panel {...props}>\n            {selectedVideo && (\n                <SelectableVideoPlayer video={selectedVideo} onClose={handleClosePlayer} />\n            )}\n\n            <Scroller\n                direction=\"vertical\"\n                style={{ height: '100vh', overflowY: 'auto' }}\n            >\n                <Header title={$L('LG')} />\n\n                <TabLayout\n                    selected={activeTab}\n                    onSelect={(tabId) => {\n                        console.log('Selected Tab:', tabId);\n                        const selectedTabKey = ['watching', 'recommended', 'additional'][tabId.index];\n                        setActiveTab(selectedTabKey);\n                    }}\n                    orientation=\"horizontal\"\n                >\n                    <Tab title={$L('시청 중인 영상')}>\n                        <Scroller\n                            direction=\"vertical\"\n                            style={{ height: '1000px', overflowY: 'auto' }} // 각 탭의 스크롤 설정\n                        >\n                            <div className={css.videoGrid}>\n                                {videoData.length > 0 ? videoData.slice(0, 5).map(renderImageItem) : <BodyText>{'비디오가 없습니다.'}</BodyText>}\n                            </div>\n                        </Scroller>\n                    </Tab>\n                    <Tab title={$L('추천 영상')}>\n                        <Scroller\n                            direction=\"vertical\"\n                            style={{ height: '400px', overflowY: 'auto' }} // 각 탭의 스크롤 설정\n                        >\n                            <div className={css.videoGrid}>\n                                {videoData.length > 5 ? videoData.slice(5, 10).map(renderImageItem) : <BodyText>{'비디오가 없습니다.'}</BodyText>}\n                            </div>\n                        </Scroller>\n                    </Tab>\n                    <Tab title={$L('추가 섹션')}>\n                        <Scroller\n                            direction=\"vertical\"\n                            style={{ height: '400px', overflowY: 'auto' }} // 각 탭의 스크롤 설정\n                        >\n                            <BodyText className={css.description}>\n                                {Array(20).fill('이곳은 추가 섹션입니다. 더 많은 내용을 추가해 주세요.').map((text, index) => (\n                                    <div key={index}>{text}</div>\n                                ))}\n                            </BodyText>\n                        </Scroller>\n                    </Tab>\n                </TabLayout>\n            </Scroller>\n        </Panel>\n    );\n};\n\nexport default Main;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}