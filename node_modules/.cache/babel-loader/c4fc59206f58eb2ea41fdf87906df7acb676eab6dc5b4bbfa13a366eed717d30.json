{"ast":null,"code":"var _jsxFileName = \"/Users/meogyu/connected_front/src/App/App.js\";\nimport React, { useState } from 'react';\nimport ThemeDecorator from '@enact/sandstone/ThemeDecorator';\nimport Panels from '@enact/sandstone/Panels';\nimport Login from '../views/Login'; // Login 컴포넌트 추가\nimport Main from '../views/Main';\nimport { useBackHandler, useCloseHandler, useDocumentEvent } from './AppState';\nimport { isDevServe } from '../libs/utils';\n\n/* istanbul ignore next */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nif (isDevServe()) {\n  window.webOSSystem = {\n    highContrast: 'off',\n    close: () => {},\n    platformBack: () => {},\n    PmLogString: () => {},\n    screenOrientation: 'landscape',\n    setWindowOrientation: () => {}\n  };\n}\nconst App = props => {\n  const [skinVariants, setSkinVariants] = useState({\n    highContrast: false\n  });\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // 로그인 상태 관리\n  const handleBack = useBackHandler();\n  const handleClose = useCloseHandler();\n  useDocumentEvent(setSkinVariants);\n  const handleLogin = () => {\n    setIsLoggedIn(true); // 로그인 상태 업데이트\n  };\n\n  return /*#__PURE__*/_jsxDEV(Panels, {\n    ...props,\n    skinVariants: skinVariants,\n    onBack: handleBack,\n    onClose: handleClose,\n    children: [isLoggedIn ? /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {\n      handleLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 38\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\nexport default ThemeDecorator(App);","map":{"version":3,"names":["React","useState","ThemeDecorator","Panels","Login","Main","useBackHandler","useCloseHandler","useDocumentEvent","isDevServe","jsxDEV","_jsxDEV","window","webOSSystem","highContrast","close","platformBack","PmLogString","screenOrientation","setWindowOrientation","App","props","skinVariants","setSkinVariants","isLoggedIn","setIsLoggedIn","handleBack","handleClose","handleLogin","onBack","onClose","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/meogyu/connected_front/src/App/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ThemeDecorator from '@enact/sandstone/ThemeDecorator';\nimport Panels from '@enact/sandstone/Panels';\nimport Login from '../views/Login'; // Login 컴포넌트 추가\nimport Main from '../views/Main';\nimport { useBackHandler, useCloseHandler, useDocumentEvent } from './AppState';\nimport { isDevServe } from '../libs/utils';\n\n/* istanbul ignore next */\nif (isDevServe()) {\n    window.webOSSystem = {\n        highContrast: 'off',\n        close: () => {},\n        platformBack: () => {},\n        PmLogString: () => {},\n        screenOrientation: 'landscape',\n        setWindowOrientation: () => {}\n    };\n}\n\nconst App = (props) => {\n    const [skinVariants, setSkinVariants] = useState({ highContrast: false });\n    const [isLoggedIn, setIsLoggedIn] = useState(false); // 로그인 상태 관리\n    const handleBack = useBackHandler();\n    const handleClose = useCloseHandler();\n    useDocumentEvent(setSkinVariants);\n\n    const handleLogin = () => {\n        setIsLoggedIn(true); // 로그인 상태 업데이트\n    };\n\n    return (\n        <Panels\n            {...props}\n            skinVariants={skinVariants}\n            onBack={handleBack}\n            onClose={handleClose}\n        >\n            {isLoggedIn ? <Main /> : <Login handleLogin={handleLogin} />} {/* 조건부 렌더링 */}\n        </Panels>\n    );\n};\n\nexport default ThemeDecorator(App);\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,cAAc,MAAM,iCAAiC;AAC5D,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,KAAK,MAAM,gBAAgB,CAAC,CAAC;AACpC,OAAOC,IAAI,MAAM,eAAe;AAChC,SAASC,cAAc,EAAEC,eAAe,EAAEC,gBAAgB,QAAQ,YAAY;AAC9E,SAASC,UAAU,QAAQ,eAAe;;AAE1C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,IAAIF,UAAU,CAAC,CAAC,EAAE;EACdG,MAAM,CAACC,WAAW,GAAG;IACjBC,YAAY,EAAE,KAAK;IACnBC,KAAK,EAAEA,CAAA,KAAM,CAAC,CAAC;IACfC,YAAY,EAAEA,CAAA,KAAM,CAAC,CAAC;IACtBC,WAAW,EAAEA,CAAA,KAAM,CAAC,CAAC;IACrBC,iBAAiB,EAAE,WAAW;IAC9BC,oBAAoB,EAAEA,CAAA,KAAM,CAAC;EACjC,CAAC;AACL;AAEA,MAAMC,GAAG,GAAIC,KAAK,IAAK;EACnB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGtB,QAAQ,CAAC;IAAEa,YAAY,EAAE;EAAM,CAAC,CAAC;EACzE,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACrD,MAAMyB,UAAU,GAAGpB,cAAc,CAAC,CAAC;EACnC,MAAMqB,WAAW,GAAGpB,eAAe,CAAC,CAAC;EACrCC,gBAAgB,CAACe,eAAe,CAAC;EAEjC,MAAMK,WAAW,GAAGA,CAAA,KAAM;IACtBH,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;EACzB,CAAC;;EAED,oBACId,OAAA,CAACR,MAAM;IAAA,GACCkB,KAAK;IACTC,YAAY,EAAEA,YAAa;IAC3BO,MAAM,EAAEH,UAAW;IACnBI,OAAO,EAAEH,WAAY;IAAAI,QAAA,GAEpBP,UAAU,gBAAGb,OAAA,CAACN,IAAI;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAAGxB,OAAA,CAACP,KAAK;MAACwB,WAAW,EAAEA;IAAY;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAAC,GAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAEjB,CAAC;AAED,eAAejC,cAAc,CAACkB,GAAG,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}