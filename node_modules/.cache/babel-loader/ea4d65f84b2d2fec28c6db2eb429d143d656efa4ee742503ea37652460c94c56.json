{"ast":null,"code":"var _jsxFileName = \"/Users/meogyu/connected_front/src/views/Main.js\";\nimport React, { useState, useCallback } from 'react'; // React 임포트\nimport Alert from '@enact/sandstone/Alert';\nimport BodyText from '@enact/sandstone/BodyText';\nimport Button from '@enact/sandstone/Button';\nimport Input from '@enact/sandstone/Input';\nimport { Header, Panel } from '@enact/sandstone/Panels';\nimport { usePopup } from './MainState';\nimport css from './Main.module.less';\nimport $L from '@enact/i18n/$L';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = props => {\n  const {\n    isPopupOpen,\n    handlePopupOpen,\n    handlePopupClose\n  } = usePopup();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const handleLogin = useCallback(() => {\n    if (username && password) {\n      console.log('Logging in with', username, password);\n      handlePopupClose(); // 로그인 후 팝업 닫기\n    } else {\n      alert('Please enter both username and password.'); // 필요 시 수정\n    }\n  }, [username, password, handlePopupClose]); // 의존성 배열 추가\n\n  return /*#__PURE__*/_jsxDEV(Panel, {\n    ...props,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: $L('Login')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BodyText, {\n      children: $L('Please enter your credentials below:')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      placeholder: $L('Username'),\n      value: username,\n      onChange: e => setUsername(e.value),\n      className: css.inputField\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"password\",\n      placeholder: $L('Password'),\n      value: password,\n      onChange: e => setPassword(e.value),\n      className: css.inputField\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handlePopupOpen,\n      size: \"small\",\n      className: css.buttonCell,\n      children: $L('Open Alert')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      type: \"overlay\",\n      open: isPopupOpen,\n      onClose: handlePopupClose,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: $L('This is an alert message.')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"buttons\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          className: css.buttonCell,\n          onClick: handleLogin // useCallback으로 변경\n          ,\n          children: $L('Confirm')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          className: css.buttonCell,\n          onClick: handlePopupClose // useCallback으로 변경\n          ,\n          children: $L('Cancel')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\nexport default Main;","map":{"version":3,"names":["React","useState","useCallback","Alert","BodyText","Button","Input","Header","Panel","usePopup","css","$L","jsxDEV","_jsxDEV","Main","props","isPopupOpen","handlePopupOpen","handlePopupClose","username","setUsername","password","setPassword","handleLogin","console","log","alert","children","title","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","className","inputField","type","onClick","size","buttonCell","open","onClose"],"sources":["/Users/meogyu/connected_front/src/views/Main.js"],"sourcesContent":["import React, { useState, useCallback } from 'react'; // React 임포트\nimport Alert from '@enact/sandstone/Alert';\nimport BodyText from '@enact/sandstone/BodyText';\nimport Button from '@enact/sandstone/Button';\nimport Input from '@enact/sandstone/Input';\nimport { Header, Panel } from '@enact/sandstone/Panels';\nimport { usePopup } from './MainState';\n\nimport css from './Main.module.less';\nimport $L from '@enact/i18n/$L';\n\nconst Main = (props) => {\n    const { isPopupOpen, handlePopupOpen, handlePopupClose } = usePopup();\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleLogin = useCallback(() => {\n        if (username && password) {\n            console.log('Logging in with', username, password);\n            handlePopupClose(); // 로그인 후 팝업 닫기\n        } else {\n            alert('Please enter both username and password.'); // 필요 시 수정\n        }\n    }, [username, password, handlePopupClose]); // 의존성 배열 추가\n\n    return (\n        <Panel {...props}>\n            <Header title={$L('Login')} />\n            <BodyText>{$L('Please enter your credentials below:')}</BodyText>\n            <Input\n                placeholder={$L('Username')}\n                value={username}\n                onChange={e => setUsername(e.value)}\n                className={css.inputField}\n            />\n            <Input\n                type=\"password\"\n                placeholder={$L('Password')}\n                value={password}\n                onChange={e => setPassword(e.value)}\n                className={css.inputField}\n            />\n            <Button onClick={handlePopupOpen} size=\"small\" className={css.buttonCell}>\n                {$L('Open Alert')}\n            </Button>\n            <Alert type=\"overlay\" open={isPopupOpen} onClose={handlePopupClose}>\n                <span>{$L('This is an alert message.')}</span>\n                <buttons>\n                    <Button\n                        size=\"small\"\n                        className={css.buttonCell}\n                        onClick={handleLogin} // useCallback으로 변경\n                    >\n                        {$L('Confirm')}\n                    </Button>\n                    <Button\n                        size=\"small\"\n                        className={css.buttonCell}\n                        onClick={handlePopupClose} // useCallback으로 변경\n                    >\n                        {$L('Cancel')}\n                    </Button>\n                </buttons>\n            </Alert>\n        </Panel>\n    );\n};\n\nexport default Main;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}