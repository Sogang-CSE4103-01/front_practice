{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useSpotlightRestore = void 0;\nvar _react = require(\"react\");\nvar _SharedStateDecorator = require(\"../internal/SharedStateDecorator/SharedStateDecorator\");\nvar useSpotlightRestore = exports.useSpotlightRestore = function useSpotlightRestore(props, instances) {\n  var scrollContainerHandle = instances.scrollContainerHandle;\n  var context = (0, _react.useContext)(_SharedStateDecorator.SharedState);\n\n  // Hooks\n\n  (0, _react.useEffect)(function () {\n    // Only intended to be used within componentDidMount, this method will fetch the last stored\n    // scroll position from SharedState and scroll (without animation) to that position\n    function restoreScrollPosition() {\n      var id = props.id;\n      if (id && context && context.get) {\n        var scrollPosition = context.get(\"\".concat(id, \".scrollPosition\"));\n        if (scrollPosition) {\n          scrollContainerHandle.current.scrollTo({\n            position: scrollPosition,\n            animate: false\n          });\n        }\n      }\n    }\n    restoreScrollPosition();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","useSpotlightRestore","_react","require","_SharedStateDecorator","props","instances","scrollContainerHandle","context","useContext","SharedState","useEffect","restoreScrollPosition","id","get","scrollPosition","concat","current","scrollTo","position","animate"],"sources":["/home/connected/enact-template/node_modules/@enact/sandstone/useScroll/useSpotlight.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useSpotlightRestore = void 0;\nvar _react = require(\"react\");\nvar _SharedStateDecorator = require(\"../internal/SharedStateDecorator/SharedStateDecorator\");\nvar useSpotlightRestore = exports.useSpotlightRestore = function useSpotlightRestore(props, instances) {\n  var scrollContainerHandle = instances.scrollContainerHandle;\n  var context = (0, _react.useContext)(_SharedStateDecorator.SharedState);\n\n  // Hooks\n\n  (0, _react.useEffect)(function () {\n    // Only intended to be used within componentDidMount, this method will fetch the last stored\n    // scroll position from SharedState and scroll (without animation) to that position\n    function restoreScrollPosition() {\n      var id = props.id;\n      if (id && context && context.get) {\n        var scrollPosition = context.get(\"\".concat(id, \".scrollPosition\"));\n        if (scrollPosition) {\n          scrollContainerHandle.current.scrollTo({\n            position: scrollPosition,\n            animate: false\n          });\n        }\n      }\n    }\n    restoreScrollPosition();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n};"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,mBAAmB,GAAG,KAAK,CAAC;AACpC,IAAIC,MAAM,GAAGC,OAAO,CAAC,OAAO,CAAC;AAC7B,IAAIC,qBAAqB,GAAGD,OAAO,CAAC,uDAAuD,CAAC;AAC5F,IAAIF,mBAAmB,GAAGF,OAAO,CAACE,mBAAmB,GAAG,SAASA,mBAAmBA,CAACI,KAAK,EAAEC,SAAS,EAAE;EACrG,IAAIC,qBAAqB,GAAGD,SAAS,CAACC,qBAAqB;EAC3D,IAAIC,OAAO,GAAG,CAAC,CAAC,EAAEN,MAAM,CAACO,UAAU,EAAEL,qBAAqB,CAACM,WAAW,CAAC;;EAEvE;;EAEA,CAAC,CAAC,EAAER,MAAM,CAACS,SAAS,EAAE,YAAY;IAChC;IACA;IACA,SAASC,qBAAqBA,CAAA,EAAG;MAC/B,IAAIC,EAAE,GAAGR,KAAK,CAACQ,EAAE;MACjB,IAAIA,EAAE,IAAIL,OAAO,IAAIA,OAAO,CAACM,GAAG,EAAE;QAChC,IAAIC,cAAc,GAAGP,OAAO,CAACM,GAAG,CAAC,EAAE,CAACE,MAAM,CAACH,EAAE,EAAE,iBAAiB,CAAC,CAAC;QAClE,IAAIE,cAAc,EAAE;UAClBR,qBAAqB,CAACU,OAAO,CAACC,QAAQ,CAAC;YACrCC,QAAQ,EAAEJ,cAAc;YACxBK,OAAO,EAAE;UACX,CAAC,CAAC;QACJ;MACF;IACF;IACAR,qBAAqB,CAAC,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;AACV,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}